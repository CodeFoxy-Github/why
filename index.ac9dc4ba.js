// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

(function (modules, entry, mainEntry, parcelRequireName, globalName) {
  /* eslint-disable no-undef */
  var globalObject =
    typeof globalThis !== 'undefined'
      ? globalThis
      : typeof self !== 'undefined'
      ? self
      : typeof window !== 'undefined'
      ? window
      : typeof global !== 'undefined'
      ? global
      : {};
  /* eslint-enable no-undef */

  // Save the require from previous bundle to this closure if any
  var previousRequire =
    typeof globalObject[parcelRequireName] === 'function' &&
    globalObject[parcelRequireName];

  var cache = previousRequire.cache || {};
  // Do not use `require` to prevent Webpack from trying to bundle this call
  var nodeRequire =
    typeof module !== 'undefined' &&
    typeof module.require === 'function' &&
    module.require.bind(module);

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire =
          typeof globalObject[parcelRequireName] === 'function' &&
          globalObject[parcelRequireName];
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error("Cannot find module '" + name + "'");
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = (cache[name] = new newRequire.Module(name));

      modules[name][0].call(
        module.exports,
        localRequire,
        module,
        module.exports,
        this
      );
    }

    return cache[name].exports;

    function localRequire(x) {
      var res = localRequire.resolve(x);
      return res === false ? {} : newRequire(res);
    }

    function resolve(x) {
      var id = modules[name][1][x];
      return id != null ? id : x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [
      function (require, module) {
        module.exports = exports;
      },
      {},
    ];
  };

  Object.defineProperty(newRequire, 'root', {
    get: function () {
      return globalObject[parcelRequireName];
    },
  });

  globalObject[parcelRequireName] = newRequire;

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  if (mainEntry) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(mainEntry);

    // CommonJS
    if (typeof exports === 'object' && typeof module !== 'undefined') {
      module.exports = mainExports;

      // RequireJS
    } else if (typeof define === 'function' && define.amd) {
      define(function () {
        return mainExports;
      });

      // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }
})({"iZQ9B":[function(require,module,exports) {
var global = arguments[3];
var HMR_HOST = null;
var HMR_PORT = null;
var HMR_SECURE = false;
var HMR_ENV_HASH = "d6ea1d42532a7575";
module.bundle.HMR_BUNDLE_ID = "16df5292ac9dc4ba";
"use strict";
/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */ /*::
import type {
  HMRAsset,
  HMRMessage,
} from '@parcel/reporter-dev-server/src/HMRServer.js';
interface ParcelRequire {
  (string): mixed;
  cache: {|[string]: ParcelModule|};
  hotData: {|[string]: mixed|};
  Module: any;
  parent: ?ParcelRequire;
  isParcelRequire: true;
  modules: {|[string]: [Function, {|[string]: string|}]|};
  HMR_BUNDLE_ID: string;
  root: ParcelRequire;
}
interface ParcelModule {
  hot: {|
    data: mixed,
    accept(cb: (Function) => void): void,
    dispose(cb: (mixed) => void): void,
    // accept(deps: Array<string> | string, cb: (Function) => void): void,
    // decline(): void,
    _acceptCallbacks: Array<(Function) => void>,
    _disposeCallbacks: Array<(mixed) => void>,
  |};
}
interface ExtensionContext {
  runtime: {|
    reload(): void,
    getURL(url: string): string;
    getManifest(): {manifest_version: number, ...};
  |};
}
declare var module: {bundle: ParcelRequire, ...};
declare var HMR_HOST: string;
declare var HMR_PORT: string;
declare var HMR_ENV_HASH: string;
declare var HMR_SECURE: boolean;
declare var chrome: ExtensionContext;
declare var browser: ExtensionContext;
declare var __parcel__import__: (string) => Promise<void>;
declare var __parcel__importScripts__: (string) => Promise<void>;
declare var globalThis: typeof self;
declare var ServiceWorkerGlobalScope: Object;
*/ var OVERLAY_ID = "__parcel__error__overlay__";
var OldModule = module.bundle.Module;
function Module(moduleName) {
    OldModule.call(this, moduleName);
    this.hot = {
        data: module.bundle.hotData[moduleName],
        _acceptCallbacks: [],
        _disposeCallbacks: [],
        accept: function(fn) {
            this._acceptCallbacks.push(fn || function() {});
        },
        dispose: function(fn) {
            this._disposeCallbacks.push(fn);
        }
    };
    module.bundle.hotData[moduleName] = undefined;
}
module.bundle.Module = Module;
module.bundle.hotData = {};
var checkedAssets /*: {|[string]: boolean|} */ , assetsToDispose /*: Array<[ParcelRequire, string]> */ , assetsToAccept /*: Array<[ParcelRequire, string]> */ ;
function getHostname() {
    return HMR_HOST || (location.protocol.indexOf("http") === 0 ? location.hostname : "localhost");
}
function getPort() {
    return HMR_PORT || location.port;
}
// eslint-disable-next-line no-redeclare
var parent = module.bundle.parent;
if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== "undefined") {
    var hostname = getHostname();
    var port = getPort();
    var protocol = HMR_SECURE || location.protocol == "https:" && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? "wss" : "ws";
    var ws;
    try {
        ws = new WebSocket(protocol + "://" + hostname + (port ? ":" + port : "") + "/");
    } catch (err) {
        if (err.message) console.error(err.message);
        ws = {};
    }
    // Web extension context
    var extCtx = typeof browser === "undefined" ? typeof chrome === "undefined" ? null : chrome : browser;
    // Safari doesn't support sourceURL in error stacks.
    // eval may also be disabled via CSP, so do a quick check.
    var supportsSourceURL = false;
    try {
        (0, eval)('throw new Error("test"); //# sourceURL=test.js');
    } catch (err) {
        supportsSourceURL = err.stack.includes("test.js");
    }
    // $FlowFixMe
    ws.onmessage = async function(event /*: {data: string, ...} */ ) {
        checkedAssets = {} /*: {|[string]: boolean|} */ ;
        assetsToAccept = [];
        assetsToDispose = [];
        var data /*: HMRMessage */  = JSON.parse(event.data);
        if (data.type === "update") {
            // Remove error overlay if there is one
            if (typeof document !== "undefined") removeErrorOverlay();
            let assets = data.assets.filter((asset)=>asset.envHash === HMR_ENV_HASH);
            // Handle HMR Update
            let handled = assets.every((asset)=>{
                return asset.type === "css" || asset.type === "js" && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);
            });
            if (handled) {
                console.clear();
                // Dispatch custom event so other runtimes (e.g React Refresh) are aware.
                if (typeof window !== "undefined" && typeof CustomEvent !== "undefined") window.dispatchEvent(new CustomEvent("parcelhmraccept"));
                await hmrApplyUpdates(assets);
                // Dispose all old assets.
                let processedAssets = {} /*: {|[string]: boolean|} */ ;
                for(let i = 0; i < assetsToDispose.length; i++){
                    let id = assetsToDispose[i][1];
                    if (!processedAssets[id]) {
                        hmrDispose(assetsToDispose[i][0], id);
                        processedAssets[id] = true;
                    }
                }
                // Run accept callbacks. This will also re-execute other disposed assets in topological order.
                processedAssets = {};
                for(let i = 0; i < assetsToAccept.length; i++){
                    let id = assetsToAccept[i][1];
                    if (!processedAssets[id]) {
                        hmrAccept(assetsToAccept[i][0], id);
                        processedAssets[id] = true;
                    }
                }
            } else fullReload();
        }
        if (data.type === "error") {
            // Log parcel errors to console
            for (let ansiDiagnostic of data.diagnostics.ansi){
                let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;
                console.error("\uD83D\uDEA8 [parcel]: " + ansiDiagnostic.message + "\n" + stack + "\n\n" + ansiDiagnostic.hints.join("\n"));
            }
            if (typeof document !== "undefined") {
                // Render the fancy html overlay
                removeErrorOverlay();
                var overlay = createErrorOverlay(data.diagnostics.html);
                // $FlowFixMe
                document.body.appendChild(overlay);
            }
        }
    };
    ws.onerror = function(e) {
        if (e.message) console.error(e.message);
    };
    ws.onclose = function() {
        console.warn("[parcel] \uD83D\uDEA8 Connection to the HMR server was lost");
    };
}
function removeErrorOverlay() {
    var overlay = document.getElementById(OVERLAY_ID);
    if (overlay) {
        overlay.remove();
        console.log("[parcel] \u2728 Error resolved");
    }
}
function createErrorOverlay(diagnostics) {
    var overlay = document.createElement("div");
    overlay.id = OVERLAY_ID;
    let errorHTML = '<div style="background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;">';
    for (let diagnostic of diagnostics){
        let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame)=>{
            return `${p}
<a href="/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}" style="text-decoration: underline; color: #888" onclick="fetch(this.href); return false">${frame.location}</a>
${frame.code}`;
        }, "") : diagnostic.stack;
        errorHTML += `
      <div>
        <div style="font-size: 18px; font-weight: bold; margin-top: 20px;">
          \u{1F6A8} ${diagnostic.message}
        </div>
        <pre>${stack}</pre>
        <div>
          ${diagnostic.hints.map((hint)=>"<div>\uD83D\uDCA1 " + hint + "</div>").join("")}
        </div>
        ${diagnostic.documentation ? `<div>\u{1F4DD} <a style="color: violet" href="${diagnostic.documentation}" target="_blank">Learn more</a></div>` : ""}
      </div>
    `;
    }
    errorHTML += "</div>";
    overlay.innerHTML = errorHTML;
    return overlay;
}
function fullReload() {
    if ("reload" in location) location.reload();
    else if (extCtx && extCtx.runtime && extCtx.runtime.reload) extCtx.runtime.reload();
}
function getParents(bundle, id) /*: Array<[ParcelRequire, string]> */ {
    var modules = bundle.modules;
    if (!modules) return [];
    var parents = [];
    var k, d, dep;
    for(k in modules)for(d in modules[k][1]){
        dep = modules[k][1][d];
        if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) parents.push([
            bundle,
            k
        ]);
    }
    if (bundle.parent) parents = parents.concat(getParents(bundle.parent, id));
    return parents;
}
function updateLink(link) {
    var href = link.getAttribute("href");
    if (!href) return;
    var newLink = link.cloneNode();
    newLink.onload = function() {
        if (link.parentNode !== null) // $FlowFixMe
        link.parentNode.removeChild(link);
    };
    newLink.setAttribute("href", // $FlowFixMe
    href.split("?")[0] + "?" + Date.now());
    // $FlowFixMe
    link.parentNode.insertBefore(newLink, link.nextSibling);
}
var cssTimeout = null;
function reloadCSS() {
    if (cssTimeout) return;
    cssTimeout = setTimeout(function() {
        var links = document.querySelectorAll('link[rel="stylesheet"]');
        for(var i = 0; i < links.length; i++){
            // $FlowFixMe[incompatible-type]
            var href /*: string */  = links[i].getAttribute("href");
            var hostname = getHostname();
            var servedFromHMRServer = hostname === "localhost" ? new RegExp("^(https?:\\/\\/(0.0.0.0|127.0.0.1)|localhost):" + getPort()).test(href) : href.indexOf(hostname + ":" + getPort());
            var absolute = /^https?:\/\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;
            if (!absolute) updateLink(links[i]);
        }
        cssTimeout = null;
    }, 50);
}
function hmrDownload(asset) {
    if (asset.type === "js") {
        if (typeof document !== "undefined") {
            let script = document.createElement("script");
            script.src = asset.url + "?t=" + Date.now();
            if (asset.outputFormat === "esmodule") script.type = "module";
            return new Promise((resolve, reject)=>{
                var _document$head;
                script.onload = ()=>resolve(script);
                script.onerror = reject;
                (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);
            });
        } else if (typeof importScripts === "function") {
            // Worker scripts
            if (asset.outputFormat === "esmodule") return import(asset.url + "?t=" + Date.now());
            else return new Promise((resolve, reject)=>{
                try {
                    importScripts(asset.url + "?t=" + Date.now());
                    resolve();
                } catch (err) {
                    reject(err);
                }
            });
        }
    }
}
async function hmrApplyUpdates(assets) {
    global.parcelHotUpdate = Object.create(null);
    let scriptsToRemove;
    try {
        // If sourceURL comments aren't supported in eval, we need to load
        // the update from the dev server over HTTP so that stack traces
        // are correct in errors/logs. This is much slower than eval, so
        // we only do it if needed (currently just Safari).
        // https://bugs.webkit.org/show_bug.cgi?id=137297
        // This path is also taken if a CSP disallows eval.
        if (!supportsSourceURL) {
            let promises = assets.map((asset)=>{
                var _hmrDownload;
                return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch((err)=>{
                    // Web extension fix
                    if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != "undefined" && global instanceof ServiceWorkerGlobalScope) {
                        extCtx.runtime.reload();
                        return;
                    }
                    throw err;
                });
            });
            scriptsToRemove = await Promise.all(promises);
        }
        assets.forEach(function(asset) {
            hmrApply(module.bundle.root, asset);
        });
    } finally{
        delete global.parcelHotUpdate;
        if (scriptsToRemove) scriptsToRemove.forEach((script)=>{
            if (script) {
                var _document$head2;
                (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);
            }
        });
    }
}
function hmrApply(bundle /*: ParcelRequire */ , asset /*:  HMRAsset */ ) {
    var modules = bundle.modules;
    if (!modules) return;
    if (asset.type === "css") reloadCSS();
    else if (asset.type === "js") {
        let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];
        if (deps) {
            if (modules[asset.id]) {
                // Remove dependencies that are removed and will become orphaned.
                // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.
                let oldDeps = modules[asset.id][1];
                for(let dep in oldDeps)if (!deps[dep] || deps[dep] !== oldDeps[dep]) {
                    let id = oldDeps[dep];
                    let parents = getParents(module.bundle.root, id);
                    if (parents.length === 1) hmrDelete(module.bundle.root, id);
                }
            }
            if (supportsSourceURL) // Global eval. We would use `new Function` here but browser
            // support for source maps is better with eval.
            (0, eval)(asset.output);
            // $FlowFixMe
            let fn = global.parcelHotUpdate[asset.id];
            modules[asset.id] = [
                fn,
                deps
            ];
        } else if (bundle.parent) hmrApply(bundle.parent, asset);
    }
}
function hmrDelete(bundle, id) {
    let modules = bundle.modules;
    if (!modules) return;
    if (modules[id]) {
        // Collect dependencies that will become orphaned when this module is deleted.
        let deps = modules[id][1];
        let orphans = [];
        for(let dep in deps){
            let parents = getParents(module.bundle.root, deps[dep]);
            if (parents.length === 1) orphans.push(deps[dep]);
        }
        // Delete the module. This must be done before deleting dependencies in case of circular dependencies.
        delete modules[id];
        delete bundle.cache[id];
        // Now delete the orphans.
        orphans.forEach((id)=>{
            hmrDelete(module.bundle.root, id);
        });
    } else if (bundle.parent) hmrDelete(bundle.parent, id);
}
function hmrAcceptCheck(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {
    if (hmrAcceptCheckOne(bundle, id, depsByBundle)) return true;
    // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.
    let parents = getParents(module.bundle.root, id);
    let accepted = false;
    while(parents.length > 0){
        let v = parents.shift();
        let a = hmrAcceptCheckOne(v[0], v[1], null);
        if (a) // If this parent accepts, stop traversing upward, but still consider siblings.
        accepted = true;
        else {
            // Otherwise, queue the parents in the next level upward.
            let p = getParents(module.bundle.root, v[1]);
            if (p.length === 0) {
                // If there are no parents, then we've reached an entry without accepting. Reload.
                accepted = false;
                break;
            }
            parents.push(...p);
        }
    }
    return accepted;
}
function hmrAcceptCheckOne(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {
    var modules = bundle.modules;
    if (!modules) return;
    if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {
        // If we reached the root bundle without finding where the asset should go,
        // there's nothing to do. Mark as "accepted" so we don't reload the page.
        if (!bundle.parent) return true;
        return hmrAcceptCheck(bundle.parent, id, depsByBundle);
    }
    if (checkedAssets[id]) return true;
    checkedAssets[id] = true;
    var cached = bundle.cache[id];
    assetsToDispose.push([
        bundle,
        id
    ]);
    if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {
        assetsToAccept.push([
            bundle,
            id
        ]);
        return true;
    }
}
function hmrDispose(bundle /*: ParcelRequire */ , id /*: string */ ) {
    var cached = bundle.cache[id];
    bundle.hotData[id] = {};
    if (cached && cached.hot) cached.hot.data = bundle.hotData[id];
    if (cached && cached.hot && cached.hot._disposeCallbacks.length) cached.hot._disposeCallbacks.forEach(function(cb) {
        cb(bundle.hotData[id]);
    });
    delete bundle.cache[id];
}
function hmrAccept(bundle /*: ParcelRequire */ , id /*: string */ ) {
    // Execute the module.
    bundle(id);
    // Run the accept callbacks in the new version of the module.
    var cached = bundle.cache[id];
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) cached.hot._acceptCallbacks.forEach(function(cb) {
        var assetsToAlsoAccept = cb(function() {
            return getParents(module.bundle.root, id);
        });
        if (assetsToAlsoAccept && assetsToAccept.length) {
            assetsToAlsoAccept.forEach(function(a) {
                hmrDispose(a[0], a[1]);
            });
            // $FlowFixMe[method-unbinding]
            assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);
        }
    });
}

},{}],"aR1JP":[function(require,module,exports) {
var _stylesCss = require("./styles.css");
var _mduiCss = require("mdui/mdui.css");
var _mdui = require("mdui");
var _iconJs = require("mdui/components/icon.js");

},{"./styles.css":"lW6qc","mdui/mdui.css":"1c0Zx","mdui":"ccQrr","mdui/components/icon.js":"6YN4l"}],"lW6qc":[function() {},{}],"1c0Zx":[function() {},{}],"ccQrr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jqJs = require("./jq.js");
parcelHelpers.exportAll(_jqJs, exports);
var _avatarJs = require("./components/avatar.js");
parcelHelpers.exportAll(_avatarJs, exports);
var _badgeJs = require("./components/badge.js");
parcelHelpers.exportAll(_badgeJs, exports);
var _bottomAppBarJs = require("./components/bottom-app-bar.js");
parcelHelpers.exportAll(_bottomAppBarJs, exports);
var _buttonJs = require("./components/button.js");
parcelHelpers.exportAll(_buttonJs, exports);
var _buttonIconJs = require("./components/button-icon.js");
parcelHelpers.exportAll(_buttonIconJs, exports);
var _cardJs = require("./components/card.js");
parcelHelpers.exportAll(_cardJs, exports);
var _checkboxJs = require("./components/checkbox.js");
parcelHelpers.exportAll(_checkboxJs, exports);
var _chipJs = require("./components/chip.js");
parcelHelpers.exportAll(_chipJs, exports);
var _circularProgressJs = require("./components/circular-progress.js");
parcelHelpers.exportAll(_circularProgressJs, exports);
var _collapseJs = require("./components/collapse/collapse.js");
parcelHelpers.exportAll(_collapseJs, exports);
var _collapseItemJs = require("./components/collapse/collapse-item.js");
parcelHelpers.exportAll(_collapseItemJs, exports);
var _dialogJs = require("./components/dialog.js");
parcelHelpers.exportAll(_dialogJs, exports);
var _dividerJs = require("./components/divider.js");
parcelHelpers.exportAll(_dividerJs, exports);
var _dropdownJs = require("./components/dropdown.js");
parcelHelpers.exportAll(_dropdownJs, exports);
var _fabJs = require("./components/fab.js");
parcelHelpers.exportAll(_fabJs, exports);
var _iconJs = require("./components/icon.js");
parcelHelpers.exportAll(_iconJs, exports);
var _layoutJs = require("./components/layout.js");
parcelHelpers.exportAll(_layoutJs, exports);
var _layoutItemJs = require("./components/layout-item.js");
parcelHelpers.exportAll(_layoutItemJs, exports);
var _layoutMainJs = require("./components/layout-main.js");
parcelHelpers.exportAll(_layoutMainJs, exports);
var _linearProgressJs = require("./components/linear-progress.js");
parcelHelpers.exportAll(_linearProgressJs, exports);
var _listItemJs = require("./components/list-item.js");
parcelHelpers.exportAll(_listItemJs, exports);
var _listSubheaderJs = require("./components/list-subheader.js");
parcelHelpers.exportAll(_listSubheaderJs, exports);
var _listJs = require("./components/list.js");
parcelHelpers.exportAll(_listJs, exports);
var _menuItemJs = require("./components/menu-item.js");
parcelHelpers.exportAll(_menuItemJs, exports);
var _menuJs = require("./components/menu.js");
parcelHelpers.exportAll(_menuJs, exports);
var _navigationBarItemJs = require("./components/navigation-bar-item.js");
parcelHelpers.exportAll(_navigationBarItemJs, exports);
var _navigationBarJs = require("./components/navigation-bar.js");
parcelHelpers.exportAll(_navigationBarJs, exports);
var _navigationDrawerJs = require("./components/navigation-drawer.js");
parcelHelpers.exportAll(_navigationDrawerJs, exports);
var _navigationRailJs = require("./components/navigation-rail.js");
parcelHelpers.exportAll(_navigationRailJs, exports);
var _navigationRailItemJs = require("./components/navigation-rail-item.js");
parcelHelpers.exportAll(_navigationRailItemJs, exports);
var _radioJs = require("./components/radio.js");
parcelHelpers.exportAll(_radioJs, exports);
var _radioGroupJs = require("./components/radio-group.js");
parcelHelpers.exportAll(_radioGroupJs, exports);
var _rangeSliderJs = require("./components/range-slider.js");
parcelHelpers.exportAll(_rangeSliderJs, exports);
var _rippleJs = require("./components/ripple.js");
parcelHelpers.exportAll(_rippleJs, exports);
var _segmentedButtonJs = require("./components/segmented-button.js");
parcelHelpers.exportAll(_segmentedButtonJs, exports);
var _segmentedButtonGroupJs = require("./components/segmented-button-group.js");
parcelHelpers.exportAll(_segmentedButtonGroupJs, exports);
var _selectJs = require("./components/select.js");
parcelHelpers.exportAll(_selectJs, exports);
var _sliderJs = require("./components/slider.js");
parcelHelpers.exportAll(_sliderJs, exports);
var _snackbarJs = require("./components/snackbar.js");
parcelHelpers.exportAll(_snackbarJs, exports);
var _switchJs = require("./components/switch.js");
parcelHelpers.exportAll(_switchJs, exports);
var _tabJs = require("./components/tab.js");
parcelHelpers.exportAll(_tabJs, exports);
var _tabPanelJs = require("./components/tab-panel.js");
parcelHelpers.exportAll(_tabPanelJs, exports);
var _tabsJs = require("./components/tabs.js");
parcelHelpers.exportAll(_tabsJs, exports);
var _textFieldJs = require("./components/text-field.js");
parcelHelpers.exportAll(_textFieldJs, exports);
var _tooltipJs = require("./components/tooltip.js");
parcelHelpers.exportAll(_tooltipJs, exports);
var _topAppBarTitleJs = require("./components/top-app-bar-title.js");
parcelHelpers.exportAll(_topAppBarTitleJs, exports);
var _topAppBarJs = require("./components/top-app-bar.js");
parcelHelpers.exportAll(_topAppBarJs, exports);
var _alertJs = require("./functions/alert.js");
parcelHelpers.exportAll(_alertJs, exports);
var _breakpointJs = require("./functions/breakpoint.js");
parcelHelpers.exportAll(_breakpointJs, exports);
var _confirmJs = require("./functions/confirm.js");
parcelHelpers.exportAll(_confirmJs, exports);
var _dialogJs1 = require("./functions/dialog.js");
parcelHelpers.exportAll(_dialogJs1, exports);
var _getColorFromImageJs = require("./functions/getColorFromImage.js");
parcelHelpers.exportAll(_getColorFromImageJs, exports);
var _getThemeJs = require("./functions/getTheme.js");
parcelHelpers.exportAll(_getThemeJs, exports);
var _observeResizeJs = require("./functions/observeResize.js");
parcelHelpers.exportAll(_observeResizeJs, exports);
var _promptJs = require("./functions/prompt.js");
parcelHelpers.exportAll(_promptJs, exports);
var _removeColorSchemeJs = require("./functions/removeColorScheme.js");
parcelHelpers.exportAll(_removeColorSchemeJs, exports);
var _setColorSchemeJs = require("./functions/setColorScheme.js");
parcelHelpers.exportAll(_setColorSchemeJs, exports);
var _setThemeJs = require("./functions/setTheme.js");
parcelHelpers.exportAll(_setThemeJs, exports);
var _snackbarJs1 = require("./functions/snackbar.js");
parcelHelpers.exportAll(_snackbarJs1, exports);
var _throttleJs = require("./functions/throttle.js");
parcelHelpers.exportAll(_throttleJs, exports);

},{"./jq.js":"6PcHh","./components/avatar.js":"b3yDA","./components/badge.js":"jNhhg","./components/bottom-app-bar.js":"7Ft4J","./components/button.js":"jolHS","./components/button-icon.js":"c1x0d","./components/card.js":"cpwHR","./components/checkbox.js":"fAW8K","./components/chip.js":"bIB3P","./components/circular-progress.js":"kzQQv","./components/collapse/collapse.js":"g0ZBZ","./components/collapse/collapse-item.js":"5HBVi","./components/dialog.js":"GiXpK","./components/divider.js":"bIBbV","./components/dropdown.js":"buAB1","./components/fab.js":"6L4TD","./components/icon.js":"6YN4l","./components/layout.js":"hZdNY","./components/layout-item.js":"0YtA9","./components/layout-main.js":"hwf2G","./components/linear-progress.js":"4XkNq","./components/list-item.js":"2PYCx","./components/list-subheader.js":"l6k45","./components/list.js":"kLS9R","./components/menu-item.js":"aGd9k","./components/menu.js":"khqRo","./components/navigation-bar-item.js":"lndSV","./components/navigation-bar.js":"6H59B","./components/navigation-drawer.js":"wNUsh","./components/navigation-rail.js":"4S3Zo","./components/navigation-rail-item.js":"49Xb4","./components/radio.js":"cdiXB","./components/radio-group.js":"kgsKw","./components/range-slider.js":"2CgG9","./components/ripple.js":"bnyiI","./components/segmented-button.js":"f3vna","./components/segmented-button-group.js":"c6Xnt","./components/select.js":"a9moU","./components/slider.js":"asLdh","./components/snackbar.js":"gvluW","./components/switch.js":"jJRzO","./components/tab.js":"a9WHo","./components/tab-panel.js":"iqisH","./components/tabs.js":"1XzX8","./components/text-field.js":"aJEWE","./components/tooltip.js":"kDBEz","./components/top-app-bar-title.js":"6SBoL","./components/top-app-bar.js":"4nJEA","./functions/alert.js":"3jvA7","./functions/breakpoint.js":"4mZab","./functions/confirm.js":"hTcQ3","./functions/dialog.js":"jspWZ","./functions/getColorFromImage.js":"3a5xs","./functions/getTheme.js":"YQZ54","./functions/observeResize.js":"jbbTL","./functions/prompt.js":"dXZMs","./functions/removeColorScheme.js":"H0OK6","./functions/setColorScheme.js":"gnj45","./functions/setTheme.js":"4PTUC","./functions/snackbar.js":"jQ56X","./functions/throttle.js":"kM9OX","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6PcHh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jq = require("@mdui/jq");
parcelHelpers.exportAll(_jq, exports);

},{"@mdui/jq":"lAV5U","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lAV5U":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "$", ()=>(0, _js.$));
var _js = require("./$.js");
// $ 对象的实例方法
var _addJs = require("./methods/add.js");
var _addClassJs = require("./methods/addClass.js");
var _afterJs = require("./methods/after.js");
var _appendJs = require("./methods/append.js");
var _appendToJs = require("./methods/appendTo.js");
var _attrJs = require("./methods/attr.js");
var _beforeJs = require("./methods/before.js");
var _childrenJs = require("./methods/children.js");
var _cloneJs = require("./methods/clone.js");
var _closestJs = require("./methods/closest.js");
var _cssJs = require("./methods/css.js");
var _dataJs = require("./methods/data.js");
var _eachJs = require("./methods/each.js");
var _emptyJs = require("./methods/empty.js");
var _eqJs = require("./methods/eq.js");
var _extendJs = require("./methods/extend.js");
var _filterJs = require("./methods/filter.js");
var _findJs = require("./methods/find.js");
var _firstJs = require("./methods/first.js");
var _getJs = require("./methods/get.js");
var _hasJs = require("./methods/has.js");
var _hasClassJs = require("./methods/hasClass.js");
var _heightJs = require("./methods/height.js");
var _hideJs = require("./methods/hide.js");
var _htmlJs = require("./methods/html.js");
var _indexJs = require("./methods/index.js");
var _innerHeightJs = require("./methods/innerHeight.js");
var _innerWidthJs = require("./methods/innerWidth.js");
var _insertAfterJs = require("./methods/insertAfter.js");
var _insertBeforeJs = require("./methods/insertBefore.js");
var _isJs = require("./methods/is.js");
var _lastJs = require("./methods/last.js");
var _mapJs = require("./methods/map.js");
var _nextJs = require("./methods/next.js");
var _nextAllJs = require("./methods/nextAll.js");
var _nextUntilJs = require("./methods/nextUntil.js");
var _notJs = require("./methods/not.js");
var _offJs = require("./methods/off.js");
var _offsetJs = require("./methods/offset.js");
var _offsetParentJs = require("./methods/offsetParent.js");
var _onJs = require("./methods/on.js");
var _oneJs = require("./methods/one.js");
var _outerHeightJs = require("./methods/outerHeight.js");
var _outerWidthJs = require("./methods/outerWidth.js");
var _parentJs = require("./methods/parent.js");
var _parentsJs = require("./methods/parents.js");
var _parentsUntilJs = require("./methods/parentsUntil.js");
var _positionJs = require("./methods/position.js");
var _prependJs = require("./methods/prepend.js");
var _prependToJs = require("./methods/prependTo.js");
var _prevJs = require("./methods/prev.js");
var _prevAllJs = require("./methods/prevAll.js");
var _prevUntilJs = require("./methods/prevUntil.js");
var _propJs = require("./methods/prop.js");
var _removeJs = require("./methods/remove.js");
var _removeAttrJs = require("./methods/removeAttr.js");
var _removeClassJs = require("./methods/removeClass.js");
var _removeDataJs = require("./methods/removeData.js");
var _removePropJs = require("./methods/removeProp.js");
var _replaceAllJs = require("./methods/replaceAll.js");
var _replaceWithJs = require("./methods/replaceWith.js");
var _serializeJs = require("./methods/serialize.js");
var _serializeArrayJs = require("./methods/serializeArray.js");
var _serializeObjectJs = require("./methods/serializeObject.js");
var _showJs = require("./methods/show.js");
var _siblingsJs = require("./methods/siblings.js");
var _sliceJs = require("./methods/slice.js");
var _textJs = require("./methods/text.js");
var _toggleJs = require("./methods/toggle.js");
var _toggleClassJs = require("./methods/toggleClass.js");
var _triggerJs = require("./methods/trigger.js");
var _valJs = require("./methods/val.js");
var _widthJs = require("./methods/width.js");
// $ 函数的静态方法
var _ajaxJs = require("./static/ajax.js");
var _ajaxSetupJs = require("./static/ajaxSetup.js");
var _containsJs = require("./static/contains.js");
var _dataJs1 = require("./static/data.js");
var _eachJs1 = require("./static/each.js");
var _extendJs1 = require("./static/extend.js");
var _mapJs1 = require("./static/map.js");
var _mergeJs = require("./static/merge.js");
var _paramJs = require("./static/param.js");
var _removeDataJs1 = require("./static/removeData.js");
var _uniqueJs = require("./static/unique.js");

},{"./$.js":"dZx9v","./methods/add.js":"aC4Lq","./methods/addClass.js":"eBNUW","./methods/after.js":"b58O3","./methods/append.js":"948yF","./methods/appendTo.js":"gOUbd","./methods/attr.js":"1nh45","./methods/before.js":"lgukF","./methods/children.js":"ext9M","./methods/clone.js":"66h8c","./methods/closest.js":"6k5sD","./methods/css.js":"lzdJz","./methods/data.js":"9ddzG","./methods/each.js":"5HIxK","./methods/empty.js":"lYbtC","./methods/eq.js":"7DglL","./methods/extend.js":"fQdQs","./methods/filter.js":"kItIi","./methods/find.js":"7eUR4","./methods/first.js":"hVIJL","./methods/get.js":"bzhq8","./methods/has.js":"kI9JW","./methods/hasClass.js":"juYuF","./methods/height.js":"4Py39","./methods/hide.js":"6V66P","./methods/html.js":"hoZ58","./methods/index.js":"cfyBG","./methods/innerHeight.js":"j1kN8","./methods/innerWidth.js":"e8mrw","./methods/insertAfter.js":"6fsYX","./methods/insertBefore.js":"ehbIR","./methods/is.js":"iN2DI","./methods/last.js":"7EiWZ","./methods/map.js":"1VaRL","./methods/next.js":"l7E3x","./methods/nextAll.js":"3mT8E","./methods/nextUntil.js":"kQ3XS","./methods/not.js":"4RoCa","./methods/off.js":"8xpGy","./methods/offset.js":"ewNsa","./methods/offsetParent.js":"h3XHp","./methods/on.js":"e22Mv","./methods/one.js":"d8MQ0","./methods/outerHeight.js":"1D16I","./methods/outerWidth.js":"iBwCi","./methods/parent.js":"4VHuP","./methods/parents.js":"2RLUs","./methods/parentsUntil.js":"f5eCX","./methods/position.js":"aPh6d","./methods/prepend.js":"3N131","./methods/prependTo.js":"3MVmJ","./methods/prev.js":"5q7B3","./methods/prevAll.js":"iImnw","./methods/prevUntil.js":"8PVYQ","./methods/prop.js":"7XhxU","./methods/remove.js":"eOqqE","./methods/removeAttr.js":"j7SbH","./methods/removeClass.js":"iF0be","./methods/removeData.js":"52PHu","./methods/removeProp.js":"jBmQM","./methods/replaceAll.js":"g0bYJ","./methods/replaceWith.js":"ewdE6","./methods/serialize.js":"4idZf","./methods/serializeArray.js":"785lE","./methods/serializeObject.js":"9iiWQ","./methods/show.js":"eQqKG","./methods/siblings.js":"fcX0R","./methods/slice.js":"gOKu8","./methods/text.js":"eXyL3","./methods/toggle.js":"4ajlv","./methods/toggleClass.js":"khN8Q","./methods/trigger.js":"7Ga8J","./methods/val.js":"7FNpF","./methods/width.js":"4wNQJ","./static/ajax.js":"w96vY","./static/ajaxSetup.js":"6ExKx","./static/contains.js":"lgtfO","./static/data.js":"5znB4","./static/each.js":"clMn8","./static/extend.js":"1MM14","./static/map.js":"4kRlQ","./static/merge.js":"g8Zoj","./static/param.js":"37GdL","./static/removeData.js":"eLTiw","./static/unique.js":"iOWhT","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dZx9v":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "$", ()=>$);
var _ssrWindow = require("ssr-window");
var _coreJs = require("./shared/core.js");
var _domJs = require("./shared/dom.js");
var _helperJs = require("./shared/helper.js");
const get$ = ()=>{
    const $ = function(selector) {
        if (!selector) return new (0, _coreJs.JQ)();
        // JQ
        if (selector instanceof (0, _coreJs.JQ)) return selector;
        // function
        if ((0, _helperJs.isFunction)(selector)) {
            const document = (0, _ssrWindow.getDocument)();
            if ((0, _domJs.isDomReady)(document)) selector.call(document, $);
            else document.addEventListener("DOMContentLoaded", ()=>selector.call(document, $), {
                once: true
            });
            return new (0, _coreJs.JQ)([
                document
            ]);
        }
        // String
        if ((0, _helperJs.isString)(selector)) {
            const html = selector.trim();
            // 根据 HTML 字符串创建 JQ 对象
            if (html.startsWith("<") && html.endsWith(">")) {
                let toCreate = "div";
                const tags = {
                    li: "ul",
                    tr: "tbody",
                    td: "tr",
                    th: "tr",
                    tbody: "table",
                    option: "select"
                };
                (0, _helperJs.eachObject)(tags, (childTag, parentTag)=>{
                    if (html.startsWith(`<${childTag}`)) {
                        toCreate = parentTag;
                        return false;
                    }
                    return;
                });
                return new (0, _coreJs.JQ)((0, _domJs.getChildNodesArray)(html, toCreate));
            }
            const document = (0, _ssrWindow.getDocument)();
            // 根据 CSS 选择器创建 JQ 对象
            return new (0, _coreJs.JQ)(document.querySelectorAll(selector));
        }
        if ((0, _helperJs.isArrayLike)(selector) && !(0, _helperJs.isNode)(selector)) return new (0, _coreJs.JQ)(selector);
        return new (0, _coreJs.JQ)([
            selector
        ]);
    };
    $.fn = (0, _coreJs.JQ).prototype;
    return $;
};
const $ = get$();

},{"ssr-window":"3lyfI","./shared/core.js":"hvtjc","./shared/dom.js":"5U5Wi","./shared/helper.js":"4D489","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3lyfI":[function(require,module,exports) {
/**
 * SSR Window 4.0.2
 * Better handling for window object in SSR environment
 * https://github.com/nolimits4web/ssr-window
 *
 * Copyright 2021, Vladimir Kharlampidi
 *
 * Licensed under MIT
 *
 * Released on: December 13, 2021
 */ /* eslint-disable no-param-reassign */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "extend", ()=>extend);
parcelHelpers.export(exports, "getDocument", ()=>getDocument);
parcelHelpers.export(exports, "getWindow", ()=>getWindow);
parcelHelpers.export(exports, "ssrDocument", ()=>ssrDocument);
parcelHelpers.export(exports, "ssrWindow", ()=>ssrWindow);
function isObject(obj) {
    return obj !== null && typeof obj === "object" && "constructor" in obj && obj.constructor === Object;
}
function extend(target = {}, src = {}) {
    Object.keys(src).forEach((key)=>{
        if (typeof target[key] === "undefined") target[key] = src[key];
        else if (isObject(src[key]) && isObject(target[key]) && Object.keys(src[key]).length > 0) extend(target[key], src[key]);
    });
}
const ssrDocument = {
    body: {},
    addEventListener () {},
    removeEventListener () {},
    activeElement: {
        blur () {},
        nodeName: ""
    },
    querySelector () {
        return null;
    },
    querySelectorAll () {
        return [];
    },
    getElementById () {
        return null;
    },
    createEvent () {
        return {
            initEvent () {}
        };
    },
    createElement () {
        return {
            children: [],
            childNodes: [],
            style: {},
            setAttribute () {},
            getElementsByTagName () {
                return [];
            }
        };
    },
    createElementNS () {
        return {};
    },
    importNode () {
        return null;
    },
    location: {
        hash: "",
        host: "",
        hostname: "",
        href: "",
        origin: "",
        pathname: "",
        protocol: "",
        search: ""
    }
};
function getDocument() {
    const doc = typeof document !== "undefined" ? document : {};
    extend(doc, ssrDocument);
    return doc;
}
const ssrWindow = {
    document: ssrDocument,
    navigator: {
        userAgent: ""
    },
    location: {
        hash: "",
        host: "",
        hostname: "",
        href: "",
        origin: "",
        pathname: "",
        protocol: "",
        search: ""
    },
    history: {
        replaceState () {},
        pushState () {},
        go () {},
        back () {}
    },
    CustomEvent: function CustomEvent() {
        return this;
    },
    addEventListener () {},
    removeEventListener () {},
    getComputedStyle () {
        return {
            getPropertyValue () {
                return "";
            }
        };
    },
    Image () {},
    Date () {},
    screen: {},
    setTimeout () {},
    clearTimeout () {},
    matchMedia () {
        return {};
    },
    requestAnimationFrame (callback) {
        if (typeof setTimeout === "undefined") {
            callback();
            return null;
        }
        return setTimeout(callback, 0);
    },
    cancelAnimationFrame (id) {
        if (typeof setTimeout === "undefined") return;
        clearTimeout(id);
    }
};
function getWindow() {
    const win = typeof window !== "undefined" ? window : {};
    extend(win, ssrWindow);
    return win;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gkKU3":[function(require,module,exports) {
exports.interopDefault = function(a) {
    return a && a.__esModule ? a : {
        default: a
    };
};
exports.defineInteropFlag = function(a) {
    Object.defineProperty(a, "__esModule", {
        value: true
    });
};
exports.exportAll = function(source, dest) {
    Object.keys(source).forEach(function(key) {
        if (key === "default" || key === "__esModule" || Object.prototype.hasOwnProperty.call(dest, key)) return;
        Object.defineProperty(dest, key, {
            enumerable: true,
            get: function() {
                return source[key];
            }
        });
    });
    return dest;
};
exports.export = function(dest, destName, get) {
    Object.defineProperty(dest, destName, {
        enumerable: true,
        get: get
    });
};

},{}],"hvtjc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * 为了使用模块扩充，这里不能使用默认导出
 */ parcelHelpers.export(exports, "JQ", ()=>JQ);
var _helperJs = require("./helper.js");
class JQ {
    constructor(arr){
        this.length = 0;
        if (!arr) return this;
        (0, _helperJs.eachArray)(arr, (item, i)=>{
            this[i] = item;
        });
        this.length = arr.length;
        return this;
    }
}

},{"./helper.js":"4D489","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4D489":[function(require,module,exports) {
/**
 * 获取指定元素的标签名（小写），不存在元素的返回空字符串
 * @param element
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getNodeName", ()=>getNodeName);
parcelHelpers.export(exports, "isNodeName", ()=>isNodeName);
parcelHelpers.export(exports, "isFunction", ()=>isFunction);
parcelHelpers.export(exports, "isString", ()=>isString);
parcelHelpers.export(exports, "isNumber", ()=>isNumber);
parcelHelpers.export(exports, "isBoolean", ()=>isBoolean);
parcelHelpers.export(exports, "isUndefined", ()=>isUndefined);
parcelHelpers.export(exports, "isNull", ()=>isNull);
parcelHelpers.export(exports, "isWindow", ()=>isWindow);
parcelHelpers.export(exports, "isDocument", ()=>isDocument);
parcelHelpers.export(exports, "isElement", ()=>isElement);
parcelHelpers.export(exports, "isNode", ()=>isNode);
parcelHelpers.export(exports, "isArrayLike", ()=>isArrayLike);
parcelHelpers.export(exports, "isObjectLike", ()=>isObjectLike);
parcelHelpers.export(exports, "toElement", ()=>toElement);
parcelHelpers.export(exports, "toCamelCase", ()=>toCamelCase);
parcelHelpers.export(exports, "toKebabCase", ()=>toKebabCase);
parcelHelpers.export(exports, "returnFalse", ()=>returnFalse);
parcelHelpers.export(exports, "returnTrue", ()=>returnTrue);
parcelHelpers.export(exports, "eachArray", ()=>eachArray);
parcelHelpers.export(exports, "eachObject", ()=>eachObject);
const getNodeName = (element)=>{
    return element?.nodeName.toLowerCase() ?? "";
};
const isNodeName = (element, name)=>{
    return element?.nodeName.toLowerCase() === name.toLowerCase();
};
const isFunction = (target)=>{
    return typeof target === "function";
};
const isString = (target)=>{
    return typeof target === "string";
};
const isNumber = (target)=>{
    return typeof target === "number";
};
const isBoolean = (target)=>{
    return typeof target === "boolean";
};
const isUndefined = (target)=>{
    return typeof target === "undefined";
};
const isNull = (target)=>{
    return target === null;
};
const isWindow = (target)=>{
    return typeof Window !== "undefined" && target instanceof Window;
};
const isDocument = (target)=>{
    return typeof Document !== "undefined" && target instanceof Document;
};
const isElement = (target)=>{
    return typeof Element !== "undefined" && target instanceof Element;
};
const isNode = (target)=>{
    return typeof Node !== "undefined" && target instanceof Node;
};
const isArrayLike = (target)=>{
    return !isFunction(target) && !isWindow(target) && isNumber(target.length);
};
const isObjectLike = (target)=>{
    return typeof target === "object" && target !== null;
};
const toElement = (target)=>{
    return isDocument(target) ? target.documentElement : target;
};
const toCamelCase = (string)=>{
    return string.replace(/-([a-z])/g, (_, letter)=>{
        return letter.toUpperCase();
    });
};
const toKebabCase = (string)=>{
    if (!string) return string;
    return string.replace(/^./, string[0].toLowerCase()) // 首字母转小写
    .replace(/[A-Z]/g, (replacer)=>{
        return "-" + replacer.toLowerCase();
    });
};
const returnFalse = ()=>{
    return false;
};
const returnTrue = ()=>{
    return true;
};
const eachArray = (target, callback)=>{
    for(let i = 0; i < target.length; i += 1){
        if (callback.call(target[i], target[i], i) === false) return target;
    }
    return target;
};
const eachObject = (target, callback)=>{
    const keys = Object.keys(target);
    for(let i = 0; i < keys.length; i += 1){
        const key = keys[i];
        if (callback.call(target[key], key, target[key]) === false) return target;
    }
    return target;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5U5Wi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isDomReady", ()=>isDomReady);
parcelHelpers.export(exports, "createElement", ()=>createElement);
parcelHelpers.export(exports, "appendChild", ()=>appendChild);
parcelHelpers.export(exports, "removeChild", ()=>removeChild);
parcelHelpers.export(exports, "getChildNodesArray", ()=>getChildNodesArray);
var _ssrWindow = require("ssr-window");
const isDomReady = (document = (0, _ssrWindow.getDocument)())=>{
    return /complete|interactive/.test(document.readyState);
};
const createElement = (tagName)=>{
    const document = (0, _ssrWindow.getDocument)();
    return document.createElement(tagName);
};
const appendChild = (element, child)=>{
    return element.appendChild(child);
};
const removeChild = (element)=>{
    return element.parentNode ? element.parentNode.removeChild(element) : element;
};
const getChildNodesArray = (target, parent)=>{
    const tempParent = createElement(parent);
    tempParent.innerHTML = target;
    return [].slice.call(tempParent.childNodes);
};

},{"ssr-window":"3lyfI","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aC4Lq":[function(require,module,exports) {
var _js = require("../$.js");
var _mergeJs = require("../functions/merge.js");
var _uniqueJs = require("../functions/unique.js");
var _coreJs = require("../shared/core.js");
var _getJs = require("./get.js");
// eslint-disable-next-line
(0, _js.$).fn.add = function(selector) {
    return new (0, _coreJs.JQ)((0, _uniqueJs.unique)((0, _mergeJs.merge)(this.get(), (0, _js.$)(selector).get())));
};

},{"../$.js":"dZx9v","../functions/merge.js":"hspZw","../functions/unique.js":"7DMxN","../shared/core.js":"hvtjc","./get.js":"bzhq8"}],"hspZw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "merge", ()=>merge);
var _helperJs = require("../shared/helper.js");
const merge = (first, second)=>{
    (0, _helperJs.eachArray)(second, (value)=>{
        first.push(value);
    });
    return first;
};

},{"../shared/helper.js":"4D489","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7DMxN":[function(require,module,exports) {
/**
 * 过滤掉数组中的重复元素
 * @param arr 数组
 * @example
```js
unique([1, 2, 12, 3, 2, 1, 2, 1, 1]);
// [1, 2, 12, 3]
```
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unique", ()=>unique);
const unique = (arr)=>{
    return [
        ...new Set(arr)
    ];
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bzhq8":[function(require,module,exports) {
var _js = require("../$.js");
// eslint-disable-next-line
(0, _js.$).fn.get = function(index) {
    return index === undefined ? [].slice.call(this) : this[index >= 0 ? index : index + this.length];
};

},{"../$.js":"dZx9v"}],"eBNUW":[function(require,module,exports) {
var _js = require("../$.js");
var _attributesJs = require("../shared/attributes.js");
var _helperJs = require("../shared/helper.js");
var _eachJs = require("./each.js");
(0, _helperJs.eachArray)([
    "add",
    "remove",
    "toggle"
], (name)=>{
    (0, _js.$).fn[`${name}Class`] = function(className) {
        if (name === "remove" && !arguments.length) return this.each((_, element)=>{
            (0, _attributesJs.setAttribute)(element, "class", "");
        });
        return this.each((i, element)=>{
            if (!(0, _helperJs.isElement)(element)) return;
            const classes = ((0, _helperJs.isFunction)(className) ? className.call(element, i, (0, _attributesJs.getAttribute)(element, "class", "")) : className).split(" ").filter((name)=>name);
            (0, _helperJs.eachArray)(classes, (cls)=>{
                element.classList[name](cls);
            });
        });
    };
});

},{"../$.js":"dZx9v","../shared/attributes.js":"hHPbU","../shared/helper.js":"4D489","./each.js":"5HIxK"}],"hHPbU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getAttribute", ()=>getAttribute);
parcelHelpers.export(exports, "removeAttribute", ()=>removeAttribute);
parcelHelpers.export(exports, "setAttribute", ()=>setAttribute);
var _helperJs = require("./helper.js");
const getAttribute = (element, key, defaultValue)=>{
    const value = element.getAttribute(key);
    return (0, _helperJs.isNull)(value) ? defaultValue : value;
};
const removeAttribute = (element, key)=>{
    element.removeAttribute(key);
};
const setAttribute = (element, key, value)=>{
    (0, _helperJs.isNull)(value) ? removeAttribute(element, key) : element.setAttribute(key, value);
};

},{"./helper.js":"4D489","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5HIxK":[function(require,module,exports) {
var _js = require("../$.js");
var _helperJs = require("../shared/helper.js");
// eslint-disable-next-line
(0, _js.$).fn.each = function(callback) {
    return (0, _helperJs.eachArray)(this, (value, index)=>{
        return callback.call(value, index, value);
    });
};

},{"../$.js":"dZx9v","../shared/helper.js":"4D489"}],"b58O3":[function(require,module,exports) {
var _beforeJs = require("./before.js");

},{"./before.js":"lgukF"}],"lgukF":[function(require,module,exports) {
var _js = require("../$.js");
var _domJs = require("../shared/dom.js");
var _helperJs = require("../shared/helper.js");
var _eachJs = require("./each.js");
var _insertAfterJs = require("./insertAfter.js");
var _insertBeforeJs = require("./insertBefore.js");
/**
 * 是否不是 HTML 字符串（包裹在 <> 中）
 * @param target
 */ const isPlainText = (target)=>{
    return (0, _helperJs.isString)(target) && !(target.startsWith("<") && target.endsWith(">"));
};
(0, _helperJs.eachArray)([
    "before",
    "after"
], (name, nameIndex)=>{
    // eslint-disable-next-line
    (0, _js.$).fn[name] = function(...args) {
        // after 方法，多个参数需要按参数顺序添加到元素后面，所以需要将参数顺序反向处理
        if (nameIndex === 1) args = args.reverse();
        return this.each((index, element)=>{
            const targets = (0, _helperJs.isFunction)(args[0]) ? [
                args[0].call(element, index, element.innerHTML)
            ] : args;
            (0, _helperJs.eachArray)(targets, (target)=>{
                let $target;
                if (isPlainText(target)) $target = (0, _js.$)((0, _domJs.getChildNodesArray)(target, "div"));
                else if (index && (0, _helperJs.isElement)(target)) $target = (0, _js.$)(target.cloneNode(true));
                else $target = (0, _js.$)(target);
                $target[nameIndex ? "insertAfter" : "insertBefore"](element);
            });
        });
    };
});

},{"../$.js":"dZx9v","../shared/dom.js":"5U5Wi","../shared/helper.js":"4D489","./each.js":"5HIxK","./insertAfter.js":"6fsYX","./insertBefore.js":"ehbIR"}],"6fsYX":[function(require,module,exports) {
var _insertBeforeJs = require("./insertBefore.js");

},{"./insertBefore.js":"ehbIR"}],"ehbIR":[function(require,module,exports) {
var _js = require("../$.js");
var _helperJs = require("../shared/helper.js");
var _eachJs = require("./each.js");
var _getJs = require("./get.js");
(0, _helperJs.eachArray)([
    "insertBefore",
    "insertAfter"
], (name, nameIndex)=>{
    // eslint-disable-next-line
    (0, _js.$).fn[name] = function(target) {
        const $element = nameIndex ? (0, _js.$)(this.get().reverse()) : this; // 顺序和 jQuery 保持一致
        const $target = (0, _js.$)(target);
        const result = [];
        $target.each((index, target)=>{
            if (!target.parentNode) return;
            $element.each((_, element)=>{
                const newItem = index ? element.cloneNode(true) : element;
                const existingItem = nameIndex ? target.nextSibling : target;
                result.push(newItem);
                target.parentNode.insertBefore(newItem, existingItem);
            });
        });
        return (0, _js.$)(nameIndex ? result.reverse() : result);
    };
});

},{"../$.js":"dZx9v","../shared/helper.js":"4D489","./each.js":"5HIxK","./get.js":"bzhq8"}],"948yF":[function(require,module,exports) {
var _js = require("../$.js");
var _domJs = require("../shared/dom.js");
var _helperJs = require("../shared/helper.js");
var _afterJs = require("./after.js");
var _beforeJs = require("./before.js");
var _cloneJs = require("./clone.js");
var _eachJs = require("./each.js");
var _mapJs = require("./map.js");
var _removeJs = require("./remove.js");
(0, _helperJs.eachArray)([
    "prepend",
    "append"
], (name, nameIndex)=>{
    // eslint-disable-next-line
    (0, _js.$).fn[name] = function(...args) {
        return this.each((index, element)=>{
            const childNodes = element.childNodes;
            const childLength = childNodes.length;
            const child = childLength ? childNodes[nameIndex ? childLength - 1 : 0] : (0, _domJs.createElement)("div");
            if (!childLength) (0, _domJs.appendChild)(element, child);
            let contents = (0, _helperJs.isFunction)(args[0]) ? [
                args[0].call(element, index, element.innerHTML)
            ] : args;
            // 如果不是字符串，则仅第一个元素使用原始元素，其他的都克隆自第一个元素
            if (index) contents = contents.map((content)=>{
                return (0, _helperJs.isString)(content) ? content : (0, _js.$)(content).clone();
            });
            (0, _js.$)(child)[nameIndex ? "after" : "before"](...contents);
            if (!childLength) (0, _domJs.removeChild)(child);
        });
    };
});

},{"../$.js":"dZx9v","../shared/dom.js":"5U5Wi","../shared/helper.js":"4D489","./after.js":"b58O3","./before.js":"lgukF","./clone.js":"66h8c","./each.js":"5HIxK","./map.js":"1VaRL","./remove.js":"eOqqE"}],"66h8c":[function(require,module,exports) {
var _js = require("../$.js");
var _mapJs = require("./map.js");
(0, _js.$).fn.clone = function() {
    return this.map(function() {
        return this.cloneNode(true);
    });
};

},{"../$.js":"dZx9v","./map.js":"1VaRL"}],"1VaRL":[function(require,module,exports) {
var _js = require("../$.js");
var _mapJs = require("../functions/map.js");
var _coreJs = require("../shared/core.js");
// eslint-disable-next-line
(0, _js.$).fn.map = function(callback) {
    return new (0, _coreJs.JQ)((0, _mapJs.map)(this, (element, i)=>{
        return callback.call(element, i, element);
    }));
};

},{"../$.js":"dZx9v","../functions/map.js":"hMDLG","../shared/core.js":"hvtjc"}],"hMDLG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// eslint-disable-next-line
parcelHelpers.export(exports, "map", ()=>map);
var _ssrWindow = require("ssr-window");
var _eachJs = require("./each.js");
function map(elements, callback) {
    const window = (0, _ssrWindow.getWindow)();
    let value;
    const ret = [];
    (0, _eachJs.each)(elements, (i, element)=>{
        value = callback.call(window, element, i);
        if (value != null) ret.push(value);
    });
    return [].concat(...ret);
}

},{"ssr-window":"3lyfI","./each.js":"7x9gN","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7x9gN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// eslint-disable-next-line
parcelHelpers.export(exports, "each", ()=>each);
var _helperJs = require("../shared/helper.js");
function each(target, callback) {
    // eachArray 回调函数是 value, key，这里的 each 函数是 key, value
    return (0, _helperJs.isArrayLike)(target) ? (0, _helperJs.eachArray)(target, (value, index)=>{
        return callback.call(value, index, value);
    }) : (0, _helperJs.eachObject)(target, callback);
}

},{"../shared/helper.js":"4D489","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eOqqE":[function(require,module,exports) {
var _js = require("../$.js");
var _domJs = require("../shared/dom.js");
var _eachJs = require("./each.js");
var _isJs = require("./is.js");
(0, _js.$).fn.remove = function(selector) {
    return this.each((_, element)=>{
        if (!selector || (0, _js.$)(element).is(selector)) (0, _domJs.removeChild)(element);
    });
};

},{"../$.js":"dZx9v","../shared/dom.js":"5U5Wi","./each.js":"5HIxK","./is.js":"iN2DI"}],"iN2DI":[function(require,module,exports) {
var _js = require("../$.js");
var _helperJs = require("../shared/helper.js");
var _eachJs = require("./each.js");
// eslint-disable-next-line
(0, _js.$).fn.is = function(selector) {
    let isMatched = false;
    if ((0, _helperJs.isFunction)(selector)) {
        this.each((index, element)=>{
            if (selector.call(element, index, element)) isMatched = true;
        });
        return isMatched;
    }
    if ((0, _helperJs.isString)(selector)) {
        this.each((_, element)=>{
            if ((0, _helperJs.isDocument)(element) || (0, _helperJs.isWindow)(element)) return;
            if (element.matches.call(element, selector)) isMatched = true;
        });
        return isMatched;
    }
    const $compareWith = (0, _js.$)(selector);
    this.each((_, element)=>{
        $compareWith.each((_, compare)=>{
            if (element === compare) isMatched = true;
        });
    });
    return isMatched;
};

},{"../$.js":"dZx9v","../shared/helper.js":"4D489","./each.js":"5HIxK"}],"gOUbd":[function(require,module,exports) {
var _js = require("../$.js");
var _domJs = require("../shared/dom.js");
var _helperJs = require("../shared/helper.js");
var _insertAfterJs = require("./insertAfter.js");
var _insertBeforeJs = require("./insertBefore.js");
var _mapJs = require("./map.js");
var _removeJs = require("./remove.js");
(0, _helperJs.eachArray)([
    "appendTo",
    "prependTo"
], (name, nameIndex)=>{
    // eslint-disable-next-line
    (0, _js.$).fn[name] = function(target) {
        const extraChilds = [];
        const $target = (0, _js.$)(target).map((_, element)=>{
            const childNodes = element.childNodes;
            const childLength = childNodes.length;
            if (childLength) return childNodes[nameIndex ? 0 : childLength - 1];
            const child = (0, _domJs.createElement)("div");
            (0, _domJs.appendChild)(element, child);
            extraChilds.push(child);
            return child;
        });
        const $result = this[nameIndex ? "insertBefore" : "insertAfter"]($target);
        (0, _js.$)(extraChilds).remove();
        return $result;
    };
});

},{"../$.js":"dZx9v","../shared/dom.js":"5U5Wi","../shared/helper.js":"4D489","./insertAfter.js":"6fsYX","./insertBefore.js":"ehbIR","./map.js":"1VaRL","./remove.js":"eOqqE"}],"1nh45":[function(require,module,exports) {
var _js = require("../$.js");
var _attributesJs = require("../shared/attributes.js");
var _cssJs = require("../shared/css.js");
var _helperJs = require("../shared/helper.js");
var _eachJs = require("./each.js");
(0, _helperJs.eachArray)([
    "attr",
    "prop",
    "css"
], (name, nameIndex)=>{
    // eslint-disable-next-line
    const set = (element, key, value)=>{
        // 值为 undefined 时，不修改
        if ((0, _helperJs.isUndefined)(value)) return;
        // attr
        if (nameIndex === 0) return (0, _attributesJs.setAttribute)(element, key, value);
        // prop
        if (nameIndex === 1) {
            // @ts-ignore
            element[key] = value;
            return;
        }
        // css
        key = (0, _helperJs.toKebabCase)(key);
        // 获取默认后缀。以 -- 开头的为 CSS 变量，不添加后缀；值为数值类型的不添加后缀
        const getSuffix = ()=>key.startsWith("--") || (0, _cssJs.cssNumber).includes(key) ? "" : "px";
        element.style.setProperty(key, (0, _helperJs.isNumber)(value) ? `${value}${getSuffix()}` : value);
    };
    // eslint-disable-next-line
    const get = (element, key)=>{
        // attr
        if (nameIndex === 0) // 属性不存在时，原生 getAttribute 方法返回 null，而 jquery 返回 undefined。这里和 jquery 保持一致
        return (0, _attributesJs.getAttribute)(element, key);
        // prop
        if (nameIndex === 1) // @ts-ignore
        return element[key];
        return (0, _cssJs.getStyle)(element, key);
    };
    (0, _js.$).fn[name] = function(key, // eslint-disable-next-line
    value) {
        if ((0, _helperJs.isObjectLike)(key)) {
            (0, _helperJs.eachObject)(key, (k, v)=>{
                // @ts-ignore
                this[name](k, v);
            });
            return this;
        }
        if (arguments.length === 1) {
            const element = this[0];
            return (0, _helperJs.isElement)(element) ? get(element, key) : undefined;
        }
        return this.each((i, element)=>{
            set(element, key, (0, _helperJs.isFunction)(value) ? value.call(element, i, get(element, key)) : value);
        });
    };
});

},{"../$.js":"dZx9v","../shared/attributes.js":"hHPbU","../shared/css.js":"79Mtq","../shared/helper.js":"4D489","./each.js":"5HIxK"}],"79Mtq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getComputedStyleValue", ()=>getComputedStyleValue);
parcelHelpers.export(exports, "isBorderBox", ()=>isBorderBox);
parcelHelpers.export(exports, "getExtraWidth", ()=>getExtraWidth);
parcelHelpers.export(exports, "getStyle", ()=>getStyle);
parcelHelpers.export(exports, "cssNumber", ()=>cssNumber);
var _ssrWindow = require("ssr-window");
var _helperJs = require("./helper.js");
const getComputedStyleValue = (element, name)=>{
    const window = (0, _ssrWindow.getWindow)();
    return window.getComputedStyle(element).getPropertyValue((0, _helperJs.toKebabCase)(name));
};
const isBorderBox = (element)=>{
    return getComputedStyleValue(element, "box-sizing") === "border-box";
};
const getExtraWidth = (element, direction, extra)=>{
    const position = direction === "width" ? [
        "Left",
        "Right"
    ] : [
        "Top",
        "Bottom"
    ];
    return [
        0,
        1
    ].reduce((prev, _, index)=>{
        let prop = extra + position[index];
        if (extra === "border") prop += "Width";
        return prev + parseFloat(getComputedStyleValue(element, prop) || "0");
    }, 0);
};
const getStyle = (element, name)=>{
    // width、height 属性使用 getComputedStyle 得到的值不准确，需要使用 getBoundingClientRect 获取
    if (name === "width" || name === "height") {
        const valueNumber = element.getBoundingClientRect()[name];
        if (isBorderBox(element)) return `${valueNumber}px`;
        return `${valueNumber - getExtraWidth(element, name, "border") - getExtraWidth(element, name, "padding")}px`;
    }
    return getComputedStyleValue(element, name);
};
const cssNumber = [
    "animation-iteration-count",
    "column-count",
    "fill-opacity",
    "flex-grow",
    "flex-shrink",
    "font-weight",
    "grid-area",
    "grid-column",
    "grid-column-end",
    "grid-column-start",
    "grid-row",
    "grid-row-end",
    "grid-row-start",
    "line-height",
    "opacity",
    "order",
    "orphans",
    "widows",
    "z-index",
    "zoom"
];

},{"ssr-window":"3lyfI","./helper.js":"4D489","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ext9M":[function(require,module,exports) {
var _js = require("../$.js");
var _uniqueJs = require("../functions/unique.js");
var _coreJs = require("../shared/core.js");
var _helperJs = require("../shared/helper.js");
var _eachJs = require("./each.js");
var _isJs = require("./is.js");
(0, _js.$).fn.children = function(selector) {
    const children = [];
    this.each((_, element)=>{
        (0, _helperJs.eachArray)(element.childNodes, (childNode)=>{
            if (!(0, _helperJs.isElement)(childNode)) return;
            if (!selector || (0, _js.$)(childNode).is(selector)) children.push(childNode);
        });
    });
    return new (0, _coreJs.JQ)((0, _uniqueJs.unique)(children));
};

},{"../$.js":"dZx9v","../functions/unique.js":"7DMxN","../shared/core.js":"hvtjc","../shared/helper.js":"4D489","./each.js":"5HIxK","./is.js":"iN2DI"}],"6k5sD":[function(require,module,exports) {
var _js = require("../$.js");
var _coreJs = require("../shared/core.js");
var _eqJs = require("./eq.js");
var _isJs = require("./is.js");
var _parentsJs = require("./parents.js");
// eslint-disable-next-line
(0, _js.$).fn.closest = function(selector) {
    if (this.is(selector)) return this;
    const matched = [];
    this.parents().each((_, element)=>{
        if ((0, _js.$)(element).is(selector)) {
            matched.push(element);
            return false;
        }
    });
    return new (0, _coreJs.JQ)(matched);
};

},{"../$.js":"dZx9v","../shared/core.js":"hvtjc","./eq.js":"7DglL","./is.js":"iN2DI","./parents.js":"2RLUs"}],"7DglL":[function(require,module,exports) {
var _js = require("../$.js");
var _coreJs = require("../shared/core.js");
var _sliceJs = require("./slice.js");
(0, _js.$).fn.eq = function(index) {
    const ret = index === -1 ? this.slice(index) : this.slice(index, +index + 1);
    return new (0, _coreJs.JQ)(ret);
};

},{"../$.js":"dZx9v","../shared/core.js":"hvtjc","./slice.js":"gOKu8"}],"gOKu8":[function(require,module,exports) {
var _js = require("../$.js");
var _coreJs = require("../shared/core.js");
(0, _js.$).fn.slice = function(...args) {
    return new (0, _coreJs.JQ)([].slice.apply(this, args));
};

},{"../$.js":"dZx9v","../shared/core.js":"hvtjc"}],"2RLUs":[function(require,module,exports) {
var _parentJs = require("./parent.js");

},{"./parent.js":"4VHuP"}],"4VHuP":[function(require,module,exports) {
var _js = require("../$.js");
var _helperJs = require("../shared/helper.js");
var _getJs = require("./get.js");
var _dirJs = require("./utils/dir.js");
(0, _helperJs.eachArray)([
    "",
    "s",
    "sUntil"
], (name, nameIndex)=>{
    (0, _js.$).fn[`parent${name}`] = function(// eslint-disable-next-line
    selector, filter) {
        // parents、parentsUntil 需要把元素的顺序反向处理，以便和 jQuery 的结果一致
        const $nodes = !nameIndex ? this : (0, _js.$)(this.get().reverse());
        return (0, _dirJs.dir)($nodes, nameIndex, "parentNode", selector, filter);
    };
});

},{"../$.js":"dZx9v","../shared/helper.js":"4D489","./get.js":"bzhq8","./utils/dir.js":"eTOx1"}],"eTOx1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "dir", ()=>dir);
var _js = require("../../$.js");
var _uniqueJs = require("../../functions/unique.js");
var _coreJs = require("../../shared/core.js");
var _helperJs = require("../../shared/helper.js");
var _eachJs = require("../each.js");
var _isJs = require("../is.js");
const dir = ($elements, nameIndex, node, // eslint-disable-next-line
selector, filter)=>{
    const ret = [];
    let target;
    $elements.each((_, element)=>{
        target = element[node];
        // 不能包含最顶层的 document 元素
        while(target && (0, _helperJs.isElement)(target)){
            // prevUntil, nextUntil, parentsUntil
            if (nameIndex === 2) {
                if (selector && (0, _js.$)(target).is(selector)) break;
                if (!filter || (0, _js.$)(target).is(filter)) ret.push(target);
            } else if (nameIndex === 0) {
                if (!selector || (0, _js.$)(target).is(selector)) ret.push(target);
                break;
            } else if (!selector || (0, _js.$)(target).is(selector)) ret.push(target);
            target = target[node];
        }
    });
    return new (0, _coreJs.JQ)((0, _uniqueJs.unique)(ret));
};

},{"../../$.js":"dZx9v","../../functions/unique.js":"7DMxN","../../shared/core.js":"hvtjc","../../shared/helper.js":"4D489","../each.js":"5HIxK","../is.js":"iN2DI","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lzdJz":[function(require,module,exports) {
var _attrJs = require("./attr.js");

},{"./attr.js":"1nh45"}],"9ddzG":[function(require,module,exports) {
var _js = require("../$.js");
var _dataJs = require("../shared/data.js");
var _helperJs = require("../shared/helper.js");
var _eachJs = require("./each.js");
// eslint-disable-next-line
(0, _js.$).fn.data = function(key, value) {
    // 获取所有值
    if ((0, _helperJs.isUndefined)(key)) {
        if (!this.length) return undefined;
        const element = this[0];
        const resultData = (0, _dataJs.getAll)(element);
        // window, document 上不存在 `dataset`
        if (element.nodeType !== 1) return resultData;
        // 若值未通过 data 方法设置，则从 `dataset` 中获取值。dataset 中读取的 key 会自动转为驼峰法
        (0, _helperJs.eachObject)(element.dataset, (key)=>{
            resultData[key] = (0, _dataJs.dataAttr)(element, key, resultData[key]);
        });
        return resultData;
    }
    // 同时设置多个值
    if ((0, _helperJs.isObjectLike)(key)) return this.each(function() {
        (0, _dataJs.setAll)(this, key);
    });
    // value 传入了 undefined
    if (arguments.length === 2 && (0, _helperJs.isUndefined)(value)) return this;
    // 设置值
    if (!(0, _helperJs.isUndefined)(value)) return this.each(function() {
        (0, _dataJs.set)(this, key, value);
    });
    // 获取值
    if (!this.length) return undefined;
    return (0, _dataJs.dataAttr)(this[0], (0, _helperJs.toCamelCase)(key), (0, _dataJs.get)(this[0], key));
};

},{"../$.js":"dZx9v","../shared/data.js":"9daIX","../shared/helper.js":"4D489","./each.js":"5HIxK"}],"9daIX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getAll", ()=>getAll);
parcelHelpers.export(exports, "get", ()=>get);
parcelHelpers.export(exports, "setAll", ()=>setAll);
parcelHelpers.export(exports, "set", ()=>set);
parcelHelpers.export(exports, "removeAll", ()=>removeAll);
parcelHelpers.export(exports, "removeMultiple", ()=>removeMultiple);
parcelHelpers.export(exports, "dataAttr", ()=>dataAttr);
var _helperJs = require("./helper.js");
const weakMap = new WeakMap();
const getAll = (element)=>{
    return weakMap.get(element) ?? {};
};
const get = (element, keyOriginal)=>{
    const data = getAll(element);
    const key = (0, _helperJs.toCamelCase)(keyOriginal);
    return key in data ? data[key] : undefined;
};
const setAll = (element, object)=>{
    const data = getAll(element);
    (0, _helperJs.eachObject)(object, (keyOriginal, value)=>{
        data[(0, _helperJs.toCamelCase)(keyOriginal)] = value;
    });
    weakMap.set(element, data);
};
const set = (element, keyOriginal, value)=>{
    setAll(element, {
        [keyOriginal]: value
    });
};
const removeAll = (element)=>{
    weakMap.delete(element);
};
const removeMultiple = (element, keysOriginal)=>{
    const data = getAll(element);
    (0, _helperJs.eachArray)(keysOriginal, (keyOriginal)=>{
        const key = (0, _helperJs.toCamelCase)(keyOriginal);
        delete data[key];
    });
    weakMap.set(element, data);
};
const rbrace = /^(?:{[\w\W]*\}|\[[\w\W]*\])$/;
/**
 * dataset 中的值读取时进行转换
 * @param value
 */ const stringTransform = (value)=>{
    if (value === "true") return true;
    if (value === "false") return false;
    if (value === "null") return null;
    if (value === +value + "") return +value;
    if (rbrace.test(value)) return JSON.parse(value);
    return value;
};
const dataAttr = (element, key, value)=>{
    if ((0, _helperJs.isUndefined)(value) && element.nodeType === 1) {
        value = element.dataset[key];
        if ((0, _helperJs.isString)(value)) try {
            value = stringTransform(value);
        } catch (e) {}
    }
    return value;
};

},{"./helper.js":"4D489","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lYbtC":[function(require,module,exports) {
var _js = require("../$.js");
var _eachJs = require("./each.js");
(0, _js.$).fn.empty = function() {
    return this.each((_, element)=>{
        element.innerHTML = "";
    });
};

},{"../$.js":"dZx9v","./each.js":"5HIxK"}],"fQdQs":[function(require,module,exports) {
var _js = require("../$.js");
var _helperJs = require("../shared/helper.js");
(0, _js.$).fn.extend = function(obj) {
    (0, _helperJs.eachObject)(obj, (prop, value)=>{
        // 在 JQ 对象上扩展方法时，需要自己添加 typescript 的类型定义
        (0, _js.$).fn[prop] = value;
    });
    return this;
};

},{"../$.js":"dZx9v","../shared/helper.js":"4D489"}],"kItIi":[function(require,module,exports) {
var _js = require("../$.js");
var _helperJs = require("../shared/helper.js");
var _isJs = require("./is.js");
var _mapJs = require("./map.js");
// eslint-disable-next-line
(0, _js.$).fn.filter = function(selector) {
    if ((0, _helperJs.isFunction)(selector)) return this.map((index, element)=>{
        return selector.call(element, index, element) ? element : undefined;
    });
    if ((0, _helperJs.isString)(selector)) return this.map((_, element)=>{
        return (0, _js.$)(element).is(selector) ? element : undefined;
    });
    const $selector = (0, _js.$)(selector);
    return this.map((_, element)=>{
        return $selector.get().includes(element) ? element : undefined;
    });
};

},{"../$.js":"dZx9v","../shared/helper.js":"4D489","./is.js":"iN2DI","./map.js":"1VaRL"}],"7eUR4":[function(require,module,exports) {
var _js = require("../$.js");
var _mergeJs = require("../functions/merge.js");
var _coreJs = require("../shared/core.js");
var _eachJs = require("./each.js");
var _getJs = require("./get.js");
(0, _js.$).fn.find = function(selector) {
    const foundElements = [];
    this.each((_, element)=>{
        (0, _mergeJs.merge)(foundElements, (0, _js.$)(element.querySelectorAll(selector)).get());
    });
    return new (0, _coreJs.JQ)(foundElements);
};

},{"../$.js":"dZx9v","../functions/merge.js":"hspZw","../shared/core.js":"hvtjc","./each.js":"5HIxK","./get.js":"bzhq8"}],"hVIJL":[function(require,module,exports) {
var _js = require("../$.js");
var _eqJs = require("./eq.js");
(0, _js.$).fn.first = function() {
    return this.eq(0);
};

},{"../$.js":"dZx9v","./eq.js":"7DglL"}],"kI9JW":[function(require,module,exports) {
var _js = require("../$.js");
var _containsJs = require("../functions/contains.js");
var _helperJs = require("../shared/helper.js");
var _findJs = require("./find.js");
var _mapJs = require("./map.js");
(0, _js.$).fn.has = function(selector) {
    const $targets = (0, _helperJs.isString)(selector) ? this.find(selector) : (0, _js.$)(selector);
    const { length } = $targets;
    return this.map(function() {
        for(let i = 0; i < length; i += 1){
            if ((0, _containsJs.contains)(this, $targets[i])) return this;
        }
        return;
    });
};

},{"../$.js":"dZx9v","../functions/contains.js":"39xTL","../shared/helper.js":"4D489","./find.js":"7eUR4","./map.js":"1VaRL"}],"39xTL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "contains", ()=>contains);
var _helperJs = require("../shared/helper.js");
const contains = (container, contains)=>{
    return container !== contains && (0, _helperJs.toElement)(container).contains(contains);
};

},{"../shared/helper.js":"4D489","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"juYuF":[function(require,module,exports) {
var _js = require("../$.js");
(0, _js.$).fn.hasClass = function(className) {
    return this[0].classList.contains(className);
};

},{"../$.js":"dZx9v"}],"4Py39":[function(require,module,exports) {
var _widthJs = require("./width.js");

},{"./width.js":"4wNQJ"}],"4wNQJ":[function(require,module,exports) {
var _ssrWindow = require("ssr-window");
var _js = require("../$.js");
var _cssJs = require("../shared/css.js");
var _helperJs = require("../shared/helper.js");
var _cssJs1 = require("./css.js");
var _eachJs = require("./each.js");
/**
 * 值上面的 padding、border、margin 处理
 * @param element
 * @param name
 * @param value
 * @param funcIndex
 * @param includeMargin
 * @param multiply
 */ const handleExtraWidth = (element, name, value, funcIndex, includeMargin, multiply)=>{
    // 获取元素的 padding, border, margin 宽度（两侧宽度的和）
    const getExtraWidthValue = (extra)=>{
        return (0, _cssJs.getExtraWidth)(element, name.toLowerCase(), extra) * multiply;
    };
    if (funcIndex === 2 && includeMargin) value += getExtraWidthValue("margin");
    if ((0, _cssJs.isBorderBox)(element)) {
        if (funcIndex === 0) value -= getExtraWidthValue("border");
        if (funcIndex === 1) {
            value -= getExtraWidthValue("border");
            value -= getExtraWidthValue("padding");
        }
    } else {
        if (funcIndex === 0) value += getExtraWidthValue("padding");
        if (funcIndex === 2) {
            value += getExtraWidthValue("border");
            value += getExtraWidthValue("padding");
        }
    }
    return value;
};
/**
 * 获取元素的样式值
 * @param element
 * @param name
 * @param funcIndex 0: innerWidth, innerHeight; 1: width, height; 2: outerWidth, outerHeight
 * @param includeMargin
 */ const get = (element, name, funcIndex, includeMargin)=>{
    const document = (0, _ssrWindow.getDocument)();
    const clientProp = `client${name}`;
    const scrollProp = `scroll${name}`;
    const offsetProp = `offset${name}`;
    const innerProp = `inner${name}`;
    // $(window).width()
    if ((0, _helperJs.isWindow)(element)) // outerWidth, outerHeight 需要包含滚动条的宽度
    return funcIndex === 2 ? element[innerProp] : (0, _helperJs.toElement)(document)[clientProp];
    // $(document).width()
    if ((0, _helperJs.isDocument)(element)) {
        const doc = (0, _helperJs.toElement)(element);
        return Math.max(// @ts-ignore
        element.body[scrollProp], doc[scrollProp], // @ts-ignore
        element.body[offsetProp], doc[offsetProp], doc[clientProp]);
    }
    const value = parseFloat((0, _cssJs.getComputedStyleValue)(element, name.toLowerCase()) || "0");
    return handleExtraWidth(element, name, value, funcIndex, includeMargin, 1);
};
/**
 * 设置元素的样式值
 * @param element
 * @param elementIndex
 * @param name
 * @param funcIndex 0: innerWidth, innerHeight; 1: width, height; 2: outerWidth, outerHeight
 * @param includeMargin
 * @param value
 */ const set = (element, elementIndex, name, funcIndex, includeMargin, value)=>{
    let computedValue = (0, _helperJs.isFunction)(value) ? value.call(element, elementIndex, get(element, name, funcIndex, includeMargin)) : value;
    if (computedValue == null) return;
    const $element = (0, _js.$)(element);
    const dimension = name.toLowerCase();
    // 特殊的值，不需要计算 padding、border、margin
    if ((0, _helperJs.isString)(computedValue) && [
        "auto",
        "inherit",
        ""
    ].includes(computedValue)) {
        $element.css(dimension, computedValue);
        return;
    }
    // 其他值保留原始单位。注意：如果不使用 px 作为单位，则算出的值一般是不准确的
    const suffix = computedValue.toString().replace(/\b[0-9.]*/, "");
    const numerical = parseFloat(computedValue);
    computedValue = handleExtraWidth(element, name, numerical, funcIndex, includeMargin, -1) + (suffix || "px");
    $element.css(dimension, computedValue);
};
(0, _helperJs.eachArray)([
    "Width",
    "Height"
], (name)=>{
    (0, _helperJs.eachArray)([
        `inner${name}`,
        name.toLowerCase(),
        `outer${name}`
    ], (funcName, funcIndex)=>{
        (0, _js.$).fn[funcName] = function(// eslint-disable-next-line
        margin, // eslint-disable-next-line
        value) {
            // 是否是赋值操作
            const isSet = arguments.length && (funcIndex < 2 || !(0, _helperJs.isBoolean)(margin));
            const includeMargin = margin === true || value === true;
            // 获取第一个元素的值
            if (!isSet) return this.length ? get(this[0], name, funcIndex, includeMargin) : undefined;
            // 设置每个元素的值
            return this.each((index, element)=>{
                return set(element, index, name, funcIndex, includeMargin, margin);
            });
        };
    });
});

},{"ssr-window":"3lyfI","../$.js":"dZx9v","../shared/css.js":"79Mtq","../shared/helper.js":"4D489","./css.js":"lzdJz","./each.js":"5HIxK"}],"6V66P":[function(require,module,exports) {
var _js = require("../$.js");
var _eachJs = require("./each.js");
(0, _js.$).fn.hide = function() {
    return this.each((_, element)=>{
        element.style.display = "none";
    });
};

},{"../$.js":"dZx9v","./each.js":"5HIxK"}],"hoZ58":[function(require,module,exports) {
var _valJs = require("./val.js");

},{"./val.js":"7FNpF"}],"7FNpF":[function(require,module,exports) {
var _js = require("../$.js");
var _mapJs = require("../functions/map.js");
var _helperJs = require("../shared/helper.js");
var _eachJs = require("./each.js");
var _findJs = require("./find.js");
var _isJs = require("./is.js");
(0, _helperJs.eachArray)([
    "val",
    "html",
    "text"
], (name, nameIndex)=>{
    const props = [
        "value",
        "innerHTML",
        "textContent"
    ];
    const propName = props[nameIndex];
    // eslint-disable-next-line
    const get = ($elements)=>{
        // text() 获取所有元素的文本
        if (nameIndex === 2) return (0, _mapJs.map)($elements, (element)=>{
            return (0, _helperJs.toElement)(element)[propName];
        }).join("");
        // 空集合时，val() 和 html() 返回 undefined
        if (!$elements.length) return undefined;
        // val() 和 html() 仅获取第一个元素的内容
        const firstElement = $elements[0];
        const $firstElement = (0, _js.$)(firstElement);
        // select multiple 返回数组
        if (nameIndex === 0 && $firstElement.is("select[multiple]")) return (0, _mapJs.map)($firstElement.find("option:checked"), (element)=>element.value);
        // @ts-ignore
        return firstElement[propName];
    };
    // eslint-disable-next-line
    const set = (element, value)=>{
        // text() 和 html() 赋值为 undefined，则保持原内容不变
        // val() 赋值为 undefined 则赋值为空
        if ((0, _helperJs.isUndefined)(value)) {
            if (nameIndex !== 0) return;
            value = "";
        }
        if (nameIndex === 1 && (0, _helperJs.isElement)(value)) value = value.outerHTML;
        // @ts-ignore
        element[propName] = value;
    };
    // eslint-disable-next-line
    (0, _js.$).fn[name] = function(value) {
        // 获取值
        if (!arguments.length) return get(this);
        // 设置值
        return this.each((i, element)=>{
            const $element = (0, _js.$)(element);
            const computedValue = (0, _helperJs.isFunction)(value) ? value.call(element, i, get($element)) : value;
            // value 是数组，则选中数组中的元素，反选不在数组中的元素
            if (nameIndex === 0 && Array.isArray(computedValue)) {
                // select[multiple]
                if ($element.is("select[multiple]")) (0, _mapJs.map)($element.find("option"), (option)=>{
                    return option.selected = computedValue.includes(option.value);
                });
                else element.checked = computedValue.includes(element.value);
            } else set(element, computedValue);
        });
    };
});

},{"../$.js":"dZx9v","../functions/map.js":"hMDLG","../shared/helper.js":"4D489","./each.js":"5HIxK","./find.js":"7eUR4","./is.js":"iN2DI"}],"cfyBG":[function(require,module,exports) {
var _js = require("../$.js");
var _helperJs = require("../shared/helper.js");
var _childrenJs = require("./children.js");
var _eqJs = require("./eq.js");
var _getJs = require("./get.js");
var _parentJs = require("./parent.js");
// eslint-disable-next-line
(0, _js.$).fn.index = function(selector) {
    if (!arguments.length) return this.eq(0).parent().children().get().indexOf(this[0]);
    if ((0, _helperJs.isString)(selector)) return (0, _js.$)(selector).get().indexOf(this[0]);
    return this.get().indexOf((0, _js.$)(selector)[0]);
};

},{"../$.js":"dZx9v","../shared/helper.js":"4D489","./children.js":"ext9M","./eq.js":"7DglL","./get.js":"bzhq8","./parent.js":"4VHuP"}],"j1kN8":[function(require,module,exports) {
var _widthJs = require("./width.js");

},{"./width.js":"4wNQJ"}],"e8mrw":[function(require,module,exports) {
var _widthJs = require("./width.js");

},{"./width.js":"4wNQJ"}],"7EiWZ":[function(require,module,exports) {
var _js = require("../$.js");
var _eqJs = require("./eq.js");
(0, _js.$).fn.last = function() {
    return this.eq(-1);
};

},{"../$.js":"dZx9v","./eq.js":"7DglL"}],"l7E3x":[function(require,module,exports) {
var _js = require("../$.js");
var _helperJs = require("../shared/helper.js");
var _dirJs = require("./utils/dir.js");
(0, _helperJs.eachArray)([
    "",
    "All",
    "Until"
], (name, nameIndex)=>{
    (0, _js.$).fn[`next${name}`] = function(// eslint-disable-next-line
    selector, filter) {
        return (0, _dirJs.dir)(this, nameIndex, "nextElementSibling", selector, filter);
    };
});

},{"../$.js":"dZx9v","../shared/helper.js":"4D489","./utils/dir.js":"eTOx1"}],"3mT8E":[function(require,module,exports) {
var _nextJs = require("./next.js");

},{"./next.js":"l7E3x"}],"kQ3XS":[function(require,module,exports) {
var _nextJs = require("./next.js");

},{"./next.js":"l7E3x"}],"4RoCa":[function(require,module,exports) {
var _js = require("../$.js");
var _filterJs = require("./filter.js");
var _mapJs = require("./map.js");
var _indexJs = require("./index.js");
// eslint-disable-next-line
(0, _js.$).fn.not = function(selector) {
    const $excludes = this.filter(selector);
    return this.map((_, element)=>{
        return $excludes.index(element) > -1 ? undefined : element;
    });
};

},{"../$.js":"dZx9v","./filter.js":"kItIi","./map.js":"1VaRL","./index.js":"cfyBG"}],"8xpGy":[function(require,module,exports) {
var _js = require("../$.js");
var _eventJs = require("../shared/event.js");
var _helperJs = require("../shared/helper.js");
var _eachJs = require("./each.js");
(0, _js.$).fn.off = function(types, // eslint-disable-next-line
selector, // eslint-disable-next-line
callback) {
    // types 是对象
    if ((0, _helperJs.isObjectLike)(types)) {
        (0, _helperJs.eachObject)(types, (type, fn)=>{
            // this.off('click', undefined, function () {})
            // this.off('click', '.box', function () {})
            this.off(type, selector, fn);
        });
        return this;
    }
    // selector 不存在
    if (selector === false || (0, _helperJs.isFunction)(selector)) {
        callback = selector;
        selector = undefined;
    // this.off('click', undefined, function () {})
    }
    // callback 传入 `false`，相当于 `return false`
    if (callback === false) callback = (0, _helperJs.returnFalse);
    return this.each(function() {
        (0, _eventJs.remove)(this, types, callback, selector);
    });
};

},{"../$.js":"dZx9v","../shared/event.js":"aFdBK","../shared/helper.js":"4D489","./each.js":"5HIxK"}],"aFdBK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * 封装 CustomEvent，使之支持 data:事件监听参数，namespace:命名空间
 */ parcelHelpers.export(exports, "MduiCustomEvent", ()=>MduiCustomEvent);
parcelHelpers.export(exports, "parse", ()=>parse);
parcelHelpers.export(exports, "add", ()=>add);
parcelHelpers.export(exports, "remove", ()=>remove);
var _ssrWindow = require("ssr-window");
var _js = require("../$.js");
var _containsJs = require("../functions/contains.js");
var _findJs = require("../methods/find.js");
var _getJs = require("../methods/get.js");
var _helperJs = require("./helper.js");
// @ts-ignore 直接使用 CustomEvent 在 ssr 环境下会报错
const CustomEvent = (0, _ssrWindow.getWindow)().CustomEvent;
class MduiCustomEvent extends CustomEvent {
    constructor(type, options){
        super(type, options);
        this.data = options.data;
        this.namespace = options.namespace;
    }
}
const elementIdMap = new WeakMap();
let elementId = 1;
/**
 * 为元素赋予一个唯一的ID
 */ const getElementId = (element)=>{
    if (!elementIdMap.has(element)) elementIdMap.set(element, ++elementId);
    return elementIdMap.get(element);
};
// 存储唯一ID及事件处理
const handlersMap = new Map();
/**
 * 获取元素上的事件处理器数组
 * @param element
 */ const getHandlers = (element)=>{
    const id = getElementId(element);
    return handlersMap.get(id) || handlersMap.set(id, []).get(id);
};
const parse = (type)=>{
    const parts = type.split(".");
    return {
        type: parts[0],
        namespace: parts.slice(1).sort().join(" ")
    };
};
/**
 * 命名空间匹配规则
 */ const matcherFor = (namespace)=>{
    return new RegExp("(?:^| )" + namespace.replace(" ", " .* ?") + "(?: |$)");
};
/**
 * 获取匹配的事件
 * @param element
 * @param type
 * @param func
 * @param selector
 */ const getMatchedHandlers = (element, type, func, selector)=>{
    const event = parse(type);
    return getHandlers(element).filter((handler)=>{
        return handler && (!event.type || handler.type === event.type) && (!event.namespace || matcherFor(event.namespace).test(handler.namespace)) && (!func || getElementId(handler.func) === getElementId(func)) && (!selector || handler.selector === selector);
    });
};
const add = (element, types, func, data, selector)=>{
    // 传入 data.useCapture 来设置 useCapture: true
    let useCapture = false;
    if ((0, _helperJs.isObjectLike)(data) && data.useCapture) useCapture = true;
    types.split(" ").forEach((type)=>{
        if (!type) return;
        const event = parse(type);
        const callFn = (e, elem)=>{
            const result = func.apply(elem, // @ts-ignore
            e.detail === null ? [
                e
            ] : [
                e
            ].concat(e.detail));
            if (result === false) {
                e.preventDefault();
                e.stopPropagation();
            }
        };
        const proxyFn = (e)=>{
            if (e.namespace && !matcherFor(e.namespace).test(event.namespace)) return;
            e.data = data;
            if (selector) // 事件代理
            (0, _js.$)(element).find(selector).get().reverse().forEach((elem)=>{
                if (elem === e.target || (0, _containsJs.contains)(elem, e.target)) callFn(e, elem);
            });
            else // 不使用事件代理
            callFn(e, element);
        };
        const handler = {
            type: event.type,
            namespace: event.namespace,
            func,
            selector,
            id: getHandlers(element).length,
            proxy: proxyFn
        };
        getHandlers(element).push(handler);
        // @ts-ignore
        element.addEventListener(handler.type, proxyFn, useCapture);
    });
};
const remove = (element, types, func, selector)=>{
    const handlersInElement = getHandlers(element);
    const removeEvent = (handler)=>{
        delete handlersInElement[handler.id];
        // @ts-ignore
        element.removeEventListener(handler.type, handler.proxy, false);
    };
    if (!types) handlersInElement.forEach((handler)=>{
        removeEvent(handler);
    });
    else types.split(" ").forEach((type)=>{
        if (type) getMatchedHandlers(element, type, func, selector).forEach((handler)=>{
            removeEvent(handler);
        });
    });
};

},{"ssr-window":"3lyfI","../$.js":"dZx9v","../functions/contains.js":"39xTL","../methods/find.js":"7eUR4","../methods/get.js":"bzhq8","./helper.js":"4D489","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ewNsa":[function(require,module,exports) {
var _js = require("../$.js");
var _extendJs = require("../functions/extend.js");
var _helperJs = require("../shared/helper.js");
var _cssJs = require("./css.js");
var _eachJs = require("./each.js");
var _positionJs = require("./position.js");
const get = (element)=>{
    if (!element.getClientRects().length) return {
        top: 0,
        left: 0
    };
    const { top, left } = element.getBoundingClientRect();
    const { pageYOffset, pageXOffset } = element.ownerDocument.defaultView;
    return {
        top: top + pageYOffset,
        left: left + pageXOffset
    };
};
const set = (element, value, index)=>{
    const $element = (0, _js.$)(element);
    const position = $element.css("position");
    if (position === "static") $element.css("position", "relative");
    const currentOffset = get(element);
    const currentTopString = $element.css("top");
    const currentLeftString = $element.css("left");
    let currentTop;
    let currentLeft;
    const calculatePosition = (position === "absolute" || position === "fixed") && (currentTopString + currentLeftString).includes("auto");
    if (calculatePosition) {
        const currentPosition = $element.position();
        currentTop = currentPosition.top;
        currentLeft = currentPosition.left;
    } else {
        currentTop = parseFloat(currentTopString);
        currentLeft = parseFloat(currentLeftString);
    }
    const computedValue = (0, _helperJs.isFunction)(value) ? value.call(element, index, (0, _extendJs.extend)({}, currentOffset)) : value;
    $element.css({
        top: computedValue.top != null ? computedValue.top - currentOffset.top + currentTop : undefined,
        left: computedValue.left != null ? computedValue.left - currentOffset.left + currentLeft : undefined
    });
};
// eslint-disable-next-line
(0, _js.$).fn.offset = function(value) {
    // 获取坐标
    if (!arguments.length) {
        if (!this.length) return undefined;
        return get(this[0]);
    }
    // 设置坐标
    return this.each(function(index) {
        set(this, value, index);
    });
};

},{"../$.js":"dZx9v","../functions/extend.js":"8aHWx","../shared/helper.js":"4D489","./css.js":"lzdJz","./each.js":"5HIxK","./position.js":"aPh6d"}],"8aHWx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "extend", ()=>extend);
var _helperJs = require("../shared/helper.js");
function extend(target, ...objectN) {
    (0, _helperJs.eachArray)(objectN, (object)=>{
        (0, _helperJs.eachObject)(object, (prop, value)=>{
            if (!(0, _helperJs.isUndefined)(value)) target[prop] = value;
        });
    });
    return target;
}

},{"../shared/helper.js":"4D489","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aPh6d":[function(require,module,exports) {
var _js = require("../$.js");
var _cssJs = require("./css.js");
var _eqJs = require("./eq.js");
var _offsetJs = require("./offset.js");
var _offsetParentJs = require("./offsetParent.js");
const floatStyle = ($element, name)=>{
    return parseFloat($element.css(name));
};
// @ts-ignore
(0, _js.$).fn.position = function() {
    if (!this.length) return undefined;
    const $element = this.eq(0);
    let currentOffset;
    let parentOffset = {
        left: 0,
        top: 0
    };
    if ($element.css("position") === "fixed") currentOffset = $element[0].getBoundingClientRect();
    else {
        currentOffset = $element.offset();
        const $offsetParent = $element.offsetParent();
        parentOffset = $offsetParent.offset();
        parentOffset.top += floatStyle($offsetParent, "border-top-width");
        parentOffset.left += floatStyle($offsetParent, "border-left-width");
    }
    return {
        top: currentOffset.top - parentOffset.top - floatStyle($element, "margin-top"),
        left: currentOffset.left - parentOffset.left - floatStyle($element, "margin-left")
    };
};

},{"../$.js":"dZx9v","./css.js":"lzdJz","./eq.js":"7DglL","./offset.js":"ewNsa","./offsetParent.js":"h3XHp"}],"h3XHp":[function(require,module,exports) {
var _ssrWindow = require("ssr-window");
var _js = require("../$.js");
var _cssJs = require("./css.js");
var _mapJs = require("./map.js");
/**
 * 返回最近的用于定位的父元素
 */ (0, _js.$).fn.offsetParent = function() {
    const document = (0, _ssrWindow.getDocument)();
    return this.map(function() {
        let offsetParent = this.offsetParent;
        while(offsetParent && (0, _js.$)(offsetParent).css("position") === "static")offsetParent = offsetParent.offsetParent;
        return offsetParent || document.documentElement;
    });
};

},{"ssr-window":"3lyfI","../$.js":"dZx9v","./css.js":"lzdJz","./map.js":"1VaRL"}],"e22Mv":[function(require,module,exports) {
var _js = require("../$.js");
var _eventJs = require("../shared/event.js");
var _helperJs = require("../shared/helper.js");
var _eachJs = require("./each.js");
var _offJs = require("./off.js");
(0, _js.$).fn.on = function(// eslint-disable-next-line
types, // eslint-disable-next-line
selector, // eslint-disable-next-line
data, // eslint-disable-next-line
callback, one) {
    // types 可以是 type/func 对象
    if ((0, _helperJs.isObjectLike)(types)) {
        // (types-Object, selector, data)
        if (!(0, _helperJs.isString)(selector)) {
            // (types-Object, data)
            data = data || selector;
            selector = undefined;
        }
        (0, _helperJs.eachObject)(types, (type, fn)=>{
            // selector 和 data 都可能是 undefined
            // @ts-ignore
            this.on(type, selector, data, fn, one);
        });
        return this;
    }
    if (data == null && callback == null) {
        // (types, fn)
        callback = selector;
        data = selector = undefined;
    } else if (callback == null) {
        if ((0, _helperJs.isString)(selector)) {
            // (types, selector, fn)
            callback = data;
            data = undefined;
        } else {
            // (types, data, fn)
            callback = data;
            data = selector;
            selector = undefined;
        }
    }
    if (callback === false) callback = (0, _helperJs.returnFalse);
    else if (!callback) return this;
    // $().one()
    if (one) {
        // eslint-disable-next-line @typescript-eslint/no-this-alias
        const _this = this;
        const origCallback = callback;
        callback = function(event, ...dataN) {
            _this.off(event.type, selector, callback);
            return origCallback.call(this, event, ...dataN);
        };
    }
    return this.each(function() {
        (0, _eventJs.add)(this, types, callback, data, selector);
    });
};

},{"../$.js":"dZx9v","../shared/event.js":"aFdBK","../shared/helper.js":"4D489","./each.js":"5HIxK","./off.js":"8xpGy"}],"d8MQ0":[function(require,module,exports) {
var _js = require("../$.js");
var _onJs = require("./on.js");
(0, _js.$).fn.one = function(types, // eslint-disable-next-line
selector, // eslint-disable-next-line
data, // eslint-disable-next-line
callback) {
    // @ts-ignore
    return this.on(types, selector, data, callback, true);
};

},{"../$.js":"dZx9v","./on.js":"e22Mv"}],"1D16I":[function(require,module,exports) {
var _widthJs = require("./width.js");

},{"./width.js":"4wNQJ"}],"iBwCi":[function(require,module,exports) {
var _widthJs = require("./width.js");

},{"./width.js":"4wNQJ"}],"f5eCX":[function(require,module,exports) {
var _parentJs = require("./parent.js");

},{"./parent.js":"4VHuP"}],"3N131":[function(require,module,exports) {
var _appendJs = require("./append.js");

},{"./append.js":"948yF"}],"3MVmJ":[function(require,module,exports) {
var _appendToJs = require("./appendTo.js");

},{"./appendTo.js":"gOUbd"}],"5q7B3":[function(require,module,exports) {
var _js = require("../$.js");
var _helperJs = require("../shared/helper.js");
var _getJs = require("./get.js");
var _dirJs = require("./utils/dir.js");
(0, _helperJs.eachArray)([
    "",
    "All",
    "Until"
], (name, nameIndex)=>{
    (0, _js.$).fn[`prev${name}`] = function(// eslint-disable-next-line
    selector, filter) {
        // prevAll、prevUntil 需要把元素的顺序倒序处理，以便和 jQuery 的结果一致
        const $nodes = !nameIndex ? this : (0, _js.$)(this.get().reverse());
        return (0, _dirJs.dir)($nodes, nameIndex, "previousElementSibling", selector, filter);
    };
});

},{"../$.js":"dZx9v","../shared/helper.js":"4D489","./get.js":"bzhq8","./utils/dir.js":"eTOx1"}],"iImnw":[function(require,module,exports) {
var _prevJs = require("./prev.js");

},{"./prev.js":"5q7B3"}],"8PVYQ":[function(require,module,exports) {
var _prevJs = require("./prev.js");

},{"./prev.js":"5q7B3"}],"7XhxU":[function(require,module,exports) {
var _attrJs = require("./attr.js");

},{"./attr.js":"1nh45"}],"j7SbH":[function(require,module,exports) {
var _js = require("../$.js");
var _attributesJs = require("../shared/attributes.js");
var _helperJs = require("../shared/helper.js");
var _eachJs = require("./each.js");
(0, _js.$).fn.removeAttr = function(attributeName) {
    const names = attributeName.split(" ").filter((name)=>name);
    return this.each(function() {
        (0, _helperJs.eachArray)(names, (name)=>{
            (0, _attributesJs.removeAttribute)(this, name);
        });
    });
};

},{"../$.js":"dZx9v","../shared/attributes.js":"hHPbU","../shared/helper.js":"4D489","./each.js":"5HIxK"}],"iF0be":[function(require,module,exports) {
var _addClassJs = require("./addClass.js");

},{"./addClass.js":"eBNUW"}],"52PHu":[function(require,module,exports) {
var _js = require("../$.js");
var _removeDataJs = require("../functions/removeData.js");
var _eachJs = require("./each.js");
(0, _js.$).fn.removeData = function(name) {
    return this.each((_, element)=>{
        (0, _removeDataJs.removeData)(element, name);
    });
};

},{"../$.js":"dZx9v","../functions/removeData.js":"aU5Nz","./each.js":"5HIxK"}],"aU5Nz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "removeData", ()=>removeData);
var _dataJs = require("../shared/data.js");
var _helperJs = require("../shared/helper.js");
const removeData = (element, name)=>{
    if ((0, _helperJs.isUndefined)(name)) return (0, _dataJs.removeAll)(element);
    const keys = (0, _helperJs.isString)(name) ? name.split(" ").filter((nameItem)=>nameItem) : name;
    (0, _dataJs.removeMultiple)(element, keys);
};

},{"../shared/data.js":"9daIX","../shared/helper.js":"4D489","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jBmQM":[function(require,module,exports) {
var _js = require("../$.js");
var _eachJs = require("./each.js");
(0, _js.$).fn.removeProp = function(name) {
    return this.each((_, element)=>{
        try {
            // @ts-ignore
            delete element[name];
        } catch (e) {}
    });
};

},{"../$.js":"dZx9v","./each.js":"5HIxK"}],"g0bYJ":[function(require,module,exports) {
var _js = require("../$.js");
var _cloneJs = require("./clone.js");
var _getJs = require("./get.js");
var _mapJs = require("./map.js");
var _replaceWithJs = require("./replaceWith.js");
// eslint-disable-next-line
(0, _js.$).fn.replaceAll = function(target) {
    return (0, _js.$)(target).map((index, element)=>{
        (0, _js.$)(element).replaceWith(index ? this.clone() : this);
        return this.get();
    });
};

},{"../$.js":"dZx9v","./clone.js":"66h8c","./get.js":"bzhq8","./map.js":"1VaRL","./replaceWith.js":"ewdE6"}],"ewdE6":[function(require,module,exports) {
var _js = require("../$.js");
var _helperJs = require("../shared/helper.js");
var _beforeJs = require("./before.js");
var _cloneJs = require("./clone.js");
var _eachJs = require("./each.js");
var _removeJs = require("./remove.js");
// eslint-disable-next-line
(0, _js.$).fn.replaceWith = function(newContent) {
    this.each((index, element)=>{
        let content = newContent;
        if ((0, _helperJs.isFunction)(content)) content = content.call(element, index, element.innerHTML);
        else if (index && !(0, _helperJs.isString)(content)) content = (0, _js.$)(content).clone();
        (0, _js.$)(element).before(content);
    });
    return this.remove();
};

},{"../$.js":"dZx9v","../shared/helper.js":"4D489","./before.js":"lgukF","./clone.js":"66h8c","./each.js":"5HIxK","./remove.js":"eOqqE"}],"4idZf":[function(require,module,exports) {
var _js = require("../$.js");
var _paramJs = require("../functions/param.js");
var _serializeArrayJs = require("./serializeArray.js");
(0, _js.$).fn.serialize = function() {
    return (0, _paramJs.param)(this.serializeArray());
};

},{"../$.js":"dZx9v","../functions/param.js":"6hZOk","./serializeArray.js":"785lE"}],"6hZOk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "param", ()=>param);
var _helperJs = require("../shared/helper.js");
const param = (obj)=>{
    if (!(0, _helperJs.isObjectLike)(obj) && !Array.isArray(obj)) return "";
    const args = [];
    const destructure = (key, value)=>{
        let keyTmp;
        if ((0, _helperJs.isObjectLike)(value)) (0, _helperJs.eachObject)(value, (i, v)=>{
            keyTmp = Array.isArray(value) && !(0, _helperJs.isObjectLike)(v) ? "" : i;
            destructure(`${key}[${keyTmp}]`, v);
        });
        else {
            keyTmp = value == null || value === "" ? "=" : `=${encodeURIComponent(value)}`;
            args.push(encodeURIComponent(key) + keyTmp);
        }
    };
    if (Array.isArray(obj)) (0, _helperJs.eachArray)(obj, ({ name, value })=>{
        return destructure(name, value);
    });
    else (0, _helperJs.eachObject)(obj, destructure);
    return args.join("&");
};

},{"../shared/helper.js":"4D489","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"785lE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getFormControlsValue", ()=>getFormControlsValue);
var _js = require("../$.js");
var _formJs = require("../shared/form.js");
var _eachJs = require("./each.js");
var _valJs = require("./val.js");
const getFormControlsValue = ($elements)=>{
    const result = [];
    $elements.each((_, element)=>{
        const elements = element instanceof HTMLFormElement ? (0, _formJs.getFormControls)(element) : [
            element
        ];
        (0, _js.$)(elements).each((_, element)=>{
            const $element = (0, _js.$)(element);
            const type = element.type;
            const nodeName = element.nodeName.toLowerCase();
            if (nodeName !== "fieldset" && element.name && !element.disabled && [
                "input",
                "select",
                "textarea",
                "keygen",
                "mdui-checkbox",
                "mdui-radio-group",
                "mdui-switch",
                "mdui-text-field",
                "mdui-select",
                "mdui-slider",
                "mdui-range-slider",
                "mdui-segmented-button-group"
            ].includes(nodeName) && ![
                "submit",
                "button",
                "image",
                "reset",
                "file"
            ].includes(type) && (![
                "radio",
                "checkbox"
            ].includes(type) || element.checked) && (![
                "mdui-checkbox",
                "mdui-switch"
            ].includes(nodeName) || element.checked)) result.push({
                name: element.name,
                value: $element.val()
            });
        });
    });
    return result;
};
/**
 * 将表单元素的值组合成键值对数组
 *
 * 包含哪些表单元素，参考：https://www.w3.org/TR/html401/interact/forms.html#h-17.13.2
 * 其中不包含 type="submit"，因为表单不是通过点击按钮提交的
 *
 * @returns {Array}
 */ (0, _js.$).fn.serializeArray = function() {
    return getFormControlsValue(this).map((element)=>{
        if (!Array.isArray(element.value)) return element;
        return element.value.map((value)=>({
                name: element.name,
                value
            }));
    }).flat();
};

},{"../$.js":"dZx9v","../shared/form.js":"jSetm","./each.js":"5HIxK","./val.js":"7FNpF","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jSetm":[function(require,module,exports) {
/**
 * 使用该 WeakMap 来存储指定表单中所有的 mdui 表单控件
 * 在每个表单控件的 hostConnected 中添加、hostDisconnected 中移除对应表单的 mdui 表单控件，
 * 然后在 getFormControls 方法中就能获取到表单中所有的 mdui 表单控件
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "formCollections", ()=>formCollections);
parcelHelpers.export(exports, "getFormControls", ()=>getFormControls);
const formCollections = new WeakMap();
const getFormControls = (form)=>{
    const nativeFormControls = [
        ...form.elements
    ];
    const formControls = formCollections.get(form) || [];
    const comparePosition = (a, b)=>{
        const position = a.compareDocumentPosition(b);
        return position & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;
    };
    // 按 DOM 元素的顺序排序
    return [
        ...nativeFormControls,
        ...formControls
    ].sort(comparePosition);
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9iiWQ":[function(require,module,exports) {
var _js = require("../$.js");
var _serializeArrayJs = require("./serializeArray.js");
/**
 * 将表单元素的值转换为对象
 */ (0, _js.$).fn.serializeObject = function() {
    const result = {};
    (0, _serializeArrayJs.getFormControlsValue)(this).forEach((element)=>{
        const { name, value } = element;
        if (!result.hasOwnProperty(name)) result[name] = value;
        else {
            const originalValue = result[name];
            if (!Array.isArray(originalValue)) result[name] = [
                originalValue
            ];
            // value 可能是数组，合并到原有数组中
            if (Array.isArray(value)) result[name].push(...value);
            else result[name].push(value);
        }
    });
    return result;
};

},{"../$.js":"dZx9v","./serializeArray.js":"785lE"}],"eQqKG":[function(require,module,exports) {
var _ssrWindow = require("ssr-window");
var _js = require("../$.js");
var _cssJs = require("../shared/css.js");
var _domJs = require("../shared/dom.js");
var _eachJs = require("./each.js");
const elementDisplay = {};
/**
 * 获取元素的初始 display 值，用于 .show() 方法
 * @param nodeName
 */ const defaultDisplay = (nodeName)=>{
    const document = (0, _ssrWindow.getDocument)();
    let element;
    let display;
    if (!elementDisplay[nodeName]) {
        element = (0, _domJs.createElement)(nodeName);
        (0, _domJs.appendChild)(document.body, element);
        display = (0, _cssJs.getStyle)(element, "display");
        (0, _domJs.removeChild)(element);
        if (display === "none") display = "block";
        elementDisplay[nodeName] = display;
    }
    return elementDisplay[nodeName];
};
/**
 * 显示指定元素
 * @returns {JQ}
 */ (0, _js.$).fn.show = function() {
    return this.each((_, element)=>{
        if (element.style.display === "none") element.style.display = "";
        if ((0, _cssJs.getStyle)(element, "display") === "none") element.style.display = defaultDisplay(element.nodeName);
    });
};

},{"ssr-window":"3lyfI","../$.js":"dZx9v","../shared/css.js":"79Mtq","../shared/dom.js":"5U5Wi","./each.js":"5HIxK"}],"fcX0R":[function(require,module,exports) {
var _js = require("../$.js");
var _addJs = require("./add.js");
var _nextAllJs = require("./nextAll.js");
var _prevAllJs = require("./prevAll.js");
/**
 * 取得同辈元素的集合
 * @param selector {String=}
 * @returns {JQ}
 */ (0, _js.$).fn.siblings = function(selector) {
    return this.prevAll(selector).add(this.nextAll(selector));
};

},{"../$.js":"dZx9v","./add.js":"aC4Lq","./nextAll.js":"3mT8E","./prevAll.js":"iImnw"}],"eXyL3":[function(require,module,exports) {
var _valJs = require("./val.js");

},{"./val.js":"7FNpF"}],"4ajlv":[function(require,module,exports) {
var _js = require("../$.js");
var _cssJs = require("../shared/css.js");
var _eachJs = require("./each.js");
var _hideJs = require("./hide.js");
var _showJs = require("./show.js");
/**
 * 切换元素的显示状态
 */ (0, _js.$).fn.toggle = function() {
    return this.each((_, element)=>{
        (0, _cssJs.getStyle)(element, "display") === "none" ? (0, _js.$)(element).show() : (0, _js.$)(element).hide();
    });
};

},{"../$.js":"dZx9v","../shared/css.js":"79Mtq","./each.js":"5HIxK","./hide.js":"6V66P","./show.js":"eQqKG"}],"khN8Q":[function(require,module,exports) {
var _addClassJs = require("./addClass.js");

},{"./addClass.js":"eBNUW"}],"7Ga8J":[function(require,module,exports) {
var _js = require("../$.js");
var _eventJs = require("../shared/event.js");
var _eachJs = require("./each.js");
(0, _js.$).fn.trigger = function(name, // eslint-disable-next-line @typescript-eslint/no-explicit-any
detail = null, options) {
    const { type, namespace } = (0, _eventJs.parse)(name);
    const event = new (0, _eventJs.MduiCustomEvent)(type, {
        detail,
        data: null,
        namespace,
        bubbles: true,
        cancelable: false,
        composed: true,
        ...options
    });
    return this.each((_, element)=>{
        element.dispatchEvent(event);
    });
};

},{"../$.js":"dZx9v","../shared/event.js":"aFdBK","./each.js":"5HIxK"}],"w96vY":[function(require,module,exports) {
var _js = require("../$.js");
var _ajaxJs = require("../functions/ajax.js");
(0, _js.$).ajax = (0, _ajaxJs.ajax);

},{"../$.js":"dZx9v","../functions/ajax.js":"eDP1p"}],"eDP1p":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ajax", ()=>ajax);
var _ssrWindow = require("ssr-window");
var _js = require("../$.js");
var _triggerJs = require("../methods/trigger.js");
var _ajaxJs = require("../shared/ajax.js");
var _helperJs = require("../shared/helper.js");
var _paramJs = require("./param.js");
const ajax = (options)=>{
    const document = (0, _ssrWindow.getDocument)();
    const window = (0, _ssrWindow.getWindow)();
    // 是否已取消请求
    let isCanceled = false;
    // ajaxStart、ajaxError、ajaxComplete 事件参数
    // @ts-ignore
    const eventParams = {};
    // ajaxSuccess 事件参数
    // @ts-ignore
    const successEventParams = {};
    // 参数合并
    const mergedOptions = (0, _ajaxJs.mergeOptions)(options);
    const method = mergedOptions.method.toUpperCase();
    let { data, url } = mergedOptions;
    url = url || window.location.toString();
    const { processData, async, cache, username, password, headers, xhrFields, statusCode, dataType, contentType, timeout, global } = mergedOptions;
    // 需要发送的数据
    // GET/HEAD 请求和 processData 为 true 时，转换为查询字符串格式，特殊格式不转换
    const isMethodQueryString = (0, _ajaxJs.isQueryStringData)(method);
    if (data && (isMethodQueryString || processData) && !(0, _helperJs.isString)(data) && !(data instanceof ArrayBuffer) && !(data instanceof Blob) && !(data instanceof Document) && !(data instanceof FormData)) data = (0, _paramJs.param)(data);
    // 对于 GET、HEAD 类型的请求，把 data 数据添加到 URL 中
    if (data && isMethodQueryString) {
        // 查询字符串拼接到 URL 中
        url = (0, _ajaxJs.appendQuery)(url, data);
        data = null;
    }
    /**
     * 触发事件和回调函数
     * @param event
     * @param callback
     * @param args
     */ const trigger = (event, callback, ...args)=>{
        // 触发全局事件
        if (global) (0, _js.$)(document).trigger(event, callback === "success" ? successEventParams : eventParams);
        // 触发 ajax 回调和事件
        let resultGlobal;
        let resultCustom;
        // 全局回调
        if (callback in (0, _ajaxJs.globalOptions)) // @ts-ignore
        resultGlobal = (0, _ajaxJs.globalOptions)[callback](...args);
        // 自定义回调
        if (mergedOptions[callback]) // @ts-ignore
        resultCustom = mergedOptions[callback](...args);
        // beforeSend 回调返回 false 时取消 ajax 请求
        if (callback === "beforeSend" && [
            resultGlobal,
            resultCustom
        ].includes(false)) isCanceled = true;
    };
    // XMLHttpRequest 请求
    const XHR = ()=>{
        let textStatus;
        return new Promise((resolve, reject)=>{
            const doReject = (reason)=>{
                return reject(new Error(reason));
            };
            // GET/HEAD 请求的缓存处理
            if (isMethodQueryString && !cache) url = (0, _ajaxJs.appendQuery)(url, `_=${Date.now()}`);
            // 创建 XHR
            const xhr = new XMLHttpRequest();
            xhr.open(method, url, async, username, password);
            if (contentType || data && !isMethodQueryString && contentType !== false) xhr.setRequestHeader("Content-Type", contentType);
            // 设置 Accept
            if (dataType === "json") xhr.setRequestHeader("Accept", "application/json, text/javascript");
            // 添加 headers
            (0, _helperJs.eachObject)(headers, (key, value)=>{
                // undefined 值不发送，string 和 null 需要发送
                if (!(0, _helperJs.isUndefined)(value)) xhr.setRequestHeader(key, value + ""); // 把 null 转换成字符串
            });
            // 检查是否是跨域请求，跨域请求时不添加 X-Requested-With
            if (!(0, _ajaxJs.isCrossDomain)(url)) xhr.setRequestHeader("X-Requested-With", "XMLHttpRequest");
            // 设置 xhr 选项
            (0, _helperJs.eachObject)(xhrFields, (key, value)=>{
                xhr[key] = value;
            });
            eventParams.xhr = successEventParams.xhr = xhr;
            eventParams.options = successEventParams.options = mergedOptions;
            let xhrTimeout;
            xhr.onload = ()=>{
                if (xhrTimeout) clearTimeout(xhrTimeout);
                // AJAX 返回的 HTTP 响应码是否表示成功
                const isSuccess = (0, _ajaxJs.isHttpStatusSuccess)(xhr.status);
                // @ts-ignore
                let responseData = undefined;
                if (isSuccess) {
                    textStatus = xhr.status === 204 || method === "HEAD" ? "nocontent" : xhr.status === 304 ? "notmodified" : "success";
                    if (dataType === "json" || !dataType && (xhr.getResponseHeader("content-type") || "").includes("json")) {
                        try {
                            responseData = method === "HEAD" ? undefined : JSON.parse(xhr.responseText);
                            successEventParams.response = responseData;
                        } catch (err) {
                            textStatus = "parsererror";
                            trigger((0, _ajaxJs.ajaxError), "error", xhr, textStatus);
                            doReject(textStatus);
                        }
                        if (textStatus !== "parsererror") {
                            trigger((0, _ajaxJs.ajaxSuccess), "success", responseData, textStatus, xhr);
                            resolve(responseData);
                        }
                    } else {
                        responseData = method === "HEAD" ? undefined : xhr.responseType === "text" || xhr.responseType === "" ? xhr.responseText : xhr.response;
                        successEventParams.response = responseData;
                        trigger((0, _ajaxJs.ajaxSuccess), "success", responseData, textStatus, xhr);
                        resolve(responseData);
                    }
                } else {
                    textStatus = "error";
                    trigger((0, _ajaxJs.ajaxError), "error", xhr, textStatus);
                    doReject(textStatus);
                }
                // statusCode
                (0, _helperJs.eachArray)([
                    (0, _ajaxJs.globalOptions).statusCode ?? {},
                    statusCode
                ], (func)=>{
                    if (func[xhr.status]) {
                        if (isSuccess) func[xhr.status](responseData, textStatus, xhr);
                        else func[xhr.status](xhr, textStatus);
                    }
                });
                trigger((0, _ajaxJs.ajaxComplete), "complete", xhr, textStatus);
            };
            xhr.onerror = ()=>{
                if (xhrTimeout) clearTimeout(xhrTimeout);
                trigger((0, _ajaxJs.ajaxError), "error", xhr, xhr.statusText);
                trigger((0, _ajaxJs.ajaxComplete), "complete", xhr, "error");
                doReject(xhr.statusText);
            };
            xhr.onabort = ()=>{
                let statusText = "abort";
                if (xhrTimeout) {
                    statusText = "timeout";
                    clearTimeout(xhrTimeout);
                }
                trigger((0, _ajaxJs.ajaxError), "error", xhr, statusText);
                trigger((0, _ajaxJs.ajaxComplete), "complete", xhr, statusText);
                doReject(statusText);
            };
            // ajax start 回调
            trigger((0, _ajaxJs.ajaxStart), "beforeSend", xhr, mergedOptions);
            if (isCanceled) return doReject("cancel");
            // Timeout
            if (timeout > 0) xhrTimeout = window.setTimeout(()=>xhr.abort(), timeout);
            // 发送 XHR
            xhr.send(data);
        });
    };
    return XHR();
};

},{"ssr-window":"3lyfI","../$.js":"dZx9v","../methods/trigger.js":"7Ga8J","../shared/ajax.js":"5F7XP","../shared/helper.js":"4D489","./param.js":"6hZOk","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5F7XP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ajaxStart", ()=>ajaxStart);
parcelHelpers.export(exports, "ajaxSuccess", ()=>ajaxSuccess);
parcelHelpers.export(exports, "ajaxError", ()=>ajaxError);
parcelHelpers.export(exports, "ajaxComplete", ()=>ajaxComplete);
parcelHelpers.export(exports, "globalOptions", ()=>globalOptions);
parcelHelpers.export(exports, "isQueryStringData", ()=>isQueryStringData);
parcelHelpers.export(exports, "appendQuery", ()=>appendQuery);
parcelHelpers.export(exports, "isCrossDomain", ()=>isCrossDomain);
parcelHelpers.export(exports, "isHttpStatusSuccess", ()=>isHttpStatusSuccess);
parcelHelpers.export(exports, "mergeOptions", ()=>mergeOptions);
var _ssrWindow = require("ssr-window");
var _extendJs = require("../functions/extend.js");
var _helperJs = require("./helper.js");
const ajaxStart = "ajaxStart";
const ajaxSuccess = "ajaxSuccess";
const ajaxError = "ajaxError";
const ajaxComplete = "ajaxComplete";
const globalOptions = {};
const isQueryStringData = (method)=>{
    return [
        "GET",
        "HEAD"
    ].includes(method);
};
const appendQuery = (url, query)=>{
    return `${url}&${query}`.replace(/[&?]{1,2}/, "?");
};
const isCrossDomain = (url)=>{
    const window = (0, _ssrWindow.getWindow)();
    return /^([\w-]+:)?\/\/([^/]+)/.test(url) && RegExp.$2 !== window.location.host;
};
const isHttpStatusSuccess = (status)=>{
    return status >= 200 && status < 300 || [
        0,
        304
    ].includes(status);
};
const mergeOptions = (options)=>{
    // 默认参数
    const defaults = {
        url: "",
        method: "GET",
        data: "",
        processData: true,
        async: true,
        cache: true,
        username: "",
        password: "",
        headers: {},
        xhrFields: {},
        statusCode: {},
        dataType: "",
        contentType: "application/x-www-form-urlencoded",
        timeout: 0,
        global: true
    };
    // globalOptions 中的回调函数不合并
    (0, _helperJs.eachObject)(globalOptions, (key, value)=>{
        const callbacks = [
            "beforeSend",
            "success",
            "error",
            "complete",
            "statusCode"
        ];
        if (!callbacks.includes(key) && !(0, _helperJs.isUndefined)(value)) defaults[key] = value;
    });
    return (0, _extendJs.extend)({}, defaults, options);
};

},{"ssr-window":"3lyfI","../functions/extend.js":"8aHWx","./helper.js":"4D489","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6ExKx":[function(require,module,exports) {
var _js = require("../$.js");
var _ajaxSetupJs = require("../functions/ajaxSetup.js");
(0, _js.$).ajaxSetup = (0, _ajaxSetupJs.ajaxSetup);

},{"../$.js":"dZx9v","../functions/ajaxSetup.js":"eJbEw"}],"eJbEw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ajaxSetup", ()=>ajaxSetup);
var _ajaxJs = require("../shared/ajax.js");
var _extendJs = require("./extend.js");
const ajaxSetup = (options)=>{
    return (0, _extendJs.extend)((0, _ajaxJs.globalOptions), options);
};

},{"../shared/ajax.js":"5F7XP","./extend.js":"8aHWx","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lgtfO":[function(require,module,exports) {
var _js = require("../$.js");
var _containsJs = require("../functions/contains.js");
(0, _js.$).contains = (0, _containsJs.contains);

},{"../$.js":"dZx9v","../functions/contains.js":"39xTL"}],"5znB4":[function(require,module,exports) {
var _js = require("../$.js");
var _dataJs = require("../functions/data.js");
(0, _js.$).data = (0, _dataJs.data);

},{"../$.js":"dZx9v","../functions/data.js":"729tW"}],"729tW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "data", ()=>data);
var _dataJs = require("../shared/data.js");
var _helperJs = require("../shared/helper.js");
function data(element, key, value) {
    // 根据键值对设置值
    // data(element, { 'key' : 'value' })
    if ((0, _helperJs.isObjectLike)(key)) {
        (0, _dataJs.setAll)(element, key);
        return key;
    }
    // 根据 key、value 设置值
    // data(element, 'key', 'value')
    if (!(0, _helperJs.isUndefined)(value)) {
        (0, _dataJs.set)(element, key, value);
        return value;
    }
    // 获取所有值
    // data(element)
    if ((0, _helperJs.isUndefined)(key)) return (0, _dataJs.getAll)(element);
    // 获取指定值
    // data(element, 'key')
    return (0, _dataJs.get)(element, key);
}

},{"../shared/data.js":"9daIX","../shared/helper.js":"4D489","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"clMn8":[function(require,module,exports) {
var _js = require("../$.js");
var _eachJs = require("../functions/each.js");
(0, _js.$).each = (0, _eachJs.each);

},{"../$.js":"dZx9v","../functions/each.js":"7x9gN"}],"1MM14":[function(require,module,exports) {
var _js = require("../$.js");
var _extendJs = require("../functions/extend.js");
var _helperJs = require("../shared/helper.js");
(0, _js.$).extend = function(target, ...objectN) {
    if (!objectN.length) {
        (0, _helperJs.eachObject)(target, (prop, value)=>{
            this[prop] = value;
        });
        return this;
    }
    return (0, _extendJs.extend)(target, ...objectN);
};

},{"../$.js":"dZx9v","../functions/extend.js":"8aHWx","../shared/helper.js":"4D489"}],"4kRlQ":[function(require,module,exports) {
var _js = require("../$.js");
var _mapJs = require("../functions/map.js");
(0, _js.$).map = (0, _mapJs.map);

},{"../$.js":"dZx9v","../functions/map.js":"hMDLG"}],"g8Zoj":[function(require,module,exports) {
var _js = require("../$.js");
var _mergeJs = require("../functions/merge.js");
(0, _js.$).merge = (0, _mergeJs.merge);

},{"../$.js":"dZx9v","../functions/merge.js":"hspZw"}],"37GdL":[function(require,module,exports) {
var _js = require("../$.js");
var _paramJs = require("../functions/param.js");
(0, _js.$).param = (0, _paramJs.param);

},{"../$.js":"dZx9v","../functions/param.js":"6hZOk"}],"eLTiw":[function(require,module,exports) {
var _js = require("../$.js");
var _removeDataJs = require("../functions/removeData.js");
(0, _js.$).removeData = (0, _removeDataJs.removeData);

},{"../$.js":"dZx9v","../functions/removeData.js":"aU5Nz"}],"iOWhT":[function(require,module,exports) {
var _js = require("../$.js");
var _uniqueJs = require("../functions/unique.js");
(0, _js.$).unique = (0, _uniqueJs.unique);

},{"../$.js":"dZx9v","../functions/unique.js":"7DMxN"}],"b3yDA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./avatar/index.js");
parcelHelpers.exportAll(_indexJs, exports);

},{"./avatar/index.js":"1MDaS","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1MDaS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Avatar", ()=>Avatar);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _ifDefinedJs = require("lit/directives/if-defined.js");
var _styleMapJs = require("lit/directives/style-map.js");
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _hasSlotJs = require("@mdui/shared/controllers/has-slot.js");
var _templateJs = require("@mdui/shared/helpers/template.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _iconJs = require("../icon.js");
var _styleJs = require("./style.js");
/**
 * @summary 头像组件
 *
 * ```html
 * <mdui-avatar src="https://avatars.githubusercontent.com/u/3030330?s=40&v=4"></mdui-avatar>
 * ```
 *
 * @slot - 自定义头像中的内容，可以为字母、汉字、`<img>` 元素、图标等
 *
 * @csspart image - 使用图片头像时，组件内部的 `<img>` 元素
 * @csspart icon - 使用图标头像时，组件内部的 `<mdui-icon>` 元素
 *
 * @cssprop --shape-corner - 组件的圆角大小。可以指定一个具体的像素值；但更推荐[引用设计令牌](/docs/2/styles/design-tokens#shape-corner)
 */ let Avatar = class Avatar extends (0, _mduiElementJs.MduiElement) {
    constructor(){
        super(...arguments);
        this.hasSlotController = new (0, _hasSlotJs.HasSlotController)(this, "[default]");
    }
    render() {
        return this.hasSlotController.test("[default]") ? (0, _lit.html)`<slot></slot>` : this.src ? (0, _lit.html)`<img part="image" alt="${(0, _ifDefinedJs.ifDefined)(this.label)}" src="${this.src}" style="${(0, _styleMapJs.styleMap)({
            objectFit: this.fit
        })}">` : this.icon ? (0, _lit.html)`<mdui-icon part="icon" name="${this.icon}"></mdui-icon>` : (0, _templateJs.nothingTemplate);
    }
};
Avatar.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _styleJs.style)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Avatar.prototype, "src", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Avatar.prototype, "fit", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Avatar.prototype, "icon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Avatar.prototype, "label", void 0);
Avatar = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-avatar")
], Avatar);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/if-defined.js":"77RTn","lit/directives/style-map.js":"4GQsu","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/controllers/has-slot.js":"cARnY","@mdui/shared/helpers/template.js":"7SHVu","@mdui/shared/lit-styles/component-style.js":"jFNMX","../icon.js":"6YN4l","./style.js":"11dsj","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lRdW5":[function(require,module,exports) {
/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ /* global Reflect, Promise, SuppressedError, Symbol */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "__extends", ()=>__extends);
parcelHelpers.export(exports, "__assign", ()=>__assign);
parcelHelpers.export(exports, "__rest", ()=>__rest);
parcelHelpers.export(exports, "__decorate", ()=>__decorate);
parcelHelpers.export(exports, "__param", ()=>__param);
parcelHelpers.export(exports, "__esDecorate", ()=>__esDecorate);
parcelHelpers.export(exports, "__runInitializers", ()=>__runInitializers);
parcelHelpers.export(exports, "__propKey", ()=>__propKey);
parcelHelpers.export(exports, "__setFunctionName", ()=>__setFunctionName);
parcelHelpers.export(exports, "__metadata", ()=>__metadata);
parcelHelpers.export(exports, "__awaiter", ()=>__awaiter);
parcelHelpers.export(exports, "__generator", ()=>__generator);
parcelHelpers.export(exports, "__createBinding", ()=>__createBinding);
parcelHelpers.export(exports, "__exportStar", ()=>__exportStar);
parcelHelpers.export(exports, "__values", ()=>__values);
parcelHelpers.export(exports, "__read", ()=>__read);
/** @deprecated */ parcelHelpers.export(exports, "__spread", ()=>__spread);
/** @deprecated */ parcelHelpers.export(exports, "__spreadArrays", ()=>__spreadArrays);
parcelHelpers.export(exports, "__spreadArray", ()=>__spreadArray);
parcelHelpers.export(exports, "__await", ()=>__await);
parcelHelpers.export(exports, "__asyncGenerator", ()=>__asyncGenerator);
parcelHelpers.export(exports, "__asyncDelegator", ()=>__asyncDelegator);
parcelHelpers.export(exports, "__asyncValues", ()=>__asyncValues);
parcelHelpers.export(exports, "__makeTemplateObject", ()=>__makeTemplateObject);
parcelHelpers.export(exports, "__importStar", ()=>__importStar);
parcelHelpers.export(exports, "__importDefault", ()=>__importDefault);
parcelHelpers.export(exports, "__classPrivateFieldGet", ()=>__classPrivateFieldGet);
parcelHelpers.export(exports, "__classPrivateFieldSet", ()=>__classPrivateFieldSet);
parcelHelpers.export(exports, "__classPrivateFieldIn", ()=>__classPrivateFieldIn);
parcelHelpers.export(exports, "__addDisposableResource", ()=>__addDisposableResource);
parcelHelpers.export(exports, "__disposeResources", ()=>__disposeResources);
var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || ({
        __proto__: []
    }) instanceof Array && function(d, b) {
        d.__proto__ = b;
    } || function(d, b) {
        for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
    };
    return extendStatics(d, b);
};
function __extends(d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
        this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
function __rest(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") {
        for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++)if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
}
function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}
function __param(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
}
function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) {
        if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected");
        return f;
    }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for(var i = decorators.length - 1; i >= 0; i--){
        var context = {};
        for(var p in contextIn)context[p] = p === "access" ? {} : contextIn[p];
        for(var p in contextIn.access)context.access[p] = contextIn.access[p];
        context.addInitializer = function(f) {
            if (done) throw new TypeError("Cannot add initializers after decoration has completed");
            extraInitializers.push(accept(f || null));
        };
        var result = (0, decorators[i])(kind === "accessor" ? {
            get: descriptor.get,
            set: descriptor.set
        } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        } else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
}
function __runInitializers(thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for(var i = 0; i < initializers.length; i++)value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    return useValue ? value : void 0;
}
function __propKey(x) {
    return typeof x === "symbol" ? x : "".concat(x);
}
function __setFunctionName(f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", {
        configurable: true,
        value: prefix ? "".concat(prefix, " ", name) : name
    });
}
function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}
function __generator(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
}
var __createBinding = Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) desc = {
        enumerable: true,
        get: function() {
            return m[k];
        }
    };
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
};
function __exportStar(m, o) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
}
function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
}
function __spread() {
    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat(__read(arguments[i]));
    return ar;
}
function __spreadArrays() {
    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;
    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];
    return r;
}
function __spreadArray(to, from, pack) {
    if (pack || arguments.length === 2) {
        for(var i = 0, l = from.length, ar; i < l; i++)if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
}
function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}
function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
    }, i;
    function verb(n) {
        if (g[n]) i[n] = function(v) {
            return new Promise(function(a, b) {
                q.push([
                    n,
                    v,
                    a,
                    b
                ]) > 1 || resume(n, v);
            });
        };
    }
    function resume(n, v) {
        try {
            step(g[n](v));
        } catch (e) {
            settle(q[0][3], e);
        }
    }
    function step(r) {
        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
    }
    function fulfill(value) {
        resume("next", value);
    }
    function reject(value) {
        resume("throw", value);
    }
    function settle(f, v) {
        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
    }
}
function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function(e) {
        throw e;
    }), verb("return"), i[Symbol.iterator] = function() {
        return this;
    }, i;
    function verb(n, f) {
        i[n] = o[n] ? function(v) {
            return (p = !p) ? {
                value: __await(o[n](v)),
                done: false
            } : f ? f(v) : v;
        } : f;
    }
}
function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
    }, i);
    function verb(n) {
        i[n] = o[n] && function(v) {
            return new Promise(function(resolve, reject) {
                v = o[n](v), settle(resolve, reject, v.done, v.value);
            });
        };
    }
    function settle(resolve, reject, d, v) {
        Promise.resolve(v).then(function(v) {
            resolve({
                value: v,
                done: d
            });
        }, reject);
    }
}
function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) Object.defineProperty(cooked, "raw", {
        value: raw
    });
    else cooked.raw = raw;
    return cooked;
}
var __setModuleDefault = Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
};
function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
}
function __importDefault(mod) {
    return mod && mod.__esModule ? mod : {
        default: mod
    };
}
function __classPrivateFieldGet(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
}
function __classPrivateFieldSet(receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
}
function __classPrivateFieldIn(state, receiver) {
    if (receiver === null || typeof receiver !== "object" && typeof receiver !== "function") throw new TypeError("Cannot use 'in' operator on non-object");
    return typeof state === "function" ? receiver === state : state.has(receiver);
}
function __addDisposableResource(env, value, async) {
    if (value !== null && value !== void 0) {
        if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
        var dispose;
        if (async) {
            if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
            dispose = value[Symbol.asyncDispose];
        }
        if (dispose === void 0) {
            if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
            dispose = value[Symbol.dispose];
        }
        if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
        env.stack.push({
            value: value,
            dispose: dispose,
            async: async
        });
    } else if (async) env.stack.push({
        async: true
    });
    return value;
}
var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function(error, suppressed, message) {
    var e = new Error(message);
    return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
};
function __disposeResources(env) {
    function fail(e) {
        env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
        env.hasError = true;
    }
    function next() {
        while(env.stack.length){
            var rec = env.stack.pop();
            try {
                var result = rec.dispose && rec.dispose.call(rec.value);
                if (rec.async) return Promise.resolve(result).then(next, function(e) {
                    fail(e);
                    return next();
                });
            } catch (e) {
                fail(e);
            }
        }
        if (env.hasError) throw env.error;
    }
    return next();
}
exports.default = {
    __extends: __extends,
    __assign: __assign,
    __rest: __rest,
    __decorate: __decorate,
    __param: __param,
    __metadata: __metadata,
    __awaiter: __awaiter,
    __generator: __generator,
    __createBinding: __createBinding,
    __exportStar: __exportStar,
    __values: __values,
    __read: __read,
    __spread: __spread,
    __spreadArrays: __spreadArrays,
    __spreadArray: __spreadArray,
    __await: __await,
    __asyncGenerator: __asyncGenerator,
    __asyncDelegator: __asyncDelegator,
    __asyncValues: __asyncValues,
    __makeTemplateObject: __makeTemplateObject,
    __importStar: __importStar,
    __importDefault: __importDefault,
    __classPrivateFieldGet: __classPrivateFieldGet,
    __classPrivateFieldSet: __classPrivateFieldSet,
    __classPrivateFieldIn: __classPrivateFieldIn,
    __addDisposableResource: __addDisposableResource,
    __disposeResources: __disposeResources
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4antt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _reactiveElement = require("@lit/reactive-element");
var _litHtml = require("lit-html");
var _litElementJs = require("lit-element/lit-element.js");
parcelHelpers.exportAll(_litElementJs, exports);
var _isServerJs = require("lit-html/is-server.js");
parcelHelpers.exportAll(_isServerJs, exports);

},{"@lit/reactive-element":"hypet","lit-html":"1cmQt","lit-element/lit-element.js":"9YxkX","lit-html/is-server.js":"e2OXP","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hypet":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CSSResult", ()=>(0, _cssTagJs.CSSResult));
parcelHelpers.export(exports, "adoptStyles", ()=>(0, _cssTagJs.adoptStyles));
parcelHelpers.export(exports, "css", ()=>(0, _cssTagJs.css));
parcelHelpers.export(exports, "getCompatibleStyle", ()=>(0, _cssTagJs.getCompatibleStyle));
parcelHelpers.export(exports, "supportsAdoptingStyleSheets", ()=>(0, _cssTagJs.supportsAdoptingStyleSheets));
parcelHelpers.export(exports, "unsafeCSS", ()=>(0, _cssTagJs.unsafeCSS));
parcelHelpers.export(exports, "ReactiveElement", ()=>b);
parcelHelpers.export(exports, "defaultConverter", ()=>u);
parcelHelpers.export(exports, "notEqual", ()=>f);
var _cssTagJs = require("./css-tag.js");
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */ const { is: i, defineProperty: e, getOwnPropertyDescriptor: r, getOwnPropertyNames: h, getOwnPropertySymbols: o, getPrototypeOf: n } = Object, a = globalThis, c = a.trustedTypes, l = c ? c.emptyScript : "", p = a.reactiveElementPolyfillSupport, d = (t, s)=>t, u = {
    toAttribute (t, s) {
        switch(s){
            case Boolean:
                t = t ? l : null;
                break;
            case Object:
            case Array:
                t = null == t ? t : JSON.stringify(t);
        }
        return t;
    },
    fromAttribute (t, s) {
        let i = t;
        switch(s){
            case Boolean:
                i = null !== t;
                break;
            case Number:
                i = null === t ? null : Number(t);
                break;
            case Object:
            case Array:
                try {
                    i = JSON.parse(t);
                } catch (t) {
                    i = null;
                }
        }
        return i;
    }
}, f = (t, s)=>!i(t, s), y = {
    attribute: !0,
    type: String,
    converter: u,
    reflect: !1,
    hasChanged: f
};
Symbol.metadata ??= Symbol("metadata"), a.litPropertyMetadata ??= new WeakMap;
class b extends HTMLElement {
    static addInitializer(t) {
        this._$Ei(), (this.l ??= []).push(t);
    }
    static get observedAttributes() {
        return this.finalize(), this._$Eh && [
            ...this._$Eh.keys()
        ];
    }
    static createProperty(t, s = y) {
        if (s.state && (s.attribute = !1), this._$Ei(), this.elementProperties.set(t, s), !s.noAccessor) {
            const i = Symbol(), r = this.getPropertyDescriptor(t, i, s);
            void 0 !== r && e(this.prototype, t, r);
        }
    }
    static getPropertyDescriptor(t, s, i) {
        const { get: e, set: h } = r(this.prototype, t) ?? {
            get () {
                return this[s];
            },
            set (t) {
                this[s] = t;
            }
        };
        return {
            get () {
                return e?.call(this);
            },
            set (s) {
                const r = e?.call(this);
                h.call(this, s), this.requestUpdate(t, r, i);
            },
            configurable: !0,
            enumerable: !0
        };
    }
    static getPropertyOptions(t) {
        return this.elementProperties.get(t) ?? y;
    }
    static _$Ei() {
        if (this.hasOwnProperty(d("elementProperties"))) return;
        const t = n(this);
        t.finalize(), void 0 !== t.l && (this.l = [
            ...t.l
        ]), this.elementProperties = new Map(t.elementProperties);
    }
    static finalize() {
        if (this.hasOwnProperty(d("finalized"))) return;
        if (this.finalized = !0, this._$Ei(), this.hasOwnProperty(d("properties"))) {
            const t = this.properties, s = [
                ...h(t),
                ...o(t)
            ];
            for (const i of s)this.createProperty(i, t[i]);
        }
        const t = this[Symbol.metadata];
        if (null !== t) {
            const s = litPropertyMetadata.get(t);
            if (void 0 !== s) for (const [t, i] of s)this.elementProperties.set(t, i);
        }
        this._$Eh = new Map;
        for (const [t, s] of this.elementProperties){
            const i = this._$Eu(t, s);
            void 0 !== i && this._$Eh.set(i, t);
        }
        this.elementStyles = this.finalizeStyles(this.styles);
    }
    static finalizeStyles(s) {
        const i = [];
        if (Array.isArray(s)) {
            const e = new Set(s.flat(1 / 0).reverse());
            for (const s of e)i.unshift((0, _cssTagJs.getCompatibleStyle)(s));
        } else void 0 !== s && i.push((0, _cssTagJs.getCompatibleStyle)(s));
        return i;
    }
    static _$Eu(t, s) {
        const i = s.attribute;
        return !1 === i ? void 0 : "string" == typeof i ? i : "string" == typeof t ? t.toLowerCase() : void 0;
    }
    constructor(){
        super(), this._$Ep = void 0, this.isUpdatePending = !1, this.hasUpdated = !1, this._$Em = null, this._$Ev();
    }
    _$Ev() {
        this._$Eg = new Promise((t)=>this.enableUpdating = t), this._$AL = new Map, this._$ES(), this.requestUpdate(), this.constructor.l?.forEach((t)=>t(this));
    }
    addController(t) {
        (this._$E_ ??= new Set).add(t), void 0 !== this.renderRoot && this.isConnected && t.hostConnected?.();
    }
    removeController(t) {
        this._$E_?.delete(t);
    }
    _$ES() {
        const t = new Map, s = this.constructor.elementProperties;
        for (const i of s.keys())this.hasOwnProperty(i) && (t.set(i, this[i]), delete this[i]);
        t.size > 0 && (this._$Ep = t);
    }
    createRenderRoot() {
        const t = this.shadowRoot ?? this.attachShadow(this.constructor.shadowRootOptions);
        return (0, _cssTagJs.adoptStyles)(t, this.constructor.elementStyles), t;
    }
    connectedCallback() {
        this.renderRoot ??= this.createRenderRoot(), this.enableUpdating(!0), this._$E_?.forEach((t)=>t.hostConnected?.());
    }
    enableUpdating(t) {}
    disconnectedCallback() {
        this._$E_?.forEach((t)=>t.hostDisconnected?.());
    }
    attributeChangedCallback(t, s, i) {
        this._$AK(t, i);
    }
    _$EO(t, s) {
        const i = this.constructor.elementProperties.get(t), e = this.constructor._$Eu(t, i);
        if (void 0 !== e && !0 === i.reflect) {
            const r = (void 0 !== i.converter?.toAttribute ? i.converter : u).toAttribute(s, i.type);
            this._$Em = t, null == r ? this.removeAttribute(e) : this.setAttribute(e, r), this._$Em = null;
        }
    }
    _$AK(t, s) {
        const i = this.constructor, e = i._$Eh.get(t);
        if (void 0 !== e && this._$Em !== e) {
            const t = i.getPropertyOptions(e), r = "function" == typeof t.converter ? {
                fromAttribute: t.converter
            } : void 0 !== t.converter?.fromAttribute ? t.converter : u;
            this._$Em = e, this[e] = r.fromAttribute(s, t.type), this._$Em = null;
        }
    }
    requestUpdate(t, s, i, e = !1, r) {
        if (void 0 !== t) {
            if (i ??= this.constructor.getPropertyOptions(t), !(i.hasChanged ?? f)(e ? r : this[t], s)) return;
            this.C(t, s, i);
        }
        !1 === this.isUpdatePending && (this._$Eg = this._$EP());
    }
    C(t, s, i) {
        this._$AL.has(t) || this._$AL.set(t, s), !0 === i.reflect && this._$Em !== t && (this._$Ej ??= new Set).add(t);
    }
    async _$EP() {
        this.isUpdatePending = !0;
        try {
            await this._$Eg;
        } catch (t) {
            Promise.reject(t);
        }
        const t = this.scheduleUpdate();
        return null != t && await t, !this.isUpdatePending;
    }
    scheduleUpdate() {
        return this.performUpdate();
    }
    performUpdate() {
        if (!this.isUpdatePending) return;
        if (!this.hasUpdated) {
            if (this.renderRoot ??= this.createRenderRoot(), this._$Ep) {
                for (const [t, s] of this._$Ep)this[t] = s;
                this._$Ep = void 0;
            }
            const t = this.constructor.elementProperties;
            if (t.size > 0) for (const [s, i] of t)!0 !== i.wrapped || this._$AL.has(s) || void 0 === this[s] || this.C(s, this[s], i);
        }
        let t = !1;
        const s = this._$AL;
        try {
            t = this.shouldUpdate(s), t ? (this.willUpdate(s), this._$E_?.forEach((t)=>t.hostUpdate?.()), this.update(s)) : this._$ET();
        } catch (s) {
            throw t = !1, this._$ET(), s;
        }
        t && this._$AE(s);
    }
    willUpdate(t) {}
    _$AE(t) {
        this._$E_?.forEach((t)=>t.hostUpdated?.()), this.hasUpdated || (this.hasUpdated = !0, this.firstUpdated(t)), this.updated(t);
    }
    _$ET() {
        this._$AL = new Map, this.isUpdatePending = !1;
    }
    get updateComplete() {
        return this.getUpdateComplete();
    }
    getUpdateComplete() {
        return this._$Eg;
    }
    shouldUpdate(t) {
        return !0;
    }
    update(t) {
        this._$Ej &&= this._$Ej.forEach((t)=>this._$EO(t, this[t])), this._$ET();
    }
    updated(t) {}
    firstUpdated(t) {}
}
b.elementStyles = [], b.shadowRootOptions = {
    mode: "open"
}, b[d("elementProperties")] = new Map, b[d("finalized")] = new Map, p?.({
    ReactiveElement: b
}), (a.reactiveElementVersions ??= []).push("2.0.2");

},{"./css-tag.js":"gkZsf","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gkZsf":[function(require,module,exports) {
/**
 * @license
 * Copyright 2019 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CSSResult", ()=>n);
parcelHelpers.export(exports, "adoptStyles", ()=>S);
parcelHelpers.export(exports, "css", ()=>i);
parcelHelpers.export(exports, "getCompatibleStyle", ()=>c);
parcelHelpers.export(exports, "supportsAdoptingStyleSheets", ()=>e);
parcelHelpers.export(exports, "unsafeCSS", ()=>r);
const t = globalThis, e = t.ShadowRoot && (void 0 === t.ShadyCSS || t.ShadyCSS.nativeShadow) && "adoptedStyleSheets" in Document.prototype && "replace" in CSSStyleSheet.prototype, s = Symbol(), o = new WeakMap;
class n {
    constructor(t, e, o){
        if (this._$cssResult$ = !0, o !== s) throw Error("CSSResult is not constructable. Use `unsafeCSS` or `css` instead.");
        this.cssText = t, this.t = e;
    }
    get styleSheet() {
        let t = this.o;
        const s = this.t;
        if (e && void 0 === t) {
            const e = void 0 !== s && 1 === s.length;
            e && (t = o.get(s)), void 0 === t && ((this.o = t = new CSSStyleSheet).replaceSync(this.cssText), e && o.set(s, t));
        }
        return t;
    }
    toString() {
        return this.cssText;
    }
}
const r = (t)=>new n("string" == typeof t ? t : t + "", void 0, s), i = (t, ...e)=>{
    const o = 1 === t.length ? t[0] : e.reduce((e, s, o)=>e + ((t)=>{
            if (!0 === t._$cssResult$) return t.cssText;
            if ("number" == typeof t) return t;
            throw Error("Value passed to 'css' function must be a 'css' function result: " + t + ". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.");
        })(s) + t[o + 1], t[0]);
    return new n(o, t, s);
}, S = (s, o)=>{
    if (e) s.adoptedStyleSheets = o.map((t)=>t instanceof CSSStyleSheet ? t : t.styleSheet);
    else for (const e of o){
        const o = document.createElement("style"), n = t.litNonce;
        void 0 !== n && o.setAttribute("nonce", n), o.textContent = e.cssText, s.appendChild(o);
    }
}, c = e ? (t)=>t : (t)=>t instanceof CSSStyleSheet ? ((t)=>{
        let e = "";
        for (const s of t.cssRules)e += s.cssText;
        return r(e);
    })(t) : t;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1cmQt":[function(require,module,exports) {
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "_$LH", ()=>z);
parcelHelpers.export(exports, "html", ()=>x);
parcelHelpers.export(exports, "noChange", ()=>w);
parcelHelpers.export(exports, "nothing", ()=>T);
parcelHelpers.export(exports, "render", ()=>j);
parcelHelpers.export(exports, "svg", ()=>b);
const t = globalThis, i = t.trustedTypes, s = i ? i.createPolicy("lit-html", {
    createHTML: (t)=>t
}) : void 0, e = "$lit$", h = `lit$${(Math.random() + "").slice(9)}$`, o = "?" + h, n = `<${o}>`, r = document, l = ()=>r.createComment(""), c = (t)=>null === t || "object" != typeof t && "function" != typeof t, a = Array.isArray, u = (t)=>a(t) || "function" == typeof t?.[Symbol.iterator], d = "[ 	\n\f\r]", f = /<(?:(!--|\/[^a-zA-Z])|(\/?[a-zA-Z][^>\s]*)|(\/?$))/g, v = /-->/g, _ = />/g, m = RegExp(`>|${d}(?:([^\\s"'>=/]+)(${d}*=${d}*(?:[^ \t\n\f\r"'\`<>=]|("|')|))|$)`, "g"), p = /'/g, g = /"/g, $ = /^(?:script|style|textarea|title)$/i, y = (t)=>(i, ...s)=>({
            _$litType$: t,
            strings: i,
            values: s
        }), x = y(1), b = y(2), w = Symbol.for("lit-noChange"), T = Symbol.for("lit-nothing"), A = new WeakMap, E = r.createTreeWalker(r, 129);
function C(t, i) {
    if (!Array.isArray(t) || !t.hasOwnProperty("raw")) throw Error("invalid template strings array");
    return void 0 !== s ? s.createHTML(i) : i;
}
const P = (t, i)=>{
    const s = t.length - 1, o = [];
    let r, l = 2 === i ? "<svg>" : "", c = f;
    for(let i = 0; i < s; i++){
        const s = t[i];
        let a, u, d = -1, y = 0;
        for(; y < s.length && (c.lastIndex = y, u = c.exec(s), null !== u);)y = c.lastIndex, c === f ? "!--" === u[1] ? c = v : void 0 !== u[1] ? c = _ : void 0 !== u[2] ? ($.test(u[2]) && (r = RegExp("</" + u[2], "g")), c = m) : void 0 !== u[3] && (c = m) : c === m ? ">" === u[0] ? (c = r ?? f, d = -1) : void 0 === u[1] ? d = -2 : (d = c.lastIndex - u[2].length, a = u[1], c = void 0 === u[3] ? m : '"' === u[3] ? g : p) : c === g || c === p ? c = m : c === v || c === _ ? c = f : (c = m, r = void 0);
        const x = c === m && t[i + 1].startsWith("/>") ? " " : "";
        l += c === f ? s + n : d >= 0 ? (o.push(a), s.slice(0, d) + e + s.slice(d) + h + x) : s + h + (-2 === d ? i : x);
    }
    return [
        C(t, l + (t[s] || "<?>") + (2 === i ? "</svg>" : "")),
        o
    ];
};
class V {
    constructor({ strings: t, _$litType$: s }, n){
        let r;
        this.parts = [];
        let c = 0, a = 0;
        const u = t.length - 1, d = this.parts, [f, v] = P(t, s);
        if (this.el = V.createElement(f, n), E.currentNode = this.el.content, 2 === s) {
            const t = this.el.content.firstChild;
            t.replaceWith(...t.childNodes);
        }
        for(; null !== (r = E.nextNode()) && d.length < u;){
            if (1 === r.nodeType) {
                if (r.hasAttributes()) for (const t of r.getAttributeNames())if (t.endsWith(e)) {
                    const i = v[a++], s = r.getAttribute(t).split(h), e = /([.?@])?(.*)/.exec(i);
                    d.push({
                        type: 1,
                        index: c,
                        name: e[2],
                        strings: s,
                        ctor: "." === e[1] ? k : "?" === e[1] ? H : "@" === e[1] ? I : R
                    }), r.removeAttribute(t);
                } else t.startsWith(h) && (d.push({
                    type: 6,
                    index: c
                }), r.removeAttribute(t));
                if ($.test(r.tagName)) {
                    const t = r.textContent.split(h), s = t.length - 1;
                    if (s > 0) {
                        r.textContent = i ? i.emptyScript : "";
                        for(let i = 0; i < s; i++)r.append(t[i], l()), E.nextNode(), d.push({
                            type: 2,
                            index: ++c
                        });
                        r.append(t[s], l());
                    }
                }
            } else if (8 === r.nodeType) {
                if (r.data === o) d.push({
                    type: 2,
                    index: c
                });
                else {
                    let t = -1;
                    for(; -1 !== (t = r.data.indexOf(h, t + 1));)d.push({
                        type: 7,
                        index: c
                    }), t += h.length - 1;
                }
            }
            c++;
        }
    }
    static createElement(t, i) {
        const s = r.createElement("template");
        return s.innerHTML = t, s;
    }
}
function N(t, i, s = t, e) {
    if (i === w) return i;
    let h = void 0 !== e ? s._$Co?.[e] : s._$Cl;
    const o = c(i) ? void 0 : i._$litDirective$;
    return h?.constructor !== o && (h?._$AO?.(!1), void 0 === o ? h = void 0 : (h = new o(t), h._$AT(t, s, e)), void 0 !== e ? (s._$Co ??= [])[e] = h : s._$Cl = h), void 0 !== h && (i = N(t, h._$AS(t, i.values), h, e)), i;
}
class S {
    constructor(t, i){
        this._$AV = [], this._$AN = void 0, this._$AD = t, this._$AM = i;
    }
    get parentNode() {
        return this._$AM.parentNode;
    }
    get _$AU() {
        return this._$AM._$AU;
    }
    u(t) {
        const { el: { content: i }, parts: s } = this._$AD, e = (t?.creationScope ?? r).importNode(i, !0);
        E.currentNode = e;
        let h = E.nextNode(), o = 0, n = 0, l = s[0];
        for(; void 0 !== l;){
            if (o === l.index) {
                let i;
                2 === l.type ? i = new M(h, h.nextSibling, this, t) : 1 === l.type ? i = new l.ctor(h, l.name, l.strings, this, t) : 6 === l.type && (i = new L(h, this, t)), this._$AV.push(i), l = s[++n];
            }
            o !== l?.index && (h = E.nextNode(), o++);
        }
        return E.currentNode = r, e;
    }
    p(t) {
        let i = 0;
        for (const s of this._$AV)void 0 !== s && (void 0 !== s.strings ? (s._$AI(t, s, i), i += s.strings.length - 2) : s._$AI(t[i])), i++;
    }
}
class M {
    get _$AU() {
        return this._$AM?._$AU ?? this._$Cv;
    }
    constructor(t, i, s, e){
        this.type = 2, this._$AH = T, this._$AN = void 0, this._$AA = t, this._$AB = i, this._$AM = s, this.options = e, this._$Cv = e?.isConnected ?? !0;
    }
    get parentNode() {
        let t = this._$AA.parentNode;
        const i = this._$AM;
        return void 0 !== i && 11 === t?.nodeType && (t = i.parentNode), t;
    }
    get startNode() {
        return this._$AA;
    }
    get endNode() {
        return this._$AB;
    }
    _$AI(t, i = this) {
        t = N(this, t, i), c(t) ? t === T || null == t || "" === t ? (this._$AH !== T && this._$AR(), this._$AH = T) : t !== this._$AH && t !== w && this._(t) : void 0 !== t._$litType$ ? this.g(t) : void 0 !== t.nodeType ? this.$(t) : u(t) ? this.T(t) : this._(t);
    }
    k(t) {
        return this._$AA.parentNode.insertBefore(t, this._$AB);
    }
    $(t) {
        this._$AH !== t && (this._$AR(), this._$AH = this.k(t));
    }
    _(t) {
        this._$AH !== T && c(this._$AH) ? this._$AA.nextSibling.data = t : this.$(r.createTextNode(t)), this._$AH = t;
    }
    g(t) {
        const { values: i, _$litType$: s } = t, e = "number" == typeof s ? this._$AC(t) : (void 0 === s.el && (s.el = V.createElement(C(s.h, s.h[0]), this.options)), s);
        if (this._$AH?._$AD === e) this._$AH.p(i);
        else {
            const t = new S(e, this), s = t.u(this.options);
            t.p(i), this.$(s), this._$AH = t;
        }
    }
    _$AC(t) {
        let i = A.get(t.strings);
        return void 0 === i && A.set(t.strings, i = new V(t)), i;
    }
    T(t) {
        a(this._$AH) || (this._$AH = [], this._$AR());
        const i = this._$AH;
        let s, e = 0;
        for (const h of t)e === i.length ? i.push(s = new M(this.k(l()), this.k(l()), this, this.options)) : s = i[e], s._$AI(h), e++;
        e < i.length && (this._$AR(s && s._$AB.nextSibling, e), i.length = e);
    }
    _$AR(t = this._$AA.nextSibling, i) {
        for(this._$AP?.(!1, !0, i); t && t !== this._$AB;){
            const i = t.nextSibling;
            t.remove(), t = i;
        }
    }
    setConnected(t) {
        void 0 === this._$AM && (this._$Cv = t, this._$AP?.(t));
    }
}
class R {
    get tagName() {
        return this.element.tagName;
    }
    get _$AU() {
        return this._$AM._$AU;
    }
    constructor(t, i, s, e, h){
        this.type = 1, this._$AH = T, this._$AN = void 0, this.element = t, this.name = i, this._$AM = e, this.options = h, s.length > 2 || "" !== s[0] || "" !== s[1] ? (this._$AH = Array(s.length - 1).fill(new String), this.strings = s) : this._$AH = T;
    }
    _$AI(t, i = this, s, e) {
        const h = this.strings;
        let o = !1;
        if (void 0 === h) t = N(this, t, i, 0), o = !c(t) || t !== this._$AH && t !== w, o && (this._$AH = t);
        else {
            const e = t;
            let n, r;
            for(t = h[0], n = 0; n < h.length - 1; n++)r = N(this, e[s + n], i, n), r === w && (r = this._$AH[n]), o ||= !c(r) || r !== this._$AH[n], r === T ? t = T : t !== T && (t += (r ?? "") + h[n + 1]), this._$AH[n] = r;
        }
        o && !e && this.O(t);
    }
    O(t) {
        t === T ? this.element.removeAttribute(this.name) : this.element.setAttribute(this.name, t ?? "");
    }
}
class k extends R {
    constructor(){
        super(...arguments), this.type = 3;
    }
    O(t) {
        this.element[this.name] = t === T ? void 0 : t;
    }
}
class H extends R {
    constructor(){
        super(...arguments), this.type = 4;
    }
    O(t) {
        this.element.toggleAttribute(this.name, !!t && t !== T);
    }
}
class I extends R {
    constructor(t, i, s, e, h){
        super(t, i, s, e, h), this.type = 5;
    }
    _$AI(t, i = this) {
        if ((t = N(this, t, i, 0) ?? T) === w) return;
        const s = this._$AH, e = t === T && s !== T || t.capture !== s.capture || t.once !== s.once || t.passive !== s.passive, h = t !== T && (s === T || e);
        e && this.element.removeEventListener(this.name, this, s), h && this.element.addEventListener(this.name, this, t), this._$AH = t;
    }
    handleEvent(t) {
        "function" == typeof this._$AH ? this._$AH.call(this.options?.host ?? this.element, t) : this._$AH.handleEvent(t);
    }
}
class L {
    constructor(t, i, s){
        this.element = t, this.type = 6, this._$AN = void 0, this._$AM = i, this.options = s;
    }
    get _$AU() {
        return this._$AM._$AU;
    }
    _$AI(t) {
        N(this, t);
    }
}
const z = {
    j: e,
    P: h,
    A: o,
    C: 1,
    M: P,
    L: S,
    R: u,
    V: N,
    D: M,
    I: R,
    H,
    N: I,
    U: k,
    B: L
}, Z = t.litHtmlPolyfillSupport;
Z?.(V, M), (t.litHtmlVersions ??= []).push("3.1.0");
const j = (t, i, s)=>{
    const e = s?.renderBefore ?? i;
    let h = e._$litPart$;
    if (void 0 === h) {
        const t = s?.renderBefore ?? null;
        e._$litPart$ = h = new M(i.insertBefore(l(), t), t, void 0, s ?? {});
    }
    return h._$AI(t), h;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9YxkX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LitElement", ()=>s);
parcelHelpers.export(exports, "_$LE", ()=>o);
var _reactiveElement = require("@lit/reactive-element");
parcelHelpers.exportAll(_reactiveElement, exports);
var _litHtml = require("lit-html");
parcelHelpers.exportAll(_litHtml, exports);
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */ class s extends (0, _reactiveElement.ReactiveElement) {
    constructor(){
        super(...arguments), this.renderOptions = {
            host: this
        }, this._$Do = void 0;
    }
    createRenderRoot() {
        const t = super.createRenderRoot();
        return this.renderOptions.renderBefore ??= t.firstChild, t;
    }
    update(t) {
        const i = this.render();
        this.hasUpdated || (this.renderOptions.isConnected = this.isConnected), super.update(t), this._$Do = (0, _litHtml.render)(i, this.renderRoot, this.renderOptions);
    }
    connectedCallback() {
        super.connectedCallback(), this._$Do?.setConnected(!0);
    }
    disconnectedCallback() {
        super.disconnectedCallback(), this._$Do?.setConnected(!1);
    }
    render() {
        return 0, _litHtml.noChange;
    }
}
s._$litElement$ = !0, s["finalized"] = !0, globalThis.litElementHydrateSupport?.({
    LitElement: s
});
const r = globalThis.litElementPolyfillSupport;
r?.({
    LitElement: s
});
const o = {
    _$AK: (t, e, i)=>{
        t._$AK(e, i);
    },
    _$AL: (t)=>t._$AL
};
(globalThis.litElementVersions ??= []).push("4.0.2");

},{"@lit/reactive-element":"hypet","lit-html":"1cmQt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"e2OXP":[function(require,module,exports) {
/**
 * @license
 * Copyright 2022 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isServer", ()=>o);
const o = !1;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bCPKi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _customElementJs = require("@lit/reactive-element/decorators/custom-element.js");
parcelHelpers.exportAll(_customElementJs, exports);
var _propertyJs = require("@lit/reactive-element/decorators/property.js");
parcelHelpers.exportAll(_propertyJs, exports);
var _stateJs = require("@lit/reactive-element/decorators/state.js");
parcelHelpers.exportAll(_stateJs, exports);
var _eventOptionsJs = require("@lit/reactive-element/decorators/event-options.js");
parcelHelpers.exportAll(_eventOptionsJs, exports);
var _queryJs = require("@lit/reactive-element/decorators/query.js");
parcelHelpers.exportAll(_queryJs, exports);
var _queryAllJs = require("@lit/reactive-element/decorators/query-all.js");
parcelHelpers.exportAll(_queryAllJs, exports);
var _queryAsyncJs = require("@lit/reactive-element/decorators/query-async.js");
parcelHelpers.exportAll(_queryAsyncJs, exports);
var _queryAssignedElementsJs = require("@lit/reactive-element/decorators/query-assigned-elements.js");
parcelHelpers.exportAll(_queryAssignedElementsJs, exports);
var _queryAssignedNodesJs = require("@lit/reactive-element/decorators/query-assigned-nodes.js");
parcelHelpers.exportAll(_queryAssignedNodesJs, exports);

},{"@lit/reactive-element/decorators/custom-element.js":"cMf50","@lit/reactive-element/decorators/property.js":"ipYYa","@lit/reactive-element/decorators/state.js":"goyf7","@lit/reactive-element/decorators/event-options.js":"8b5ex","@lit/reactive-element/decorators/query.js":"kzuRy","@lit/reactive-element/decorators/query-all.js":"krNkJ","@lit/reactive-element/decorators/query-async.js":"a6gRJ","@lit/reactive-element/decorators/query-assigned-elements.js":"kKpwU","@lit/reactive-element/decorators/query-assigned-nodes.js":"2F824","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cMf50":[function(require,module,exports) {
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "customElement", ()=>t);
const t = (t)=>(e, o)=>{
        void 0 !== o ? o.addInitializer(()=>{
            customElements.define(t, e);
        }) : customElements.define(t, e);
    };

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ipYYa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "property", ()=>n);
parcelHelpers.export(exports, "standardProperty", ()=>r);
var _reactiveElementJs = require("../reactive-element.js");
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */ const o = {
    attribute: !0,
    type: String,
    converter: (0, _reactiveElementJs.defaultConverter),
    reflect: !1,
    hasChanged: (0, _reactiveElementJs.notEqual)
}, r = (t = o, e, r)=>{
    const { kind: n, metadata: i } = r;
    let s = globalThis.litPropertyMetadata.get(i);
    if (void 0 === s && globalThis.litPropertyMetadata.set(i, s = new Map), s.set(r.name, t), "accessor" === n) {
        const { name: o } = r;
        return {
            set (r) {
                const n = e.get.call(this);
                e.set.call(this, r), this.requestUpdate(o, n, t);
            },
            init (e) {
                return void 0 !== e && this.C(o, void 0, t), e;
            }
        };
    }
    if ("setter" === n) {
        const { name: o } = r;
        return function(r) {
            const n = this[o];
            e.call(this, r), this.requestUpdate(o, n, t);
        };
    }
    throw Error("Unsupported decorator location: " + n);
};
function n(t) {
    return (e, o)=>"object" == typeof o ? r(t, e, o) : ((t, e, o)=>{
            const r = e.hasOwnProperty(o);
            return e.constructor.createProperty(o, r ? {
                ...t,
                wrapped: !0
            } : t), r ? Object.getOwnPropertyDescriptor(e, o) : void 0;
        })(t, e, o);
}

},{"../reactive-element.js":"hypet","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"goyf7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "state", ()=>r);
var _propertyJs = require("./property.js");
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */ function r(r) {
    return (0, _propertyJs.property)({
        ...r,
        state: !0,
        attribute: !1
    });
}

},{"./property.js":"ipYYa","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8b5ex":[function(require,module,exports) {
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "eventOptions", ()=>t);
function t(t) {
    return (n, o)=>{
        const c = "function" == typeof n ? n : n[o];
        Object.assign(c, t);
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kzuRy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "query", ()=>e);
var _baseJs = require("./base.js");
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */ function e(e, r) {
    return (n, s, i)=>{
        const o = (t)=>t.renderRoot?.querySelector(e) ?? null;
        if (r) {
            const { get: e, set: r } = "object" == typeof s ? n : i ?? (()=>{
                const t = Symbol();
                return {
                    get () {
                        return this[t];
                    },
                    set (e) {
                        this[t] = e;
                    }
                };
            })();
            return (0, _baseJs.desc)(n, s, {
                get () {
                    let t = e.call(this);
                    return void 0 === t && (t = o(this), (null !== t || this.hasUpdated) && r.call(this, t)), t;
                }
            });
        }
        return (0, _baseJs.desc)(n, s, {
            get () {
                return o(this);
            }
        });
    };
}

},{"./base.js":"d0R9Y","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"d0R9Y":[function(require,module,exports) {
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "desc", ()=>e);
const e = (e, t, c)=>(c.configurable = !0, c.enumerable = !0, Reflect.decorate && "object" != typeof t && Object.defineProperty(e, t, c), c);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"krNkJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "queryAll", ()=>r);
var _baseJs = require("./base.js");
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */ let e;
function r(r) {
    return (n, o)=>(0, _baseJs.desc)(n, o, {
            get () {
                return (this.renderRoot ?? (e ??= document.createDocumentFragment())).querySelectorAll(r);
            }
        });
}

},{"./base.js":"d0R9Y","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"a6gRJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "queryAsync", ()=>r);
var _baseJs = require("./base.js");
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */ function r(r) {
    return (n, e)=>(0, _baseJs.desc)(n, e, {
            async get () {
                return await this.updateComplete, this.renderRoot?.querySelector(r) ?? null;
            }
        });
}

},{"./base.js":"d0R9Y","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kKpwU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "queryAssignedElements", ()=>o);
var _baseJs = require("./base.js");
/**
 * @license
 * Copyright 2021 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */ function o(o) {
    return (e, n)=>{
        const { slot: r, selector: s } = o ?? {}, c = "slot" + (r ? `[name=${r}]` : ":not([name])");
        return (0, _baseJs.desc)(e, n, {
            get () {
                const t = this.renderRoot?.querySelector(c), e = t?.assignedElements(o) ?? [];
                return void 0 === s ? e : e.filter((t)=>t.matches(s));
            }
        });
    };
}

},{"./base.js":"d0R9Y","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2F824":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "queryAssignedNodes", ()=>n);
var _baseJs = require("./base.js");
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */ function n(n) {
    return (o, r)=>{
        const { slot: e } = n ?? {}, s = "slot" + (e ? `[name=${e}]` : ":not([name])");
        return (0, _baseJs.desc)(o, r, {
            get () {
                const t = this.renderRoot?.querySelector(s);
                return t?.assignedNodes(n) ?? [];
            }
        });
    };
}

},{"./base.js":"d0R9Y","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"77RTn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _ifDefinedJs = require("lit-html/directives/if-defined.js");
parcelHelpers.exportAll(_ifDefinedJs, exports);

},{"lit-html/directives/if-defined.js":"fP4k4","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fP4k4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ifDefined", ()=>o);
var _litHtmlJs = require("../lit-html.js");
/**
 * @license
 * Copyright 2018 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */ const o = (o)=>o ?? (0, _litHtmlJs.nothing);

},{"../lit-html.js":"1cmQt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4GQsu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _styleMapJs = require("lit-html/directives/style-map.js");
parcelHelpers.exportAll(_styleMapJs, exports);

},{"lit-html/directives/style-map.js":"kqcVU","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kqcVU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styleMap", ()=>o);
var _litHtmlJs = require("../lit-html.js");
var _directiveJs = require("../directive.js");
/**
 * @license
 * Copyright 2018 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */ const n = "important", i = " !" + n, o = (0, _directiveJs.directive)(class extends (0, _directiveJs.Directive) {
    constructor(t){
        if (super(t), t.type !== (0, _directiveJs.PartType).ATTRIBUTE || "style" !== t.name || t.strings?.length > 2) throw Error("The `styleMap` directive must be used in the `style` attribute and must be the only part in the attribute.");
    }
    render(t) {
        return Object.keys(t).reduce((e, r)=>{
            const s = t[r];
            return null == s ? e : e + `${r = r.includes("-") ? r : r.replace(/(?:^(webkit|moz|ms|o)|)(?=[A-Z])/g, "-$&").toLowerCase()}:${s};`;
        }, "");
    }
    update(e, [r]) {
        const { style: s } = e.element;
        if (void 0 === this.ut) return this.ut = new Set(Object.keys(r)), this.render(r);
        for (const t of this.ut)null == r[t] && (this.ut.delete(t), t.includes("-") ? s.removeProperty(t) : s[t] = null);
        for(const t in r){
            const e = r[t];
            if (null != e) {
                this.ut.add(t);
                const r = "string" == typeof e && e.endsWith(i);
                t.includes("-") || r ? s.setProperty(t, r ? e.slice(0, -11) : e, r ? n : "") : s[t] = e;
            }
        }
        return 0, _litHtmlJs.noChange;
    }
});

},{"../lit-html.js":"1cmQt","../directive.js":"9lbyV","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9lbyV":[function(require,module,exports) {
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Directive", ()=>i);
parcelHelpers.export(exports, "PartType", ()=>t);
parcelHelpers.export(exports, "directive", ()=>e);
const t = {
    ATTRIBUTE: 1,
    CHILD: 2,
    PROPERTY: 3,
    BOOLEAN_ATTRIBUTE: 4,
    EVENT: 5,
    ELEMENT: 6
}, e = (t)=>(...e)=>({
            _$litDirective$: t,
            values: e
        });
class i {
    constructor(t){}
    get _$AU() {
        return this._$AM._$AU;
    }
    _$AT(t, e, i) {
        this._$Ct = t, this._$AM = e, this._$Ci = i;
    }
    _$AS(t, e) {
        return this.update(t, e);
    }
    update(t, e) {
        return this.render(...e);
    }
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5deJi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging
parcelHelpers.export(exports, "MduiElement", ()=>MduiElement);
var _lit = require("lit");
class MduiElement extends (0, _lit.LitElement) {
    /**
     * 触发自定义事件。若返回 false，表示事件被取消
     * @param type
     * @param options 通常只用到 cancelable 和 detail；bubbles、composed 统一不用
     */ emit(type, options) {
        const event = new CustomEvent(type, Object.assign({
            bubbles: true,
            cancelable: false,
            composed: true,
            detail: {}
        }, options));
        return this.dispatchEvent(event);
    }
}

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cARnY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * 检查指定的 slot 是否存在
 */ parcelHelpers.export(exports, "HasSlotController", ()=>HasSlotController);
var _js = require("@mdui/jq/$.js");
var _domJs = require("@mdui/jq/shared/dom.js");
class HasSlotController {
    constructor(host, ...slotNames){
        this.slotNames = [];
        (this.host = host).addController(this);
        this.slotNames = slotNames;
        this.onSlotChange = this.onSlotChange.bind(this);
    }
    hostConnected() {
        this.host.shadowRoot.addEventListener("slotchange", this.onSlotChange);
        if (!(0, _domJs.isDomReady)()) (0, _js.$)(()=>{
            this.host.requestUpdate();
        });
    }
    hostDisconnected() {
        this.host.shadowRoot.removeEventListener("slotchange", this.onSlotChange);
    }
    test(slotName) {
        return slotName === "[default]" ? this.hasDefaultSlot() : this.hasNamedSlot(slotName);
    }
    hasDefaultSlot() {
        return [
            ...this.host.childNodes
        ].some((node)=>{
            if (node.nodeType === node.TEXT_NODE && node.textContent.trim() !== "") return true;
            if (node.nodeType === node.ELEMENT_NODE) {
                const el = node;
                if (!el.hasAttribute("slot")) return true;
            }
            return false;
        });
    }
    hasNamedSlot(name) {
        return this.host.querySelector(`:scope > [slot="${name}"]`) !== null;
    }
    onSlotChange(event) {
        const slot = event.target;
        if (this.slotNames.includes("[default]") && !slot.name || slot.name && this.slotNames.includes(slot.name)) this.host.requestUpdate();
    }
}

},{"@mdui/jq/$.js":"dZx9v","@mdui/jq/shared/dom.js":"5U5Wi","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7SHVu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "nothingTemplate", ()=>nothingTemplate);
var _lit = require("lit");
const nothingTemplate = (0, _lit.html)`${(0, _lit.nothing)}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jFNMX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "componentStyle", ()=>componentStyle);
var _lit = require("lit");
const componentStyle = (0, _lit.css)`:host{box-sizing:border-box}:host *,:host ::after,:host ::before{box-sizing:inherit}:host :focus,:host :focus-visible,:host(:focus),:host(:focus-visible){outline:0}[hidden]{display:none!important}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6YN4l":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./icon/index.js");
parcelHelpers.exportAll(_indexJs, exports);

},{"./icon/index.js":"luMQD","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"luMQD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Icon", ()=>Icon);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _styleMapJs = require("lit/directives/style-map.js");
var _unsafeSvgJs = require("lit/directives/unsafe-svg.js");
var _untilJs = require("lit/directives/until.js");
var _ajaxJs = require("@mdui/jq/functions/ajax.js");
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _hasSlotJs = require("@mdui/shared/controllers/has-slot.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _styleJs = require("./style.js");
/**
 * @summary 图标组件
 *
 * ```html
 * <mdui-icon name="search"></mdui-icon>
 * ```
 *
 * @slot - `svg` 图标的内容
 */ let Icon = class Icon extends (0, _mduiElementJs.MduiElement) {
    constructor(){
        super(...arguments);
        this.hasSlotController = new (0, _hasSlotJs.HasSlotController)(this, "[default]");
    }
    render() {
        const renderDefault = ()=>{
            if (this.name) {
                const [name, variant] = this.name.split("--");
                const familyMap = new Map([
                    [
                        "outlined",
                        "Material Icons Outlined"
                    ],
                    [
                        "filled",
                        "Material Icons"
                    ],
                    [
                        "rounded",
                        "Material Icons Round"
                    ],
                    [
                        "sharp",
                        "Material Icons Sharp"
                    ],
                    [
                        "two-tone",
                        "Material Icons Two Tone"
                    ]
                ]);
                return (0, _lit.html)`<span style="${(0, _styleMapJs.styleMap)({
                    fontFamily: familyMap.get(variant)
                })}">${name}</span>`;
            }
            if (this.src) return (0, _lit.html)`${(0, _untilJs.until)((0, _ajaxJs.ajax)({
                url: this.src
            }).then((0, _unsafeSvgJs.unsafeSVG)))}`;
            return (0, _lit.html)``;
        };
        return this.hasSlotController.test("[default]") ? (0, _lit.html)`<slot></slot>` : renderDefault();
    }
};
Icon.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _styleJs.style)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Icon.prototype, "name", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Icon.prototype, "src", void 0);
Icon = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-icon")
], Icon);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/style-map.js":"4GQsu","lit/directives/unsafe-svg.js":"l1CHr","lit/directives/until.js":"827PO","@mdui/jq/functions/ajax.js":"eDP1p","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/controllers/has-slot.js":"cARnY","@mdui/shared/lit-styles/component-style.js":"jFNMX","./style.js":"fI5VJ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"l1CHr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _unsafeSvgJs = require("lit-html/directives/unsafe-svg.js");
parcelHelpers.exportAll(_unsafeSvgJs, exports);

},{"lit-html/directives/unsafe-svg.js":"68CGf","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"68CGf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unsafeSVG", ()=>o);
var _directiveJs = require("../directive.js");
var _unsafeHtmlJs = require("./unsafe-html.js");
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */ class t extends (0, _unsafeHtmlJs.UnsafeHTMLDirective) {
}
t.directiveName = "unsafeSVG", t.resultType = 2;
const o = (0, _directiveJs.directive)(t);

},{"../directive.js":"9lbyV","./unsafe-html.js":"91pKz","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"91pKz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "UnsafeHTMLDirective", ()=>e);
parcelHelpers.export(exports, "unsafeHTML", ()=>o);
var _litHtmlJs = require("../lit-html.js");
var _directiveJs = require("../directive.js");
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */ class e extends (0, _directiveJs.Directive) {
    constructor(i){
        if (super(i), this.et = (0, _litHtmlJs.nothing), i.type !== (0, _directiveJs.PartType).CHILD) throw Error(this.constructor.directiveName + "() can only be used in child bindings");
    }
    render(r) {
        if (r === (0, _litHtmlJs.nothing) || null == r) return this.vt = void 0, this.et = r;
        if (r === (0, _litHtmlJs.noChange)) return r;
        if ("string" != typeof r) throw Error(this.constructor.directiveName + "() called with a non-string value");
        if (r === this.et) return this.vt;
        this.et = r;
        const s = [
            r
        ];
        return s.raw = s, this.vt = {
            _$litType$: this.constructor.resultType,
            strings: s,
            values: []
        };
    }
}
e.directiveName = "unsafeHTML", e.resultType = 1;
const o = (0, _directiveJs.directive)(e);

},{"../lit-html.js":"1cmQt","../directive.js":"9lbyV","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"827PO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _untilJs = require("lit-html/directives/until.js");
parcelHelpers.exportAll(_untilJs, exports);

},{"lit-html/directives/until.js":"5S3cD","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5S3cD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "UntilDirective", ()=>c);
parcelHelpers.export(exports, "until", ()=>m);
var _litHtmlJs = require("../lit-html.js");
var _directiveHelpersJs = require("../directive-helpers.js");
var _asyncDirectiveJs = require("../async-directive.js");
var _privateAsyncHelpersJs = require("./private-async-helpers.js");
var _directiveJs = require("../directive.js");
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */ const n = (t)=>!(0, _directiveHelpersJs.isPrimitive)(t) && "function" == typeof t.then, h = 1073741823;
class c extends (0, _asyncDirectiveJs.AsyncDirective) {
    constructor(){
        super(...arguments), this._$C_t = h, this._$Cwt = [], this._$Cq = new (0, _privateAsyncHelpersJs.PseudoWeakRef)(this), this._$CK = new (0, _privateAsyncHelpersJs.Pauser);
    }
    render(...s) {
        return s.find((t)=>!n(t)) ?? (0, _litHtmlJs.noChange);
    }
    update(s, i) {
        const e = this._$Cwt;
        let r = e.length;
        this._$Cwt = i;
        const o = this._$Cq, c = this._$CK;
        this.isConnected || this.disconnected();
        for(let t = 0; t < i.length && !(t > this._$C_t); t++){
            const s = i[t];
            if (!n(s)) return this._$C_t = t, s;
            t < r && s === e[t] || (this._$C_t = h, r = 0, Promise.resolve(s).then(async (t)=>{
                for(; c.get();)await c.get();
                const i = o.deref();
                if (void 0 !== i) {
                    const e = i._$Cwt.indexOf(s);
                    e > -1 && e < i._$C_t && (i._$C_t = e, i.setValue(t));
                }
            }));
        }
        return 0, _litHtmlJs.noChange;
    }
    disconnected() {
        this._$Cq.disconnect(), this._$CK.pause();
    }
    reconnected() {
        this._$Cq.reconnect(this), this._$CK.resume();
    }
}
const m = (0, _directiveJs.directive)(c);

},{"../lit-html.js":"1cmQt","../directive-helpers.js":"cJsxz","../async-directive.js":"4f1Uv","./private-async-helpers.js":"drd9e","../directive.js":"9lbyV","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cJsxz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TemplateResultType", ()=>n);
parcelHelpers.export(exports, "clearPart", ()=>j);
parcelHelpers.export(exports, "getCommittedValue", ()=>p);
parcelHelpers.export(exports, "getDirectiveClass", ()=>d);
parcelHelpers.export(exports, "insertPart", ()=>r);
parcelHelpers.export(exports, "isCompiledTemplateResult", ()=>l);
parcelHelpers.export(exports, "isDirectiveResult", ()=>c);
parcelHelpers.export(exports, "isPrimitive", ()=>i);
parcelHelpers.export(exports, "isSingleExpression", ()=>f);
parcelHelpers.export(exports, "isTemplateResult", ()=>e);
parcelHelpers.export(exports, "removePart", ()=>h);
parcelHelpers.export(exports, "setChildPartValue", ()=>v);
parcelHelpers.export(exports, "setCommittedValue", ()=>m);
var _litHtmlJs = require("./lit-html.js");
/**
 * @license
 * Copyright 2020 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */ const { D: t } = (0, _litHtmlJs._$LH), i = (o)=>null === o || "object" != typeof o && "function" != typeof o, n = {
    HTML: 1,
    SVG: 2
}, e = (o, t)=>void 0 === t ? void 0 !== o?._$litType$ : o?._$litType$ === t, l = (o)=>null != o?._$litType$?.h, c = (o)=>void 0 !== o?._$litDirective$, d = (o)=>o?._$litDirective$, f = (o)=>void 0 === o.strings, s = ()=>document.createComment(""), r = (o, i, n)=>{
    const e = o._$AA.parentNode, l = void 0 === i ? o._$AB : i._$AA;
    if (void 0 === n) {
        const i = e.insertBefore(s(), l), c = e.insertBefore(s(), l);
        n = new t(i, c, o, o.options);
    } else {
        const t = n._$AB.nextSibling, i = n._$AM, c = i !== o;
        if (c) {
            let t;
            n._$AQ?.(o), n._$AM = o, void 0 !== n._$AP && (t = o._$AU) !== i._$AU && n._$AP(t);
        }
        if (t !== l || c) {
            let o = n._$AA;
            for(; o !== t;){
                const t = o.nextSibling;
                e.insertBefore(o, l), o = t;
            }
        }
    }
    return n;
}, v = (o, t, i = o)=>(o._$AI(t, i), o), u = {}, m = (o, t = u)=>o._$AH = t, p = (o)=>o._$AH, h = (o)=>{
    o._$AP?.(!1, !0);
    let t = o._$AA;
    const i = o._$AB.nextSibling;
    for(; t !== i;){
        const o = t.nextSibling;
        t.remove(), t = o;
    }
}, j = (o)=>{
    o._$AR();
};

},{"./lit-html.js":"1cmQt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4f1Uv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Directive", ()=>(0, _directiveJs.Directive));
parcelHelpers.export(exports, "PartType", ()=>(0, _directiveJs.PartType));
parcelHelpers.export(exports, "directive", ()=>(0, _directiveJs.directive));
parcelHelpers.export(exports, "AsyncDirective", ()=>f);
var _directiveHelpersJs = require("./directive-helpers.js");
var _directiveJs = require("./directive.js");
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */ const s = (i, t)=>{
    const e = i._$AN;
    if (void 0 === e) return !1;
    for (const i of e)i._$AO?.(t, !1), s(i, t);
    return !0;
}, o = (i)=>{
    let t, e;
    do {
        if (void 0 === (t = i._$AM)) break;
        e = t._$AN, e.delete(i), i = t;
    }while (0 === e?.size);
}, r = (i)=>{
    for(let t; t = i._$AM; i = t){
        let e = t._$AN;
        if (void 0 === e) t._$AN = e = new Set;
        else if (e.has(i)) break;
        e.add(i), c(t);
    }
};
function h(i) {
    void 0 !== this._$AN ? (o(this), this._$AM = i, r(this)) : this._$AM = i;
}
function n(i, t = !1, e = 0) {
    const r = this._$AH, h = this._$AN;
    if (void 0 !== h && 0 !== h.size) {
        if (t) {
            if (Array.isArray(r)) for(let i = e; i < r.length; i++)s(r[i], !1), o(r[i]);
            else null != r && (s(r, !1), o(r));
        } else s(this, i);
    }
}
const c = (i)=>{
    i.type == (0, _directiveJs.PartType).CHILD && (i._$AP ??= n, i._$AQ ??= h);
};
class f extends (0, _directiveJs.Directive) {
    constructor(){
        super(...arguments), this._$AN = void 0;
    }
    _$AT(i, t, e) {
        super._$AT(i, t, e), r(this), this.isConnected = i._$AU;
    }
    _$AO(i, t = !0) {
        i !== this.isConnected && (this.isConnected = i, i ? this.reconnected?.() : this.disconnected?.()), t && (s(this, i), o(this));
    }
    setValue(t) {
        if ((0, _directiveHelpersJs.isSingleExpression)(this._$Ct)) this._$Ct._$AI(t, this);
        else {
            const i = [
                ...this._$Ct._$AH
            ];
            i[this._$Ci] = t, this._$Ct._$AI(i, this, 0);
        }
    }
    disconnected() {}
    reconnected() {}
}

},{"./directive-helpers.js":"cJsxz","./directive.js":"9lbyV","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"drd9e":[function(require,module,exports) {
/**
 * @license
 * Copyright 2021 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Pauser", ()=>i);
parcelHelpers.export(exports, "PseudoWeakRef", ()=>s);
parcelHelpers.export(exports, "forAwaitOf", ()=>t);
const t = async (t, s)=>{
    for await (const i of t)if (!1 === await s(i)) return;
};
class s {
    constructor(t){
        this.G = t;
    }
    disconnect() {
        this.G = void 0;
    }
    reconnect(t) {
        this.G = t;
    }
    deref() {
        return this.G;
    }
}
class i {
    constructor(){
        this.Y = void 0, this.Z = void 0;
    }
    get() {
        return this.Y;
    }
    pause() {
        this.Y ??= new Promise((t)=>this.Z = t);
    }
    resume() {
        this.Z?.(), this.Y = this.Z = void 0;
    }
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fI5VJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "style", ()=>style);
var _lit = require("lit");
const style = (0, _lit.css)`:host{display:inline-block;width:1em;height:1em;font-weight:400;font-family:'Material Icons';font-style:normal;line-height:1;direction:ltr;letter-spacing:normal;white-space:nowrap;text-transform:none;word-wrap:normal;-webkit-font-smoothing:antialiased;text-rendering:optimizelegibility;-moz-osx-font-smoothing:grayscale;font-size:1.5rem}::slotted(svg),svg{width:100%;height:100%;fill:currentcolor}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"11dsj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "style", ()=>style);
var _lit = require("lit");
const style = (0, _lit.css)`:host{--shape-corner:var(--mdui-shape-corner-full);position:relative;display:inline-flex;align-items:center;justify-content:center;overflow:hidden;white-space:nowrap;vertical-align:middle;border-radius:var(--shape-corner);-webkit-user-select:none;user-select:none;width:2.5rem;height:2.5rem;background-color:rgb(var(--mdui-color-primary-container));color:rgb(var(--mdui-color-on-primary-container));font-size:var(--mdui-typescale-title-medium-size);font-weight:var(--mdui-typescale-title-medium-weight);letter-spacing:var(--mdui-typescale-title-medium-tracking);line-height:var(--mdui-typescale-title-medium-line-height)}img{width:100%;height:100%}::slotted(mdui-icon),mdui-icon{font-size:1.5em}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jNhhg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./badge/index.js");
parcelHelpers.exportAll(_indexJs, exports);

},{"./badge/index.js":"5hwyx","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5hwyx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Badge", ()=>Badge);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _templateJs = require("@mdui/shared/helpers/template.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _styleJs = require("./style.js");
/**
 * @summary 徽标组件
 *
 * ```html
 * <mdui-badge>12</mdui-badge>
 * ```
 *
 * @slot - 显示的文本
 *
 * @cssprop --shape-corner - 组件的圆角大小。可以指定一个具体的像素值；但更推荐[引用设计令牌](/docs/2/styles/design-tokens#shape-corner)
 */ let Badge = class Badge extends (0, _mduiElementJs.MduiElement) {
    constructor(){
        super(...arguments);
        /**
         * 徽标形状。可选值为：
         * * `small`：小型徽标，不显示文字
         * * `large`：大型徽标，会显示文字
         */ this.variant = "large";
    }
    render() {
        if (this.variant === "small") return 0, _templateJs.nothingTemplate;
        return (0, _lit.html)`<slot></slot>`;
    }
};
Badge.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _styleJs.style)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Badge.prototype, "variant", void 0);
Badge = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-badge")
], Badge);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/helpers/template.js":"7SHVu","@mdui/shared/lit-styles/component-style.js":"jFNMX","./style.js":"iohna","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iohna":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "style", ()=>style);
var _lit = require("lit");
const style = (0, _lit.css)`:host{--shape-corner:var(--mdui-shape-corner-full);display:inline-flex;align-items:center;justify-content:center;border-radius:var(--shape-corner);padding-left:.25rem;padding-right:.25rem;color:rgb(var(--mdui-color-on-error));background-color:rgb(var(--mdui-color-error));height:1rem;min-width:1rem;font-size:var(--mdui-typescale-label-small-size);font-weight:var(--mdui-typescale-label-small-weight);letter-spacing:var(--mdui-typescale-label-small-tracking);line-height:var(--mdui-typescale-label-small-line-height)}:host([variant=small]){min-width:0;padding:0;width:.375rem;height:.375rem}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7Ft4J":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./bottom-app-bar/index.js");
parcelHelpers.exportAll(_indexJs, exports);

},{"./bottom-app-bar/index.js":"8ACx2","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8ACx2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "BottomAppBar", ()=>BottomAppBar);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _scrollBehaviorJs = require("@mdui/shared/mixins/scrollBehavior.js");
var _layoutItemBaseJs = require("../layout/layout-item-base.js");
var _styleJs = require("./style.js");
/**
 * @summary 底部应用栏组件
 *
 * ```html
 * <mdui-bottom-app-bar>
 * ..<mdui-button-icon icon="check_box--outlined"></mdui-button-icon>
 * ..<mdui-button-icon icon="edit--outlined"></mdui-button-icon>
 * ..<mdui-button-icon icon="mic_none--outlined"></mdui-button-icon>
 * ..<mdui-button-icon icon="image--outlined"></mdui-button-icon>
 * ..<div style="flex-grow: 1"></div>
 * ..<mdui-fab icon="add"></mdui-fab>
 * </mdui-bottom-app-bar>
 * ```
 *
 * @event show - 开始显示时，事件被触发。可以通过调用 `event.preventDefault()` 阻止显示
 * @event shown - 显示动画完成时，事件被触发
 * @event hide - 开始隐藏时，事件被触发。可以通过调用 `event.preventDefault()` 阻止隐藏
 * @event hidden - 隐藏动画完成时，事件被触发
 *
 * @slot - 底部应用栏内部的元素
 *
 * @cssprop --shape-corner - 组件的圆角大小。可以指定一个具体的像素值；但更推荐[引用设计令牌](/docs/2/styles/design-tokens#shape-corner)
 * @cssprop --z-index - 组件的 CSS 的 `z-index` 值
 */ let BottomAppBar = class BottomAppBar extends (0, _scrollBehaviorJs.ScrollBehaviorMixin)((0, _layoutItemBaseJs.LayoutItemBase)) {
    constructor(){
        super(...arguments);
        /**
         * 是否隐藏
         */ this.hide = false;
        /**
         * 是否使底部应用栏中的 [`<mdui-fab>`](/docs/2/components/fab) 组件脱离应用栏。若为 `true`，则在应用栏隐藏后，[`<mdui-fab>`](/docs/2/components/fab) 仍将停留在页面上
         */ this.fabDetach = false;
    }
    get scrollPaddingPosition() {
        return "bottom";
    }
    get layoutPlacement() {
        return "bottom";
    }
    firstUpdated(_changedProperties) {
        super.firstUpdated(_changedProperties);
        this.addEventListener("transitionend", (event)=>{
            if (event.target === this) this.emit(this.hide ? "hidden" : "shown");
        });
    }
    render() {
        return (0, _lit.html)`<slot></slot>`;
    }
    /**
     * 滚动行为
     * 当前仅支持 hide 这一个行为，所以不做行为类型判断
     */ runScrollThreshold(isScrollingUp) {
        // 向下滚动
        if (!isScrollingUp && !this.hide) {
            const eventProceeded = this.emit("hide", {
                cancelable: true
            });
            if (eventProceeded) this.hide = true;
        }
        // 向上滚动
        if (isScrollingUp && this.hide) {
            const eventProceeded = this.emit("show", {
                cancelable: true
            });
            if (eventProceeded) this.hide = false;
        }
    }
};
BottomAppBar.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _styleJs.style)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], BottomAppBar.prototype, "hide", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter),
        attribute: "fab-detach"
    })
], BottomAppBar.prototype, "fabDetach", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "scroll-behavior"
    })
], BottomAppBar.prototype, "scrollBehavior", void 0);
BottomAppBar = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-bottom-app-bar")
], BottomAppBar);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/lit-styles/component-style.js":"jFNMX","@mdui/shared/mixins/scrollBehavior.js":"lHJ5r","../layout/layout-item-base.js":"jgZrI","./style.js":"5dOLw","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6l4gk":[function(require,module,exports) {
/**
 * 在原生的 HTML 中，布尔属性只要添加了属性名，不论属性值设置成什么，属性值都是 true
 * 但这里设置了 attr="false" 时，要把属性设置为 false
 *
 * 原因是：
 * 在 vue3 中，通过 :attr="value" 设置属性时，vue 会优先从 DOM 属性中寻找是否存在 attr 属性名，
 * 若存在，则设置对应的 DOM 属性，否则设置对应的 attribute 属性
 * 但在 vue 的服务端渲染（ssr）时，不存在 DOM 对象，所以会把 attribute 属性设置成 attr="true" 或 attr="false"
 * 所以在 attribute 属性 attr="false" 时，需要把属性值转换为布尔值 false
 *
 * 这段代码不能封装成函数，否则生成 custom-elements.json 会识别不了
 * 这段注释仅在这里写一次，其他地方不再重复
 *
 * @see https://v3-migration.vuejs.org/zh/breaking-changes/attribute-coercion.html
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "booleanConverter", ()=>booleanConverter);
const booleanConverter = (value)=>{
    return value !== null && value !== "false";
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lHJ5r":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ScrollBehaviorMixin", ()=>ScrollBehaviorMixin);
var _tslib = require("tslib");
var _decoratorsJs = require("lit/decorators.js");
var _js = require("@mdui/jq/$.js");
var _cssJs = require("@mdui/jq/methods/css.js");
var _helperJs = require("@mdui/jq/shared/helper.js");
var _definedJs = require("../controllers/defined.js");
var _watchJs = require("../decorators/watch.js");
const ScrollBehaviorMixin = (superclass)=>{
    class ScrollBehaviorMixinClass extends superclass {
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        constructor(...args){
            super(...args);
            this.scrollBehaviorDefinedController = new (0, _definedJs.DefinedController)(this, {
                needDomReady: true
            });
            /**
             * 上次滚动后，垂直方向的距离（滚动距离超过 scrollThreshold 才记录）
             */ this.lastScrollTopThreshold = 0;
            /**
             * 上次滚动后，垂直方向的距离（无视 scrollThreshold，始终记录）
             */ this.lastScrollTopNoThreshold = 0;
            /**
             * 父元素是否是 `mdui-layout`
             */ this.isParentLayout = false;
            this.onListeningScroll = this.onListeningScroll.bind(this);
        }
        /**
         * 滚动时，如果需要给 container 添加 padding，添加在顶部还是底部
         */ get scrollPaddingPosition() {
            throw new Error("Must implement scrollPaddingPosition getter");
        }
        async onScrollTargetChange(oldValue, newValue) {
            await this.scrollBehaviorDefinedController.whenDefined();
            // 仅在有值切换到无值、或无值切换到有值时，更新
            if (oldValue && !newValue || !oldValue && newValue) this.updateContainerPadding();
            if (!this.scrollBehavior) return;
            const oldListening = this.getListening(oldValue);
            if (oldListening) oldListening.removeEventListener("scroll", this.onListeningScroll);
            const newListening = this.getListening(newValue);
            if (newListening) {
                this.updateScrollTop(newListening);
                newListening.addEventListener("scroll", this.onListeningScroll);
            }
        }
        async onScrollBehaviorChange(oldValue, newValue) {
            await this.scrollBehaviorDefinedController.whenDefined();
            // 仅在有值切换到无值、或无值切换到有值时，更新
            if (oldValue && !newValue || !oldValue && newValue) this.updateContainerPadding();
            const listening = this.getListening(this.scrollTarget);
            if (!listening) return;
            if (this.scrollBehavior) {
                this.updateScrollTop(listening);
                listening.addEventListener("scroll", this.onListeningScroll);
            } else listening.removeEventListener("scroll", this.onListeningScroll);
        }
        connectedCallback() {
            super.connectedCallback();
            this.scrollBehaviorDefinedController.whenDefined().then(()=>{
                this.isParentLayout = (0, _helperJs.isNodeName)(this.parentElement, "mdui-layout");
                this.updateContainerPadding();
            });
        }
        disconnectedCallback() {
            super.disconnectedCallback();
            this.scrollBehaviorDefinedController.whenDefined().then(()=>{
                this.updateContainerPadding(false);
            });
        }
        /**
         * scrollBehavior 包含多个滚动行为，用空格分割
         * 用该方法判断指定滚动行为是否在 scrollBehavior 中
         * @param behavior 为数组时，只要其中一个行为在 scrollBehavior 中，即返回 `true`
         */ hasScrollBehavior(behavior) {
            const behaviors = this.scrollBehavior?.split(" ") ?? [];
            if (Array.isArray(behavior)) return !!behaviors.filter((v)=>behavior.includes(v)).length;
            else return behaviors.includes(behavior);
        }
        /**
         * 执行滚动事件，在滚动距离超过 scrollThreshold 时才会执行
         * Note: 父类可以按需实现该方法
         * @param isScrollingUp 是否向上滚动
         * @param scrollTop 距离 scrollTarget 顶部的距离
         */ // eslint-disable-next-line @typescript-eslint/no-unused-vars
        runScrollThreshold(isScrollingUp, scrollTop) {
            return;
        }
        /**
         * 执行滚动事件，会无视 scrollThreshold，始终会执行
         * @param isScrollingUp 是否向上滚动
         * @param scrollTop 距离 scrollTarget 顶部的距离
         */ // eslint-disable-next-line @typescript-eslint/no-unused-vars
        runScrollNoThreshold(isScrollingUp, scrollTop) {
            return;
        }
        /**
         * 更新滚动容器的 padding，避免内容被 navigation-bar 覆盖
         * 仅 scrollBehavior 包含 hide、shrink 时，添加 padding
         * @param withPadding 该值为 false 时，为移除 padding
         */ updateContainerPadding(withPadding = true) {
            const container = this.getContainer(this.scrollTarget);
            if (!container || this.isParentLayout) return;
            const propName = this.scrollPaddingPosition === "top" ? "paddingTop" : "paddingBottom";
            if (withPadding) {
                const propValue = this.getListening(this.scrollTarget) && [
                    "fixed",
                    "absolute"
                ].includes((0, _js.$)(this).css("position")) ? this.offsetHeight : null;
                (0, _js.$)(container).css({
                    [propName]: propValue
                });
            } else (0, _js.$)(container).css({
                [propName]: null
            });
        }
        onListeningScroll() {
            const listening = this.getListening(this.scrollTarget);
            window.requestAnimationFrame(()=>this.onScroll(listening));
        }
        /**
         * 滚动事件，这里过滤掉不符合条件的滚动
         */ onScroll(listening) {
            const scrollTop = listening.scrollY ?? listening.scrollTop;
            // 无视 scrollThreshold 的回调
            if (this.lastScrollTopNoThreshold !== scrollTop) {
                this.runScrollNoThreshold(scrollTop < this.lastScrollTopNoThreshold, scrollTop);
                this.lastScrollTopNoThreshold = scrollTop;
            }
            // 滚动距离大于 scrollThreshold 时才执行的回调
            if (Math.abs(scrollTop - this.lastScrollTopThreshold) > (this.scrollThreshold || 0)) {
                this.runScrollThreshold(scrollTop < this.lastScrollTopThreshold, scrollTop);
                this.lastScrollTopThreshold = scrollTop;
            }
        }
        /**
         * 重新更新 lastScrollTopThreshold、lastScrollTopNoThreshold 的值
         * 用于在 scrollTarget、scrollBehavior 变更时，重新设置 lastScrollTopThreshold、lastScrollTopNoThreshold 的初始值
         */ updateScrollTop(listening) {
            this.lastScrollTopThreshold = this.lastScrollTopNoThreshold = listening.scrollY ?? listening.scrollTop;
        }
        /**
         * 获取组件需要监听哪个元素的滚动状态
         */ getListening(target) {
            return target ? (0, _js.$)(target)[0] : window;
        }
        /**
         * 获取组件在哪个容器内滚动
         */ getContainer(target) {
            return target ? (0, _js.$)(target)[0] : document.body;
        }
    }
    (0, _tslib.__decorate)([
        (0, _decoratorsJs.property)({
            attribute: "scroll-target"
        })
    ], ScrollBehaviorMixinClass.prototype, "scrollTarget", void 0);
    (0, _tslib.__decorate)([
        (0, _decoratorsJs.property)({
            reflect: true,
            attribute: "scroll-behavior"
        })
    ], ScrollBehaviorMixinClass.prototype, "scrollBehavior", void 0);
    (0, _tslib.__decorate)([
        (0, _decoratorsJs.property)({
            type: Number,
            reflect: true,
            attribute: "scroll-threshold"
        })
    ], ScrollBehaviorMixinClass.prototype, "scrollThreshold", void 0);
    (0, _tslib.__decorate)([
        (0, _watchJs.watch)("scrollTarget")
    ], ScrollBehaviorMixinClass.prototype, "onScrollTargetChange", null);
    (0, _tslib.__decorate)([
        (0, _watchJs.watch)("scrollBehavior")
    ], ScrollBehaviorMixinClass.prototype, "onScrollBehaviorChange", null);
    return ScrollBehaviorMixinClass;
};

},{"tslib":"lRdW5","lit/decorators.js":"bCPKi","@mdui/jq/$.js":"dZx9v","@mdui/jq/methods/css.js":"lzdJz","@mdui/jq/shared/helper.js":"4D489","../controllers/defined.js":"9Omrp","../decorators/watch.js":"20Qzb","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9Omrp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * 判断组件是否定义完成
 *
 * 如果需要在组件操作或读取组件外部、或组件 slot 中的原生 DOM 时，则需要在 DOM 就绪时，才能认为组件定义完成
 * 如果组件需要和其他组件配合使用，则需要等待其他组件定义完成后，才能认为组件定义完成
 */ parcelHelpers.export(exports, "DefinedController", ()=>DefinedController);
var _ssrWindow = require("ssr-window");
var _uniqueJs = require("@mdui/jq/functions/unique.js");
var _domJs = require("@mdui/jq/shared/dom.js");
class DefinedController {
    constructor(host, options){
        /**
         * 组件是否已定义完成
         */ this.defined = false;
        (this.host = host).addController(this);
        this.relatedElements = options.relatedElements;
        this.needDomReady = options.needDomReady || !!options.relatedElements;
        this.onSlotChange = this.onSlotChange.bind(this);
    }
    hostConnected() {
        this.host.shadowRoot.addEventListener("slotchange", this.onSlotChange);
    }
    hostDisconnected() {
        this.host.shadowRoot.removeEventListener("slotchange", this.onSlotChange);
    }
    /**
     * 判断组件是否定义完成
     */ isDefined() {
        if (this.defined) return true;
        this.defined = (!this.needDomReady || (0, _domJs.isDomReady)()) && !this.getUndefinedLocalNames().length;
        return this.defined;
    }
    /**
     * 在组件定义完成后，promise 被 resolve
     */ async whenDefined() {
        if (this.defined) return Promise.resolve();
        const document = (0, _ssrWindow.getDocument)();
        if (this.needDomReady && !(0, _domJs.isDomReady)(document)) await new Promise((resolve)=>{
            document.addEventListener("DOMContentLoaded", ()=>resolve(), {
                once: true
            });
        });
        const undefinedLocalNames = this.getUndefinedLocalNames();
        if (undefinedLocalNames.length) {
            const promises = [];
            undefinedLocalNames.forEach((localName)=>{
                promises.push(customElements.whenDefined(localName));
            });
            await Promise.all(promises);
        }
        this.defined = true;
        return;
    }
    /**
     * slot 中的未完成定义的相关 Web components 组件的 CSS 选择器
     */ getScopeLocalNameSelector() {
        const localNames = this.relatedElements;
        if (!localNames) return null;
        if (Array.isArray(localNames)) return localNames.map((localName)=>`${localName}:not(:defined)`).join(",");
        return Object.keys(localNames).filter((localName)=>!localNames[localName]).map((localName)=>`${localName}:not(:defined)`).join(",");
    }
    /**
     * 整个页面中的未完成定义的相关 Web components 组件的 CSS 选择器
     */ getGlobalLocalNameSelector() {
        const localNames = this.relatedElements;
        if (!localNames || Array.isArray(localNames)) return null;
        return Object.keys(localNames).filter((localName)=>localNames[localName]).map((localName)=>`${localName}:not(:defined)`).join(",");
    }
    /**
     * 获取未完成定义的相关 Web components 组件名
     */ getUndefinedLocalNames() {
        const scopeSelector = this.getScopeLocalNameSelector();
        const globalSelector = this.getGlobalLocalNameSelector();
        const undefinedScopeElements = scopeSelector ? [
            ...this.host.querySelectorAll(scopeSelector)
        ] : [];
        const undefinedGlobalElements = globalSelector ? [
            ...(0, _ssrWindow.getDocument)().querySelectorAll(globalSelector)
        ] : [];
        const localNames = [
            ...undefinedScopeElements,
            ...undefinedGlobalElements
        ].map((element)=>element.localName);
        return (0, _uniqueJs.unique)(localNames);
    }
    /**
     * slot 变更时，若 slot 中包含未完成定义的相关 Web components 组件，则组件未定义完成
     */ onSlotChange() {
        const selector = this.getScopeLocalNameSelector();
        if (selector) {
            const undefinedElements = this.host.querySelectorAll(selector);
            if (undefinedElements.length) this.defined = false;
        }
    }
}

},{"ssr-window":"3lyfI","@mdui/jq/functions/unique.js":"7DMxN","@mdui/jq/shared/dom.js":"5U5Wi","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"20Qzb":[function(require,module,exports) {
/**
 * watch 装饰器。在 @property 或 @state 属性变更时，且在组件更新前触发
 * 若初始值为 undefined，则初始状态不会触发；否则初始状态就会先触发一次
 *
 * 如果要等属性变更后，且组件更新完成再执行，可以在函数中执行 `await this.updateComplete`
 * 如果要等组件首次渲染完后再监听属性，可以传入第二个参数 true。或者在函数中通过 `this.hasUpdated` 进行判断
 *
 * @watch('propName')
 * handlePropChange(oldValue, newValue) {
 *
 * }
 */ /**
 * @param propName 监听的属性名
 * @param waitUntilFirstUpdate 是否等首次渲染完后再监听
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "watch", ()=>watch);
function watch(propName, waitUntilFirstUpdate = false) {
    return (proto, functionName)=>{
        // @ts-ignore
        const { update } = proto;
        if (propName in proto) // @ts-ignore
        proto.update = function(changedProperties) {
            if (changedProperties.has(propName)) {
                const oldValue = changedProperties.get(propName);
                const newValue = this[propName];
                if (oldValue !== newValue) {
                    if (!waitUntilFirstUpdate || this.hasUpdated) // @ts-ignore
                    this[functionName](oldValue, newValue);
                }
            }
            update.call(this, changedProperties);
        };
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jgZrI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LayoutItemBase", ()=>LayoutItemBase);
var _tslib = require("tslib");
var _decoratorsJs = require("lit/decorators.js");
var _helperJs = require("@mdui/jq/shared/helper.js");
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _watchJs = require("@mdui/shared/decorators/watch.js");
var _helperJs1 = require("./helper.js");
class LayoutItemBase extends (0, _mduiElementJs.MduiElement) {
    constructor(){
        super(...arguments);
        // 父元素是否是 `mdui-layout`
        this.isParentLayout = false;
    }
    /**
     * 当前布局组件所处的位置，父类必须实现该 getter
     */ get layoutPlacement() {
        throw new Error("Must implement placement getter!");
    }
    // order 变更时，需要重新调整布局
    onOrderChange() {
        this.layoutManager?.updateOrder();
    }
    connectedCallback() {
        super.connectedCallback();
        const parentElement = this.parentElement;
        this.isParentLayout = (0, _helperJs.isNodeName)(parentElement, "mdui-layout");
        if (this.isParentLayout) {
            this.layoutManager = (0, _helperJs1.getLayout)(parentElement);
            this.layoutManager.registerItem(this);
        }
    }
    disconnectedCallback() {
        super.disconnectedCallback();
        if (this.layoutManager) this.layoutManager.unregisterItem(this);
    }
}
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Number,
        reflect: true
    })
], LayoutItemBase.prototype, "order", void 0);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("order", true)
], LayoutItemBase.prototype, "onOrderChange", null);

},{"tslib":"lRdW5","lit/decorators.js":"bCPKi","@mdui/jq/shared/helper.js":"4D489","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/decorators/watch.js":"20Qzb","./helper.js":"2G7b8","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2G7b8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LayoutManager", ()=>LayoutManager);
parcelHelpers.export(exports, "getLayout", ()=>getLayout);
var _js = require("@mdui/jq/$.js");
var _childrenJs = require("@mdui/jq/methods/children.js");
var _cssJs = require("@mdui/jq/methods/css.js");
var _getJs = require("@mdui/jq/methods/get.js");
var _helperJs = require("@mdui/jq/shared/helper.js");
var _observeResizeJs = require("@mdui/shared/helpers/observeResize.js");
class LayoutManager {
    constructor(){
        this.states = [];
    }
    /**
     * 注册 `<mdui-layout-main>`
     */ registerMain(element) {
        this.$main = (0, _js.$)(element);
    }
    /**
     * 取消注册 `<mdui-layout-main>`
     */ unregisterMain() {
        this.$main = undefined;
    }
    /**
     * 注册新的 `<mdui-layout-item>`
     */ registerItem(element) {
        const state = {
            element
        };
        this.states.push(state);
        // 监听元素尺寸变化
        state.observeResize = (0, _observeResizeJs.observeResize)(state.element, ()=>{
            this.updateLayout(state.element, {
                width: this.isNoWidth(state) ? 0 : undefined
            });
        });
        this.items = undefined;
        this.resort();
        // 从头更新布局
        this.updateLayout();
    }
    /**
     * 取消注册 `<mdui-layout-item>`
     */ unregisterItem(element) {
        const index = this.states.findIndex((item)=>item.element === element);
        if (index < 0) return;
        // 取消监听尺寸变化
        const item = this.states[index];
        item.observeResize?.unobserve();
        this.items = undefined;
        // 移除一个元素，并从下一个元素开始更新
        this.states.splice(index, 1);
        if (this.states[index]) this.updateLayout(this.states[index].element);
    }
    /**
     * 获取所有 `<mdui-layout-item>` 元素（按在 DOM 中的顺序）
     */ getItems() {
        if (!this.items) {
            const items = this.states.map((state)=>state.element);
            this.items = items.sort((a, b)=>{
                const position = a.compareDocumentPosition(b);
                if (position & Node.DOCUMENT_POSITION_FOLLOWING) return -1;
                else if (position & Node.DOCUMENT_POSITION_PRECEDING) return 1;
                else return 0;
            });
        }
        return this.items;
    }
    /**
     * 获取 `<mdui-layout-main>` 元素
     */ getMain() {
        return this.$main ? this.$main[0] : undefined;
    }
    /**
     * 获取 `<mdui-layout-item>` 及 `<mdui-layout-main>` 元素
     */ getItemsAndMain() {
        return [
            ...this.getItems(),
            this.getMain()
        ].filter((i)=>i);
    }
    /**
     * 更新 `order` 值，更新完后重新计算布局
     */ updateOrder() {
        this.resort();
        this.updateLayout();
    }
    /**
     * 重新计算布局
     * @param element 从哪一个元素开始更新；若未传入参数，则将更新所有元素
     * @param size 此次更新中，元素的宽高（仅在此次更新中使用）。若不传则自动计算
     */ updateLayout(element, size) {
        const state = element ? {
            element,
            width: size?.width,
            height: size?.height
        } : undefined;
        const index = state ? this.states.findIndex((v)=>v.element === state.element) : 0;
        if (index < 0) return;
        Object.assign(this.states[index], state);
        this.states.forEach((currState, currIndex)=>{
            if (currIndex < index) return;
            // @ts-ignore
            const placement = currState.element.layoutPlacement;
            // 前一个元素
            const prevState = currIndex > 0 ? this.states[currIndex - 1] : undefined;
            const top = prevState?.top ?? 0;
            const right = prevState?.right ?? 0;
            const bottom = prevState?.bottom ?? 0;
            const left = prevState?.left ?? 0;
            Object.assign(currState, {
                top,
                right,
                bottom,
                left
            });
            switch(placement){
                case "top":
                case "bottom":
                    currState[placement] += currState.height ?? currState.element.offsetHeight;
                    break;
                case "right":
                case "left":
                    currState[placement] += (this.isNoWidth(currState) ? 0 : currState.width) ?? currState.element.offsetWidth;
                    break;
            }
            currState.height = currState.width = undefined;
            (0, _js.$)(currState.element).css({
                position: "absolute",
                top: placement === "bottom" ? null : top,
                right: placement === "left" ? null : right,
                bottom: placement === "top" ? null : bottom,
                left: placement === "right" ? null : left
            });
        });
        // 更新完后，设置 layout-main 的 padding
        const lastState = this.states[this.states.length - 1];
        if (this.$main) this.$main.css({
            paddingTop: lastState.top,
            paddingRight: lastState.right,
            paddingBottom: lastState.bottom,
            paddingLeft: lastState.left
        });
    }
    /**
     * 按 order 排序，order 相同时，按在 DOM 中的顺序排序
     */ resort() {
        const items = this.getItems();
        this.states.sort((a, b)=>{
            const aOrder = a.element.order ?? 0;
            const bOrder = b.element.order ?? 0;
            if (aOrder > bOrder) return 1;
            if (aOrder < bOrder) return -1;
            if (items.indexOf(a.element) > items.indexOf(b.element)) return 1;
            if (items.indexOf(a.element) < items.indexOf(b.element)) return -1;
            return 0;
        });
    }
    /**
     * 组件宽度是否为 0
     * mdui-navigation-drawer 较为特殊，在为模态化时，占据的宽度为 0
     */ isNoWidth(state) {
        return (0, _helperJs.isNodeName)(state.element, "mdui-navigation-drawer") && // @ts-ignore
        state.element.isModal;
    }
}
const layoutManagerMap = new WeakMap();
const getLayout = (element)=>{
    if (!layoutManagerMap.has(element)) layoutManagerMap.set(element, new LayoutManager());
    return layoutManagerMap.get(element);
};

},{"@mdui/jq/$.js":"dZx9v","@mdui/jq/methods/children.js":"ext9M","@mdui/jq/methods/css.js":"lzdJz","@mdui/jq/methods/get.js":"bzhq8","@mdui/jq/shared/helper.js":"4D489","@mdui/shared/helpers/observeResize.js":"fLGE3","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fLGE3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "observeResize", ()=>observeResize);
var _js = require("@mdui/jq/$.js");
var _eachJs = require("@mdui/jq/methods/each.js");
var _uniqueIdJs = require("./uniqueId.js");
let weakMap;
// ResizeObserver 实例，所有 resizeObserver 函数内部共用一个 ResizeObserver 实例
let observer;
const observeResize = (target, callback)=>{
    const $target = (0, _js.$)(target);
    const key = (0, _uniqueIdJs.uniqueId)();
    // 取消监听函数
    const result = {
        unobserve: ()=>{
            $target.each((_, target)=>{
                const coArr = weakMap.get(target) ?? [];
                const index = coArr.findIndex((co)=>co.key === key);
                if (index !== -1) coArr.splice(index, 1);
                if (!coArr.length) {
                    observer.unobserve(target);
                    weakMap.delete(target);
                } else weakMap.set(target, coArr);
            });
        }
    };
    // 初始化
    if (!weakMap) {
        weakMap = new WeakMap();
        observer = new ResizeObserver((entries)=>{
            entries.forEach((entry)=>{
                const target = entry.target;
                const coArr = weakMap.get(target);
                coArr.forEach((co)=>{
                    co.callback.call(result, entry, result);
                });
            });
        });
    }
    // 添加监听
    $target.each((_, target)=>{
        observer.observe(target);
        const coArr = weakMap.get(target) ?? [];
        coArr.push({
            callback,
            key
        });
        weakMap.set(target, coArr);
    });
    return result;
};

},{"@mdui/jq/$.js":"dZx9v","@mdui/jq/methods/each.js":"5HIxK","./uniqueId.js":"4DPTP","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4DPTP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "uniqueId", ()=>uniqueId);
let id = 0;
const uniqueId = ()=>{
    return ++id;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5dOLw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "style", ()=>style);
var _lit = require("lit");
const style = (0, _lit.css)`:host{--shape-corner:var(--mdui-shape-corner-none);--z-index:2000;position:fixed;right:0;bottom:0;left:0;display:flex;flex:0 0 auto;align-items:center;justify-content:flex-start;border-radius:var(--shape-corner) var(--shape-corner) 0 0;z-index:var(--z-index);transition:bottom var(--mdui-motion-duration-long2) var(--mdui-motion-easing-emphasized);padding:0 1rem;height:5rem;background-color:rgb(var(--mdui-color-surface-container));box-shadow:var(--mdui-elevation-level2)}:host([scroll-target]:not([scroll-target=''])){position:absolute}:host([hide]){transition-duration:var(--mdui-motion-duration-short4);bottom:-5.625rem}::slotted(:not(:first-child)){margin-left:.5rem}::slotted(mdui-fab){box-shadow:var(--mdui-elevation-level0)}:host([fab-detach]) ::slotted(mdui-fab){position:absolute;transition:bottom var(--mdui-motion-duration-long2) var(--mdui-motion-easing-standard);right:1rem;bottom:.75rem}:host([fab-detach][hide][scroll-behavior~=hide]) ::slotted(mdui-fab){transition-duration:var(--mdui-motion-duration-short4);bottom:1rem;box-shadow:var(--mdui-elevation-level2)}:host([fab-detach][hide][scroll-behavior~=hide][scroll-target]:not([scroll-target=''])) ::slotted(mdui-fab){bottom:6.625rem}:host([hide]) ::slotted(:not(mdui-fab)),:host([hide]:not([fab-detach])) ::slotted(mdui-fab){transform:translateY(8.75rem);transition:transform var(--mdui-motion-duration-0) var(--mdui-motion-easing-emphasized-accelerate) var(--mdui-motion-duration-short4)}::slotted(:first-child){transition:transform var(--mdui-motion-duration-short3) var(--mdui-motion-easing-emphasized-decelerate) var(--mdui-motion-duration-short1)}::slotted(:nth-child(2)){transition:transform var(--mdui-motion-duration-short3) var(--mdui-motion-easing-emphasized-decelerate) var(--mdui-motion-duration-short3)}::slotted(:nth-child(3)){transition:transform var(--mdui-motion-duration-short3) var(--mdui-motion-easing-emphasized-decelerate) var(--mdui-motion-duration-short4)}::slotted(:nth-child(4)){transition:transform var(--mdui-motion-duration-short3) var(--mdui-motion-easing-emphasized-decelerate) var(--mdui-motion-duration-medium1)}::slotted(:nth-child(5)){transition:transform var(--mdui-motion-duration-short3) var(--mdui-motion-easing-emphasized-decelerate) var(--mdui-motion-duration-medium2)}::slotted(:nth-child(6)){transition:transform var(--mdui-motion-duration-short3) var(--mdui-motion-easing-emphasized-decelerate) var(--mdui-motion-duration-medium3)}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jolHS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./button/index.js");
parcelHelpers.exportAll(_indexJs, exports);

},{"./button/index.js":"iEIxg","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iEIxg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Button", ()=>Button);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _refJs = require("lit/directives/ref.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _templateJs = require("@mdui/shared/helpers/template.js");
var _iconJs = require("../icon.js");
var _buttonBaseJs = require("./button-base.js");
var _styleJs = require("./style.js");
/**
 * @summary 按钮组件
 *
 * ```html
 * <mdui-button>Button</mdui-button>
 * ```
 *
 * @event focus - 获得焦点时触发
 * @event blur - 失去焦点时触发
 * @event invalid - 表单字段验证未通过时触发
 *
 * @slot - 按钮的文本
 * @slot icon - 按钮左侧元素
 * @slot end-icon - 按钮右侧元素
 *
 * @csspart button - 内部的 `<button>` 或 `<a>` 元素
 * @csspart label - 按钮文本
 * @csspart icon - 按钮左侧图标
 * @csspart end-icon - 按钮右侧图标
 * @csspart loading - 加载中状态的 `<mdui-circular-progress>` 元素
 *
 * @cssprop --shape-corner - 组件的圆角大小。可以指定一个具体的像素值；但更推荐[引用设计令牌](/docs/2/styles/design-tokens#shape-corner)
 */ let Button = class Button extends (0, _buttonBaseJs.ButtonBase) {
    constructor(){
        super(...arguments);
        /**
         * 按钮形状。可选值为：
         *
         * * `elevated`：带阴影的按钮，在需要把按钮和背景进行视觉分离时使用
         * * `filled`：视觉效果仅次于 FAB，用于重要流程的最终操作，如“保存”、“确认”等
         * * `tonal`：视觉效果介于 `filled` 和 `outlined` 之间，用于中高优先级的操作，如流程中的“下一步”
         * * `outlined`：带边框的按钮，用于中等优先级，且次要的操作，如“返回”
         * * `text`：文本按钮，用于最低优先级的操作
         */ this.variant = "filled";
        /**
         * 是否填满父元素宽度
         */ this.fullWidth = false;
        this.rippleRef = (0, _refJs.createRef)();
    }
    get rippleElement() {
        return this.rippleRef.value;
    }
    render() {
        return (0, _lit.html)`<mdui-ripple ${(0, _refJs.ref)(this.rippleRef)} .noRipple="${this.noRipple}"></mdui-ripple>${this.isButton() ? this.renderButton({
            className: "button",
            part: "button",
            content: this.renderInner()
        }) : this.disabled || this.loading ? (0, _lit.html)`<span part="button" class="button _a">${this.renderInner()}</span>` : this.renderAnchor({
            className: "button",
            part: "button",
            content: this.renderInner()
        })}`;
    }
    renderIcon() {
        if (this.loading) return this.renderLoading();
        return (0, _lit.html)`<slot name="icon" part="icon" class="icon">${this.icon ? (0, _lit.html)`<mdui-icon name="${this.icon}"></mdui-icon>` : (0, _templateJs.nothingTemplate)}</slot>`;
    }
    renderLabel() {
        return (0, _lit.html)`<slot part="label" class="label"></slot>`;
    }
    renderEndIcon() {
        return (0, _lit.html)`<slot name="end-icon" part="end-icon" class="end-icon">${this.endIcon ? (0, _lit.html)`<mdui-icon name="${this.endIcon}"></mdui-icon>` : (0, _templateJs.nothingTemplate)}</slot>`;
    }
    renderInner() {
        return [
            this.renderIcon(),
            this.renderLabel(),
            this.renderEndIcon()
        ];
    }
};
Button.styles = [
    (0, _buttonBaseJs.ButtonBase).styles,
    (0, _styleJs.style)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Button.prototype, "variant", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter),
        attribute: "full-width"
    })
], Button.prototype, "fullWidth", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Button.prototype, "icon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "end-icon"
    })
], Button.prototype, "endIcon", void 0);
Button = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-button")
], Button);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/ref.js":"eKwmp","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/helpers/template.js":"7SHVu","../icon.js":"6YN4l","./button-base.js":"7z0Zx","./style.js":"b9CXg","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eKwmp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _refJs = require("lit-html/directives/ref.js");
parcelHelpers.exportAll(_refJs, exports);

},{"lit-html/directives/ref.js":"dVEkM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dVEkM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createRef", ()=>e);
parcelHelpers.export(exports, "ref", ()=>n);
var _litHtmlJs = require("../lit-html.js");
var _asyncDirectiveJs = require("../async-directive.js");
var _directiveJs = require("../directive.js");
/**
 * @license
 * Copyright 2020 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */ const e = ()=>new h;
class h {
}
const o = new WeakMap, n = (0, _directiveJs.directive)(class extends (0, _asyncDirectiveJs.AsyncDirective) {
    render(i) {
        return 0, _litHtmlJs.nothing;
    }
    update(i, [s]) {
        const e = s !== this.G;
        return e && void 0 !== this.G && this.ot(void 0), (e || this.rt !== this.lt) && (this.G = s, this.ct = i.options?.host, this.ot(this.lt = i.element)), _litHtmlJs.nothing;
    }
    ot(t) {
        if ("function" == typeof this.G) {
            const i = this.ct ?? globalThis;
            let s = o.get(i);
            void 0 === s && (s = new WeakMap, o.set(i, s)), void 0 !== s.get(this.G) && this.G.call(this.ct, void 0), s.set(this.G, t), void 0 !== t && this.G.call(this.ct, t);
        } else this.G.value = t;
    }
    get rt() {
        return "function" == typeof this.G ? o.get(this.ct ?? globalThis)?.get(this.G) : this.G?.value;
    }
    disconnected() {
        this.rt === this.lt && this.ot(void 0);
    }
    reconnected() {
        this.ot(this.lt);
    }
});

},{"../lit-html.js":"1cmQt","../async-directive.js":"4f1Uv","../directive.js":"9lbyV","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7z0Zx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ButtonBase", ()=>ButtonBase);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _ifDefinedJs = require("lit/directives/if-defined.js");
var _classcat = require("classcat");
var _classcatDefault = parcelHelpers.interopDefault(_classcat);
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _formJs = require("@mdui/shared/controllers/form.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _templateJs = require("@mdui/shared/helpers/template.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _anchorJs = require("@mdui/shared/mixins/anchor.js");
var _focusableJs = require("@mdui/shared/mixins/focusable.js");
var _circularProgressJs = require("../circular-progress.js");
var _rippleMixinJs = require("../ripple/ripple-mixin.js");
var _buttonBaseStyleJs = require("./button-base-style.js");
class ButtonBase extends (0, _anchorJs.AnchorMixin)((0, _rippleMixinJs.RippleMixin)((0, _focusableJs.FocusableMixin)((0, _mduiElementJs.MduiElement)))) {
    constructor(){
        super(...arguments);
        /**
         * 是否禁用
         */ this.disabled = false;
        /**
         * 是否为加载中状态
         */ this.loading = false;
        /**
         * 按钮的名称，将与表单数据一起提交
         *
         * **Note**：仅在未指定 `href` 属性时可用
         */ this.name = "";
        /**
         * 按钮的初始值，将与表单数据一起提交
         *
         * **Note**：仅在未指定 `href` 属性时可用
         */ this.value = "";
        /**
         * 按钮的类型。默认值为 `button`。可选值为：
         *
         * * `submit`：点击按钮将表单数据提交给服务器
         * * `reset`：点击按钮将表单中所有组件重置为初始值
         * * `button`：按钮没有默认行为
         *
         * **Note**：仅在未指定 `href` 属性时可用
         */ this.type = "button";
        /**
         * 指定了该属性时，表示当表单被提交时不需要验证。
         *
         * 指定了该属性时，将覆盖 `form` 元素的 `novalidate` 属性。
         *
         * **Note**：仅在未指定 `href` 属性、且 `type="submit"` 时可用。
         */ this.formNoValidate = false;
        this.formController = new (0, _formJs.FormController)(this);
    }
    /**
     * 表单验证状态对象
     */ get validity() {
        if (this.isButton()) return this.focusElement.validity;
    }
    /**
     * 表单验证的错误提示信息
     */ get validationMessage() {
        if (this.isButton()) return this.focusElement.validationMessage;
    }
    get rippleDisabled() {
        return this.disabled || this.loading;
    }
    get focusElement() {
        return this.isButton() ? this.renderRoot?.querySelector("._button") : !this.focusDisabled ? this.renderRoot?.querySelector("._a") : this;
    }
    get focusDisabled() {
        return this.disabled || this.loading;
    }
    /**
     * 检查表单字段是否验证通过。若未通过则返回 `false`，并触发 `invalid` 事件；若验证通过，则返回 `true`
     */ checkValidity() {
        if (this.isButton()) {
            const valid = this.focusElement.checkValidity();
            if (!valid) // @ts-ignore
            this.emit("invalid", {
                bubbles: false,
                cancelable: true,
                composed: false
            });
            return valid;
        }
        return true;
    }
    /**
     * 检查表单字段是否验证通过。若未通过则返回 `false`，并触发 `invalid` 事件；若验证通过，则返回 `true`。
     *
     * 验证未通过时，还将在组件上显示未通过的提示。
     */ reportValidity() {
        if (this.isButton()) {
            const invalid = !this.focusElement.reportValidity();
            if (invalid) // @ts-ignore
            this.emit("invalid", {
                bubbles: false,
                cancelable: true,
                composed: false
            });
            return !invalid;
        }
        return true;
    }
    /**
     * 设置自定义的错误提示文本。只要文本不为空，则表示字段验证未通过
     *
     * @param message 自定义的提示文本
     */ setCustomValidity(message) {
        if (this.isButton()) this.focusElement.setCustomValidity(message);
    }
    firstUpdated(_changedProperties) {
        super.firstUpdated(_changedProperties);
        this.addEventListener("click", ()=>{
            if (this.type === "submit") this.formController.submit(this);
            if (this.type === "reset") this.formController.reset(this);
        });
    }
    renderLoading() {
        return this.loading ? (0, _lit.html)`<mdui-circular-progress part="loading"></mdui-circular-progress>` : (0, _templateJs.nothingTemplate);
    }
    renderButton({ id, className, part, content = (0, _lit.html)`<slot></slot>` }) {
        return (0, _lit.html)`<button id="${(0, _ifDefinedJs.ifDefined)(id)}" class="${(0, _classcatDefault.default)([
            "_button",
            className
        ])}" part="${(0, _ifDefinedJs.ifDefined)(part)}" ?disabled="${this.rippleDisabled || this.focusDisabled}">${content}</button>`;
    }
    isButton() {
        return !this.href;
    }
}
ButtonBase.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _buttonBaseStyleJs.buttonBaseStyle)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], ButtonBase.prototype, "disabled", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], ButtonBase.prototype, "loading", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], ButtonBase.prototype, "name", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], ButtonBase.prototype, "value", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], ButtonBase.prototype, "type", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], ButtonBase.prototype, "form", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "formaction"
    })
], ButtonBase.prototype, "formAction", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "formenctype"
    })
], ButtonBase.prototype, "formEnctype", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "formmethod"
    })
], ButtonBase.prototype, "formMethod", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter),
        attribute: "formnovalidate"
    })
], ButtonBase.prototype, "formNoValidate", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "formtarget"
    })
], ButtonBase.prototype, "formTarget", void 0);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/if-defined.js":"77RTn","classcat":"9ww9D","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/controllers/form.js":"9HuZO","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/helpers/template.js":"7SHVu","@mdui/shared/lit-styles/component-style.js":"jFNMX","@mdui/shared/mixins/anchor.js":"lvjeP","@mdui/shared/mixins/focusable.js":"kzhFM","../circular-progress.js":"kzQQv","../ripple/ripple-mixin.js":"djWHz","./button-base-style.js":"4aNIB","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9ww9D":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>cc);
function cc(names) {
    if (typeof names === "string" || typeof names === "number") return "" + names;
    let out = "";
    if (Array.isArray(names)) {
        for(let i = 0, tmp; i < names.length; i++)if ((tmp = cc(names[i])) !== "") out += (out && " ") + tmp;
    } else {
        for(let k in names)if (names[k]) out += (out && " ") + k;
    }
    return out;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9HuZO":[function(require,module,exports) {
/**
 * 参考：https://github.com/shoelace-style/shoelace/blob/next/src/internal/form.ts
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "formResets", ()=>formResets);
parcelHelpers.export(exports, "FormController", ()=>FormController);
var _js = require("@mdui/jq/$.js");
var _attrJs = require("@mdui/jq/methods/attr.js");
var _cssJs = require("@mdui/jq/methods/css.js");
var _formJs = require("@mdui/jq/shared/form.js");
var _helperJs = require("@mdui/jq/shared/helper.js");
var _definedJs = require("./defined.js");
/**
 * 在执行 `<form>` 元素的 reportValidity() 时，不会执行 mdui 组件的 reportValidity() 方法，
 * 因此在 mdui 表单控件的 hostConnected 中把 `<form>` 的 reportValidity 替换为自定义方法，
 * hostDisconnected 中恢复为 原生 reportValidity 方法
 *
 * 该 WeakMap 用于存储指定 `<form>` 的原生 reportValidity 方法
 *
 * 日后使用 ElementInternals 可不再进行该处理，但当前 safari 浏览器不支持。
 */ const reportValidityOverloads = new WeakMap();
const formResets = new WeakMap();
class FormController {
    constructor(host, options){
        (this.host = host).addController(this);
        this.definedController = new (0, _definedJs.DefinedController)(host, {
            needDomReady: true
        });
        this.options = {
            form: (control)=>{
                const formId = (0, _js.$)(control).attr("form");
                if (formId) {
                    const root = control.getRootNode();
                    return root.getElementById(formId);
                }
                return control.closest("form");
            },
            name: (control)=>control.name,
            value: (control)=>control.value,
            defaultValue: (control)=>control.defaultValue,
            setValue: (control, value)=>control.value = value,
            disabled: (control)=>control.disabled,
            reportValidity: (control)=>(0, _helperJs.isFunction)(control.reportValidity) ? control.reportValidity() : true,
            ...options
        };
        this.onFormData = this.onFormData.bind(this);
        this.onFormSubmit = this.onFormSubmit.bind(this);
        this.onFormReset = this.onFormReset.bind(this);
        this.reportFormValidity = this.reportFormValidity.bind(this);
    }
    hostConnected() {
        this.definedController.whenDefined().then(()=>{
            this.form = this.options.form(this.host);
            if (this.form) this.attachForm(this.form);
        });
    }
    hostDisconnected() {
        this.detachForm();
    }
    hostUpdated() {
        this.definedController.whenDefined().then(()=>{
            const form = this.options.form(this.host);
            if (!form) this.detachForm();
            if (form && this.form !== form) {
                this.detachForm();
                this.attachForm(form);
            }
        });
    }
    /**
     * 获取当前表单控件关联的 `<form>` 元素
     */ getForm() {
        return this.form ?? null;
    }
    /**
     * 重置整个表单，所有表单控件恢复成默认值
     */ reset(invoker) {
        this.doAction("reset", invoker);
    }
    /**
     * 提交整个表单
     */ submit(invoker) {
        this.doAction("submit", invoker);
    }
    attachForm(form) {
        if (!form) {
            this.form = undefined;
            return;
        }
        this.form = form;
        if ((0, _formJs.formCollections).has(this.form)) (0, _formJs.formCollections).get(this.form).add(this.host);
        else (0, _formJs.formCollections).set(this.form, new Set([
            this.host
        ]));
        this.form.addEventListener("formdata", this.onFormData);
        this.form.addEventListener("submit", this.onFormSubmit);
        this.form.addEventListener("reset", this.onFormReset);
        if (!reportValidityOverloads.has(this.form)) {
            reportValidityOverloads.set(this.form, this.form.reportValidity);
            this.form.reportValidity = ()=>this.reportFormValidity();
        }
    }
    detachForm() {
        if (this.form) {
            (0, _formJs.formCollections).get(this.form).delete(this.host);
            this.form.removeEventListener("formdata", this.onFormData);
            this.form.removeEventListener("submit", this.onFormSubmit);
            this.form.removeEventListener("reset", this.onFormReset);
            if (reportValidityOverloads.has(this.form) && !(0, _formJs.formCollections).get(this.form).size) {
                this.form.reportValidity = reportValidityOverloads.get(this.form);
                reportValidityOverloads.delete(this.form);
            }
        }
    }
    doAction(type, invoker) {
        if (!this.form) return;
        const $button = (0, _js.$)(`<button type="${type}">`).css({
            position: "absolute",
            width: 0,
            height: 0,
            clipPath: "inset(50%)",
            overflow: "hidden",
            whiteSpace: "nowrap"
        });
        const button = $button[0];
        if (invoker) {
            button.name = invoker.name;
            button.value = invoker.value;
            [
                "formaction",
                "formenctype",
                "formmethod",
                "formnovalidate",
                "formtarget"
            ].forEach((attr)=>{
                $button.attr(attr, (0, _js.$)(invoker).attr(attr));
            });
        }
        this.form.append(button);
        button.click();
        button.remove();
    }
    onFormData(event) {
        const disabled = this.options.disabled(this.host);
        const name = this.options.name(this.host);
        const value = this.options.value(this.host);
        // 对于按钮，仅在 type="submit" 时，才提交值。已在 doAction() 方法中把 name、value 注入到 <button> 元素上
        const isButton = [
            "mdui-button",
            "mdui-button-icon",
            "mdui-chip",
            "mdui-fab",
            "mdui-segmented-button"
        ].includes(this.host.tagName.toLowerCase());
        if (!disabled && !isButton && (0, _helperJs.isString)(name) && name && !(0, _helperJs.isUndefined)(value)) {
            if (Array.isArray(value)) value.forEach((val)=>{
                event.formData.append(name, val.toString());
            });
            else event.formData.append(name, value.toString());
        }
    }
    // todo: 当前组件进行验证的顺序，取决于组件的注册顺序，而不会按在 DOM 中的顺序从上到下验证。如何按 DOM 顺序验证？
    onFormSubmit(event) {
        const disabled = this.options.disabled(this.host);
        const reportValidity = this.options.reportValidity;
        if (this.form && !this.form.noValidate && !disabled && !reportValidity(this.host)) {
            event.preventDefault();
            event.stopImmediatePropagation();
        }
    }
    onFormReset() {
        if (this.form) {
            this.options.setValue(this.host, this.options.defaultValue(this.host));
            // 取消 invalid 状态。
            // 此外，还需要在各个组件内，监听值的变更，判断 formResets 中是否存在当前表单控件。若存在则 invalid 设为 false；不存在则设置为 checkValidity() 的值
            // @ts-ignore
            this.host.invalid = false;
            if (formResets.has(this.form)) formResets.get(this.form).add(this.host);
            else formResets.set(this.form, new Set([
                this.host
            ]));
        }
    }
    reportFormValidity() {
        if (this.form && !this.form.noValidate) {
            const elements = (0, _formJs.getFormControls)(this.form);
            for (const element of elements){
                if ((0, _helperJs.isFunction)(element.reportValidity) && !element.reportValidity()) return false;
            }
        }
        return true;
    }
}

},{"@mdui/jq/$.js":"dZx9v","@mdui/jq/methods/attr.js":"1nh45","@mdui/jq/methods/css.js":"lzdJz","@mdui/jq/shared/form.js":"jSetm","@mdui/jq/shared/helper.js":"4D489","./defined.js":"9Omrp","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lvjeP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AnchorMixin", ()=>AnchorMixin);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _ifDefinedJs = require("lit/directives/if-defined.js");
const AnchorMixin = (superclass)=>{
    class AnchorMixinClass extends superclass {
        renderAnchor({ id, className, part, content = (0, _lit.html)`<slot></slot>`, refDirective, tabIndex }) {
            return (0, _lit.html)`<a ${refDirective} id="${(0, _ifDefinedJs.ifDefined)(id)}" class="_a ${className ? className : ""}" part="${(0, _ifDefinedJs.ifDefined)(part)}" href="${(0, _ifDefinedJs.ifDefined)(this.href)}" download="${(0, _ifDefinedJs.ifDefined)(this.download)}" target="${(0, _ifDefinedJs.ifDefined)(this.target)}" rel="${(0, _ifDefinedJs.ifDefined)(this.rel)}" tabindex="${(0, _ifDefinedJs.ifDefined)(tabIndex)}">${content}</a>`;
        }
    }
    (0, _tslib.__decorate)([
        (0, _decoratorsJs.property)({
            reflect: true
        })
    ], AnchorMixinClass.prototype, "href", void 0);
    (0, _tslib.__decorate)([
        (0, _decoratorsJs.property)({
            reflect: true
        })
    ], AnchorMixinClass.prototype, "download", void 0);
    (0, _tslib.__decorate)([
        (0, _decoratorsJs.property)({
            reflect: true
        })
    ], AnchorMixinClass.prototype, "target", void 0);
    (0, _tslib.__decorate)([
        (0, _decoratorsJs.property)({
            reflect: true
        })
    ], AnchorMixinClass.prototype, "rel", void 0);
    return AnchorMixinClass;
};

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/if-defined.js":"77RTn","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kzhFM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "FocusableMixin", ()=>FocusableMixin);
var _tslib = require("tslib");
var _decoratorsJs = require("lit/decorators.js");
var _ssrWindow = require("ssr-window");
var _js = require("@mdui/jq/$.js");
var _attrJs = require("@mdui/jq/methods/attr.js");
var _cssJs = require("@mdui/jq/methods/css.js");
var _eachJs = require("@mdui/jq/methods/each.js");
var _removeAttrJs = require("@mdui/jq/methods/removeAttr.js");
var _definedJs = require("../controllers/defined.js");
var _decoratorJs = require("../helpers/decorator.js");
let isClick = true;
const document = (0, _ssrWindow.getDocument)();
document.addEventListener("pointerdown", ()=>{
    isClick = true;
});
document.addEventListener("keydown", ()=>{
    isClick = false;
});
const FocusableMixin = (superclass)=>{
    class FocusableMixinClass extends superclass {
        constructor(){
            super(...arguments);
            /**
             * 是否在页面加载完成后自动获得焦点
             */ this.autofocus = false;
            /**
             * 是否获得了焦点，不管是鼠标点击，还是键盘切换获得的焦点，都会添加该属性
             * 添加到 :host 元素上，供 CSS 选择器添加样式
             */ this.focused = false;
            /**
             * 是否通过键盘切换获得了焦点
             * 添加到 :host 元素上，供 CSS 选择器添加样式
             */ this.focusVisible = false;
            this.focusableDefinedController = new (0, _definedJs.DefinedController)(this, {
                relatedElements: [
                    ""
                ]
            });
            this._manipulatingTabindex = false;
            this._tabIndex = 0;
        }
        /**
         * 通过 Tab 键在元素之间切换焦点时，tabIndex 属性指定了元素获取焦点的顺序
         */ get tabIndex() {
            const $this = (0, _js.$)(this);
            if (this.focusElement === this) return Number($this.attr("tabindex") || -1);
            const tabIndexAttribute = Number($this.attr("tabindex") || 0);
            if (this.focusDisabled || tabIndexAttribute < 0) return -1;
            if (!this.focusElement) return tabIndexAttribute;
            return this.focusElement.tabIndex;
        }
        set tabIndex(tabIndex) {
            if (this._manipulatingTabindex) {
                this._manipulatingTabindex = false;
                return;
            }
            const $this = (0, _js.$)(this);
            if (this.focusElement === this) {
                if (tabIndex !== null) this._tabIndex = tabIndex;
                $this.attr("tabindex", this.focusDisabled ? null : tabIndex);
                return;
            }
            const onPointerDown = ()=>{
                if (this.tabIndex === -1) {
                    this.tabIndex = 0;
                    this.focus({
                        preventScroll: true
                    });
                }
            };
            if (tabIndex === -1) this.addEventListener("pointerdown", onPointerDown);
            else {
                this._manipulatingTabindex = true;
                this.removeEventListener("pointerdown", onPointerDown);
            }
            if (tabIndex === -1 || this.focusDisabled) {
                $this.attr("tabindex", -1);
                if (tabIndex !== -1) this.manageFocusElementTabindex(tabIndex);
                return;
            }
            if (!this.hasAttribute("tabindex")) this._manipulatingTabindex = false;
            this.manageFocusElementTabindex(tabIndex);
        }
        /**
         * 父类要实现该属性，表示是否禁用 focus 状态
         */ get focusDisabled() {
            throw new Error("Must implement focusDisabled getter!");
        }
        /**
         * 最终获得焦点的元素
         */ get focusElement() {
            throw new Error("Must implement focusElement getter!");
        }
        connectedCallback() {
            super.connectedCallback();
            this.updateComplete.then(()=>{
                requestAnimationFrame(()=>{
                    this.manageAutoFocus();
                });
            });
        }
        /**
         * 模拟鼠标点击元素
         */ click() {
            if (this.focusDisabled) return;
            if (this.focusElement !== this) this.focusElement.click();
            else HTMLElement.prototype.click.apply(this);
        }
        /**
         * 将焦点设置在当前元素。
         *
         * 可传入一个对象作为参数。对象属性为：
         *
         * * `preventScroll`：默认情况下，在聚焦后会滚动页面，以将聚焦的元素滚动到视图中。可将该属性设为 `true` 以阻止页面滚动。
         */ focus(options) {
            if (this.focusDisabled || !this.focusElement) return;
            if (this.focusElement !== this) this.focusElement.focus(options);
            else HTMLElement.prototype.focus.apply(this, [
                options
            ]);
        }
        /**
         * 从当前元素中移除焦点
         */ blur() {
            if (this.focusElement !== this) this.focusElement.blur();
            else HTMLElement.prototype.blur.apply(this);
        }
        firstUpdated(changedProperties) {
            super.firstUpdated(changedProperties);
            this.focusElement.addEventListener("focus", ()=>{
                this.focused = true;
                this.focusVisible = !isClick;
            });
            this.focusElement.addEventListener("blur", ()=>{
                this.focused = false;
                this.focusVisible = false;
            });
        }
        update(changedProperties) {
            if (this._lastFocusDisabled === undefined || this._lastFocusDisabled !== this.focusDisabled) {
                this._lastFocusDisabled = this.focusDisabled;
                const $this = (0, _js.$)(this);
                if (this.focusDisabled) $this.removeAttr("tabindex");
                else {
                    if (this.focusElement === this) {
                        this._manipulatingTabindex = true;
                        $this.attr("tabindex", this._tabIndex);
                    } else if (this.tabIndex > -1) $this.removeAttr("tabindex");
                }
            }
            super.update(changedProperties);
        }
        updated(changedProperties) {
            super.updated(changedProperties);
            if (this.focused && this.focusDisabled) this.blur();
        }
        async manageFocusElementTabindex(tabIndex) {
            if (!this.focusElement) await this.updateComplete;
            if (tabIndex === null) this.focusElement.removeAttribute("tabindex");
            else this.focusElement.tabIndex = tabIndex;
        }
        manageAutoFocus() {
            if (this.autofocus) {
                this.dispatchEvent(new KeyboardEvent("keydown", {
                    code: "Tab"
                }));
                this.focusElement.focus();
            }
        }
    }
    (0, _tslib.__decorate)([
        (0, _decoratorsJs.property)({
            type: Boolean,
            /**
             * 哪些属性需要 reflect: true？
             * 一般所有属性都需要 reflect，但以下情况除外：
             * 1. 会频繁变更的属性
             * 2. 属性同步会造成较大性能开销的属性
             * 3. 复杂类型属性（数组、对象等，仅提供 property，不提供 attribute）
             */ reflect: true,
            converter: (0, _decoratorJs.booleanConverter)
        })
    ], FocusableMixinClass.prototype, "autofocus", void 0);
    (0, _tslib.__decorate)([
        (0, _decoratorsJs.property)({
            type: Boolean,
            reflect: true,
            converter: (0, _decoratorJs.booleanConverter)
        })
    ], FocusableMixinClass.prototype, "focused", void 0);
    (0, _tslib.__decorate)([
        (0, _decoratorsJs.property)({
            type: Boolean,
            reflect: true,
            converter: (0, _decoratorJs.booleanConverter),
            attribute: "focus-visible"
        })
    ], FocusableMixinClass.prototype, "focusVisible", void 0);
    (0, _tslib.__decorate)([
        (0, _decoratorsJs.property)({
            type: Number,
            attribute: "tabindex"
        })
    ], FocusableMixinClass.prototype, "tabIndex", null);
    return FocusableMixinClass;
};

},{"tslib":"lRdW5","lit/decorators.js":"bCPKi","ssr-window":"3lyfI","@mdui/jq/$.js":"dZx9v","@mdui/jq/methods/attr.js":"1nh45","@mdui/jq/methods/css.js":"lzdJz","@mdui/jq/methods/each.js":"5HIxK","@mdui/jq/methods/removeAttr.js":"j7SbH","../controllers/defined.js":"9Omrp","../helpers/decorator.js":"6l4gk","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kzQQv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./circular-progress/index.js");
parcelHelpers.exportAll(_indexJs, exports);

},{"./circular-progress/index.js":"b0LBm","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"b0LBm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CircularProgress", ()=>CircularProgress);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _classMapJs = require("lit/directives/class-map.js");
var _helperJs = require("@mdui/jq/shared/helper.js");
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _styleJs = require("./style.js");
/**
 * @summary 圆形进度指示器组件
 *
 * ```html
 * <mdui-circular-progress></mdui-circular-progress>
 * ```
 */ let CircularProgress = class CircularProgress extends (0, _mduiElementJs.MduiElement) {
    constructor(){
        super(...arguments);
        /**
         * 进度指示器的最大值，默认为 1
         */ this.max = 1;
    }
    render() {
        const isDeterminate = !(0, _helperJs.isUndefined)(this.value);
        return (0, _lit.html)`<div class="progress ${(0, _classMapJs.classMap)({
            determinate: isDeterminate,
            indeterminate: !isDeterminate
        })}">${isDeterminate ? this.renderDeterminate() : this.renderInDeterminate()}</div>`;
    }
    renderDeterminate() {
        const value = this.value;
        const strokeWidth = 4; // 圆环宽度
        const circleRadius = 18; // 圆环宽度中心点的半径
        const \u03C0 = 3.1415926;
        const center = circleRadius + strokeWidth / 2;
        const circumference = 2 * \u03C0 * circleRadius;
        const determinateStrokeDashOffset = (1 - value / Math.max(this.max ?? value, value)) * circumference;
        return (0, _lit.html)`<svg viewBox="0 0 ${center * 2} ${center * 2}"><circle class="track" cx="${center}" cy="${center}" r="${circleRadius}" stroke-width="${strokeWidth}"></circle><circle class="circle" cx="${center}" cy="${center}" r="${circleRadius}" stroke-dasharray="${2 * \u03C0 * circleRadius}" stroke-dashoffset="${determinateStrokeDashOffset}" stroke-width="${strokeWidth}"></circle></svg>`;
    }
    renderInDeterminate() {
        const strokeWidth = 4; // 圆环宽度
        const circleRadius = 18; // 圆环宽度中心点的半径
        const \u03C0 = 3.1415926;
        const center = circleRadius + strokeWidth / 2;
        const circumference = 2 * \u03C0 * circleRadius;
        const halfCircumference = 0.5 * circumference;
        const circle = (thisStrokeWidth)=>(0, _lit.html)`<svg class="circle" viewBox="0 0 ${center * 2} ${center * 2}"><circle cx="${center}" cy="${center}" r="${circleRadius}" stroke-dasharray="${circumference}" stroke-dashoffset="${halfCircumference}" stroke-width="${thisStrokeWidth}"></circle></svg>`;
        return (0, _lit.html)`<div class="layer"><div class="clipper left">${circle(strokeWidth)}</div><div class="gap-patch">${circle(strokeWidth * 0.8)}</div><div class="clipper right">${circle(strokeWidth)}</div></div>`;
    }
};
CircularProgress.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _styleJs.style)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Number,
        reflect: true
    })
], CircularProgress.prototype, "max", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Number
    })
], CircularProgress.prototype, "value", void 0);
CircularProgress = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-circular-progress")
], CircularProgress);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/class-map.js":"jiVKL","@mdui/jq/shared/helper.js":"4D489","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/lit-styles/component-style.js":"jFNMX","./style.js":"3Q3Sl","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jiVKL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _classMapJs = require("lit-html/directives/class-map.js");
parcelHelpers.exportAll(_classMapJs, exports);

},{"lit-html/directives/class-map.js":"1IFol","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1IFol":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "classMap", ()=>e);
var _litHtmlJs = require("../lit-html.js");
var _directiveJs = require("../directive.js");
/**
 * @license
 * Copyright 2018 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */ const e = (0, _directiveJs.directive)(class extends (0, _directiveJs.Directive) {
    constructor(t){
        if (super(t), t.type !== (0, _directiveJs.PartType).ATTRIBUTE || "class" !== t.name || t.strings?.length > 2) throw Error("`classMap()` can only be used in the `class` attribute and must be the only part in the attribute.");
    }
    render(t) {
        return " " + Object.keys(t).filter((s)=>t[s]).join(" ") + " ";
    }
    update(s, [i]) {
        if (void 0 === this.it) {
            this.it = new Set, void 0 !== s.strings && (this.st = new Set(s.strings.join(" ").split(/\s/).filter((t)=>"" !== t)));
            for(const t in i)i[t] && !this.st?.has(t) && this.it.add(t);
            return this.render(i);
        }
        const r = s.element.classList;
        for (const t of this.it)t in i || (r.remove(t), this.it.delete(t));
        for(const t in i){
            const s = !!i[t];
            s === this.it.has(t) || this.st?.has(t) || (s ? (r.add(t), this.it.add(t)) : (r.remove(t), this.it.delete(t)));
        }
        return 0, _litHtmlJs.noChange;
    }
});

},{"../lit-html.js":"1cmQt","../directive.js":"9lbyV","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3Q3Sl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "style", ()=>style);
var _lit = require("lit");
const style = (0, _lit.css)`:host{position:relative;display:inline-block;width:2.5rem;height:2.5rem;stroke:rgb(var(--mdui-color-primary))}.progress{position:relative;display:inline-block;width:100%;height:100%;text-align:left;transition:opacity var(--mdui-motion-duration-medium1) var(--mdui-motion-easing-linear)}.determinate svg{transform:rotate(-90deg);fill:transparent}.determinate .track{stroke:transparent}.determinate .circle{stroke:inherit;transition:stroke-dashoffset var(--mdui-motion-duration-long2) var(--mdui-motion-easing-standard)}.indeterminate{font-size:0;letter-spacing:0;white-space:nowrap;animation:mdui-comp-circular-progress-rotate 1568ms var(--mdui-motion-easing-linear) infinite}.indeterminate .circle,.indeterminate .layer{position:absolute;width:100%;height:100%}.indeterminate .layer{animation:mdui-comp-circular-progress-layer-rotate 5332ms var(--mdui-motion-easing-standard) infinite both}.indeterminate .circle{fill:transparent;stroke:inherit}.indeterminate .gap-patch{position:absolute;top:0;left:47.5%;width:5%;height:100%;overflow:hidden}.indeterminate .gap-patch .circle{left:-900%;width:2000%;transform:rotate(180deg)}.indeterminate .clipper{position:relative;display:inline-block;width:50%;height:100%;overflow:hidden}.indeterminate .clipper .circle{width:200%}.indeterminate .clipper.left .circle{animation:mdui-comp-circular-progress-left-spin 1333ms var(--mdui-motion-easing-standard) infinite both}.indeterminate .clipper.right .circle{left:-100%;animation:mdui-comp-circular-progress-right-spin 1333ms var(--mdui-motion-easing-standard) infinite both}@keyframes mdui-comp-circular-progress-rotate{to{transform:rotate(360deg)}}@keyframes mdui-comp-circular-progress-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdui-comp-circular-progress-left-spin{0%{transform:rotate(265deg)}50%{transform:rotate(130deg)}100%{transform:rotate(265deg)}}@keyframes mdui-comp-circular-progress-right-spin{0%{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}100%{transform:rotate(-265deg)}}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"djWHz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "RippleMixin", ()=>RippleMixin);
var _tslib = require("tslib");
var _decoratorsJs = require("lit/decorators.js");
var _js = require("@mdui/jq/$.js");
var _indexJs = require("@mdui/jq/methods/index.js");
var _helperJs = require("@mdui/jq/shared/helper.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _indexJs1 = require("./index.js");
const RippleMixin = (superclass)=>{
    class Mixin extends superclass {
        constructor(){
            super(...arguments);
            /**
             * 是否禁用涟漪动画
             */ this.noRipple = false;
            /**
             * 当前激活的是第几个 <mdui-ripple>。仅一个组件中有多个 <mdui-ripple> 时可以使用该属性
             * 若值为 undefined，则组件中所有 <mdui-ripple> 都激活
             */ this.rippleIndex = undefined;
            /**
             * 获取当前激活的是第几个 <mdui-ripple>。仅一个组件中有多个 <mdui-ripple> 时可以使用该属性
             * 若值为 undefined，则组件中所有 <mdui-ripple> 都激活
             * 可在子类中手动指定该方法，指定需要激活的 ripple
             */ this.getRippleIndex = ()=>this.rippleIndex;
        }
        /**
         * 子类要添加该属性，指向 <mdui-ripple> 元素
         * 如果一个组件中包含多个 <mdui-ripple> 元素，则这里可以是一个数组或 NodeList
         */ get rippleElement() {
            throw new Error("Must implement rippleElement getter!");
        }
        /**
         * 子类要实现该属性，表示是否禁用 ripple
         * 如果一个组件中包含多个 <mdui-ripple> 元素，则这里可以是一个数组；也可以是单个值，同时控制多个 <mdui-ripple> 元素
         */ get rippleDisabled() {
            throw new Error("Must implement rippleDisabled getter!");
        }
        /**
         * 当前 <mdui-ripple> 元素相对于哪个元素存在，即 hover、pressed、dragged 属性要添加到哪个元素上，默认为 :host
         * 如果需要修改该属性，则子类可以实现该属性
         * 如果一个组件中包含多个 <mdui-ripple> 元素，则这里可以是一个数组；也可以是单个值，同时控制多个 <mdui-ripple> 元素
         */ get rippleTarget() {
            return this;
        }
        firstUpdated(changedProperties) {
            super.firstUpdated(changedProperties);
            const $rippleTarget = (0, _js.$)(this.rippleTarget);
            // 监听到事件时，是在第几个 <mdui-ripple> 上触发的事件，记录到 this.rippleIndex 中
            const setRippleIndex = (event)=>{
                if ((0, _helperJs.isArrayLike)(this.rippleTarget)) this.rippleIndex = $rippleTarget.index(event.target);
            };
            const rippleTargetArr = (0, _helperJs.isArrayLike)(this.rippleTarget) ? this.rippleTarget : [
                this.rippleTarget
            ];
            rippleTargetArr.forEach((rippleTarget)=>{
                rippleTarget.addEventListener("pointerdown", (event)=>{
                    setRippleIndex(event);
                    this.startPress(event);
                });
                rippleTarget.addEventListener("pointerenter", (event)=>{
                    setRippleIndex(event);
                    this.startHover(event);
                });
                rippleTarget.addEventListener("pointerleave", (event)=>{
                    setRippleIndex(event);
                    this.endHover(event);
                });
                rippleTarget.addEventListener("focus", (event)=>{
                    setRippleIndex(event);
                    this.startFocus();
                });
                rippleTarget.addEventListener("blur", (event)=>{
                    setRippleIndex(event);
                    this.endFocus();
                });
            });
        }
        /**
         * 若存在多个 <mdui-ripple>，但 rippleTarget 为同一个，则 hover 状态无法在多个 <mdui-ripple> 之间切换
         * 所以把 startHover 和 endHover 设置为 protected，供子类调用
         * 子类中，在 getRippleIndex() 的返回值变更前调用 endHover(event)，变更后调用 startHover(event)
         */ startHover(event) {
            if (event.pointerType !== "mouse" || this.isRippleDisabled()) return;
            this.getRippleTarget().setAttribute("hover", "");
            this.getRippleElement().startHover();
        }
        endHover(event) {
            if (event.pointerType !== "mouse" || this.isRippleDisabled()) return;
            this.getRippleTarget().removeAttribute("hover");
            this.getRippleElement().endHover();
        }
        /**
         * 当前激活的 <mdui-ripple> 元素是否被禁用
         */ isRippleDisabled() {
            const disabled = this.rippleDisabled;
            if (!Array.isArray(disabled)) return disabled;
            const rippleIndex = this.getRippleIndex();
            if (rippleIndex !== undefined) return disabled[rippleIndex];
            return disabled.length ? disabled[0] : false;
        }
        /**
         * 获取当前激活的 <mdui-ripple> 元素实例
         */ getRippleElement() {
            const ripple = this.rippleElement;
            if (!(0, _helperJs.isArrayLike)(ripple)) return ripple;
            const rippleIndex = this.getRippleIndex();
            if (rippleIndex !== undefined) return ripple[rippleIndex];
            return ripple[0];
        }
        /**
         * 获取当前激活的 <mdui-ripple> 元素相对于哪个元素存在
         */ getRippleTarget() {
            const target = this.rippleTarget;
            if (!(0, _helperJs.isArrayLike)(target)) return target;
            const rippleIndex = this.getRippleIndex();
            if (rippleIndex !== undefined) return target[rippleIndex];
            return target[0];
        }
        startFocus() {
            if (this.isRippleDisabled()) return;
            this.getRippleElement().startFocus();
        }
        endFocus() {
            if (this.isRippleDisabled()) return;
            this.getRippleElement().endFocus();
        }
        startPress(event) {
            // 为鼠标时操作，仅响应鼠标左键点击
            if (this.isRippleDisabled() || event.button) return;
            const target = this.getRippleTarget();
            target.setAttribute("pressed", "");
            // 手指触摸触发涟漪
            if ([
                "touch",
                "pen"
            ].includes(event.pointerType)) {
                let hidden = false;
                // 手指触摸后，延迟一段时间触发涟漪，避免手指滑动时也触发涟漪
                let timer = setTimeout(()=>{
                    timer = 0;
                    this.getRippleElement().startPress(event);
                }, 70);
                const hideRipple = ()=>{
                    // 如果手指没有移动，且涟漪动画还没有开始，则开始涟漪动画
                    if (timer) {
                        clearTimeout(timer);
                        timer = 0;
                        this.getRippleElement().startPress(event);
                    }
                    if (!hidden) {
                        hidden = true;
                        this.endPress();
                    }
                    target.removeEventListener("pointerup", hideRipple);
                    target.removeEventListener("pointercancel", hideRipple);
                };
                // 手指移动后，移除涟漪动画
                const touchMove = ()=>{
                    if (timer) {
                        clearTimeout(timer);
                        timer = 0;
                    }
                    target.removeEventListener("touchmove", touchMove);
                };
                // pointermove 事件过于灵敏，可能在未触发 touchmove 的情况下，触发了 pointermove 事件，导致正常的点击操作没有显示涟漪
                // 因此这里监听 touchmove 事件
                target.addEventListener("touchmove", touchMove);
                target.addEventListener("pointerup", hideRipple);
                target.addEventListener("pointercancel", hideRipple);
            }
            // 鼠标点击触发涟漪，点击后立即触发涟漪（仅鼠标左键能触发涟漪）
            if (event.pointerType === "mouse" && event.button === 0) {
                const hideRipple = ()=>{
                    this.endPress();
                    target.removeEventListener("pointerup", hideRipple);
                    target.removeEventListener("pointercancel", hideRipple);
                    target.removeEventListener("pointerleave", hideRipple);
                };
                this.getRippleElement().startPress(event);
                target.addEventListener("pointerup", hideRipple);
                target.addEventListener("pointercancel", hideRipple);
                target.addEventListener("pointerleave", hideRipple);
            }
        }
        endPress() {
            if (this.isRippleDisabled()) return;
            this.getRippleTarget().removeAttribute("pressed");
            this.getRippleElement().endPress();
        }
        startDrag() {
            if (this.isRippleDisabled()) return;
            this.getRippleElement().startDrag();
        }
        endDrag() {
            if (this.isRippleDisabled()) return;
            this.getRippleElement().endDrag();
        }
    }
    (0, _tslib.__decorate)([
        (0, _decoratorsJs.property)({
            type: Boolean,
            reflect: true,
            converter: (0, _decoratorJs.booleanConverter),
            attribute: "no-ripple"
        })
    ], Mixin.prototype, "noRipple", void 0);
    return Mixin;
};

},{"tslib":"lRdW5","lit/decorators.js":"bCPKi","@mdui/jq/$.js":"dZx9v","@mdui/jq/methods/index.js":"cfyBG","@mdui/jq/shared/helper.js":"4D489","@mdui/shared/helpers/decorator.js":"6l4gk","./index.js":"g5Cdg","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"g5Cdg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Ripple", ()=>Ripple);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _classMapJs = require("lit/directives/class-map.js");
var _refJs = require("lit/directives/ref.js");
var _js = require("@mdui/jq/$.js");
var _addClassJs = require("@mdui/jq/methods/addClass.js");
var _childrenJs = require("@mdui/jq/methods/children.js");
var _cssJs = require("@mdui/jq/methods/css.js");
var _dataJs = require("@mdui/jq/methods/data.js");
var _eachJs = require("@mdui/jq/methods/each.js");
var _filterJs = require("@mdui/jq/methods/filter.js");
var _innerHeightJs = require("@mdui/jq/methods/innerHeight.js");
var _innerWidthJs = require("@mdui/jq/methods/innerWidth.js");
var _offsetJs = require("@mdui/jq/methods/offset.js");
var _onJs = require("@mdui/jq/methods/on.js");
var _prependToJs = require("@mdui/jq/methods/prependTo.js");
var _removeJs = require("@mdui/jq/methods/remove.js");
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _styleJs = require("./style.js");
/**
 * 处理点击时的涟漪动画；及添加 hover、focused、dragged 的背景色
 * 背景色通过在 .surface 元素上添加对应的 class 实现
 * 阴影在 ripple-mixin 中处理，通过在 :host 元素上添加 attribute 供 CSS 选择器添加样式
 */ let Ripple = class Ripple extends (0, _mduiElementJs.MduiElement) {
    constructor(){
        super(...arguments);
        /**
         * 是否禁用涟漪动画
         */ this.noRipple = false;
        this.hover = false;
        this.focused = false;
        this.dragged = false;
        this.surfaceRef = (0, _refJs.createRef)();
    }
    startPress(event) {
        if (this.noRipple) return;
        const $surface = (0, _js.$)(this.surfaceRef.value);
        const surfaceHeight = $surface.innerHeight();
        const surfaceWidth = $surface.innerWidth();
        // 点击位置坐标
        let touchStartX;
        let touchStartY;
        if (!event) {
            // 未传入事件对象，涟漪从中间扩散
            touchStartX = surfaceWidth / 2;
            touchStartY = surfaceHeight / 2;
        } else {
            // 传入了事件对象，涟漪从点击位置扩散
            const touchPosition = typeof TouchEvent !== "undefined" && event instanceof TouchEvent && event.touches.length ? event.touches[0] : event;
            const offset = $surface.offset();
            // 点击位置不在 surface 内，不执行
            if (touchPosition.pageX < offset.left || touchPosition.pageX > offset.left + surfaceWidth || touchPosition.pageY < offset.top || touchPosition.pageY > offset.top + surfaceHeight) return;
            touchStartX = touchPosition.pageX - offset.left;
            touchStartY = touchPosition.pageY - offset.top;
        }
        // 涟漪直径
        const diameter = Math.max(Math.pow(Math.pow(surfaceHeight, 2) + Math.pow(surfaceWidth, 2), 0.5), 48);
        // 涟漪扩散动画
        const translateX = `${-touchStartX + surfaceWidth / 2}px`;
        const translateY = `${-touchStartY + surfaceHeight / 2}px`;
        const translate = `translate3d(${translateX}, ${translateY}, 0) scale(1)`;
        // 涟漪 DOM 元素
        (0, _js.$)('<div class="wave"></div>').css({
            width: diameter,
            height: diameter,
            marginTop: -diameter / 2,
            marginLeft: -diameter / 2,
            left: touchStartX,
            top: touchStartY
        }).each((_, wave)=>{
            wave.style.setProperty("--mdui-comp-ripple-transition-x", translateX);
            wave.style.setProperty("--mdui-comp-ripple-transition-y", translateY);
        }).prependTo(this.surfaceRef.value).each((_, wave)=>wave.clientLeft) // 重绘
        .css("transform", translate).on("animationend", function(e) {
            const event = e;
            if (event.animationName === "mdui-comp-ripple-radius-in") (0, _js.$)(this).data("filled", true); // 扩散动画完成后，添加标记
        });
    }
    endPress() {
        const $waves = (0, _js.$)(this.surfaceRef.value).children().filter((_, wave)=>!(0, _js.$)(wave).data("removing")).data("removing", true);
        const hideAndRemove = ($waves)=>{
            $waves.addClass("out").each((_, wave)=>wave.clientLeft) // 重绘
            .on("animationend", function() {
                (0, _js.$)(this).remove();
            });
        };
        // 扩散动画未完成，先完成扩散，再隐藏并移除
        $waves.filter((_, wave)=>!(0, _js.$)(wave).data("filled")).on("animationend", function(e) {
            const event = e;
            if (event.animationName === "mdui-comp-ripple-radius-in") hideAndRemove((0, _js.$)(this));
        });
        // 扩散动画已完成，直接隐藏并移除
        hideAndRemove($waves.filter((_, wave)=>!!(0, _js.$)(wave).data("filled")));
    }
    startHover() {
        this.hover = true;
    }
    endHover() {
        this.hover = false;
    }
    startFocus() {
        this.focused = true;
    }
    endFocus() {
        this.focused = false;
    }
    startDrag() {
        this.dragged = true;
    }
    endDrag() {
        this.dragged = false;
    }
    render() {
        return (0, _lit.html)`<div ${(0, _refJs.ref)(this.surfaceRef)} class="surface ${(0, _classMapJs.classMap)({
            hover: this.hover,
            focused: this.focused,
            dragged: this.dragged
        })}"></div>`;
    }
};
Ripple.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _styleJs.style)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter),
        attribute: "no-ripple"
    })
], Ripple.prototype, "noRipple", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], Ripple.prototype, "hover", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], Ripple.prototype, "focused", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], Ripple.prototype, "dragged", void 0);
Ripple = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-ripple")
], Ripple);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/class-map.js":"jiVKL","lit/directives/ref.js":"eKwmp","@mdui/jq/$.js":"dZx9v","@mdui/jq/methods/addClass.js":"eBNUW","@mdui/jq/methods/children.js":"ext9M","@mdui/jq/methods/css.js":"lzdJz","@mdui/jq/methods/data.js":"9ddzG","@mdui/jq/methods/each.js":"5HIxK","@mdui/jq/methods/filter.js":"kItIi","@mdui/jq/methods/innerHeight.js":"j1kN8","@mdui/jq/methods/innerWidth.js":"e8mrw","@mdui/jq/methods/offset.js":"ewNsa","@mdui/jq/methods/on.js":"e22Mv","@mdui/jq/methods/prependTo.js":"3MVmJ","@mdui/jq/methods/remove.js":"eOqqE","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/lit-styles/component-style.js":"jFNMX","./style.js":"1MmXK","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1MmXK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "style", ()=>style);
var _lit = require("lit");
const style = (0, _lit.css)`:host{position:absolute;top:0;left:0;display:block;width:100%;height:100%;overflow:hidden;pointer-events:none}.surface{position:absolute;top:0;left:0;width:100%;height:100%;transition-duration:280ms;transition-property:background-color;pointer-events:none;transition-timing-function:var(--mdui-motion-easing-standard)}.hover{background-color:rgba(var(--mdui-comp-ripple-state-layer-color,var(--mdui-color-on-surface)),var(--mdui-state-layer-hover))}:host-context([focus-visible]) .focused{background-color:rgba(var(--mdui-comp-ripple-state-layer-color,var(--mdui-color-on-surface)),var(--mdui-state-layer-focus))}.dragged{background-color:rgba(var(--mdui-comp-ripple-state-layer-color,var(--mdui-color-on-surface)),var(--mdui-state-layer-dragged))}.wave{position:absolute;z-index:1;background-color:rgb(var(--mdui-comp-ripple-state-layer-color,var(--mdui-color-on-surface)));border-radius:50%;transform:translate3d(0,0,0) scale(.4);opacity:0;animation:225ms ease 0s 1 normal forwards running mdui-comp-ripple-radius-in,75ms ease 0s 1 normal forwards running mdui-comp-ripple-opacity-in;pointer-events:none}.out{transform:translate3d(var(--mdui-comp-ripple-transition-x,0),var(--mdui-comp-ripple-transition-y,0),0) scale(1);animation:150ms ease 0s 1 normal none running mdui-comp-ripple-opacity-out}@keyframes mdui-comp-ripple-radius-in{from{transform:translate3d(0,0,0) scale(.4);animation-timing-function:var(--mdui-motion-easing-standard)}to{transform:translate3d(var(--mdui-comp-ripple-transition-x,0),var(--mdui-comp-ripple-transition-y,0),0) scale(1)}}@keyframes mdui-comp-ripple-opacity-in{from{opacity:0;animation-timing-function:linear}to{opacity:var(--mdui-state-layer-pressed)}}@keyframes mdui-comp-ripple-opacity-out{from{animation-timing-function:linear;opacity:var(--mdui-state-layer-pressed)}to{opacity:0}}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4aNIB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "buttonBaseStyle", ()=>buttonBaseStyle);
var _lit = require("lit");
const buttonBaseStyle = (0, _lit.css)`.button{position:relative;display:inline-flex;align-items:center;justify-content:center;height:100%;padding:0;overflow:hidden;color:inherit;font-size:inherit;font-family:inherit;letter-spacing:inherit;white-space:nowrap;text-align:center;text-decoration:none;vertical-align:middle;background:0 0;border:none;outline:0;cursor:inherit;-webkit-user-select:none;user-select:none;touch-action:manipulation;zoom:1;-webkit-user-drag:none}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"b9CXg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "style", ()=>style);
var _lit = require("lit");
const style = (0, _lit.css)`:host{--shape-corner:var(--mdui-shape-corner-full);position:relative;display:inline-block;overflow:hidden;text-align:center;border-radius:var(--shape-corner);cursor:pointer;-webkit-tap-highlight-color:transparent;transition:box-shadow var(--mdui-motion-duration-short4) var(--mdui-motion-easing-linear);min-width:3rem;height:2.5rem;color:rgb(var(--mdui-color-primary));font-size:var(--mdui-typescale-label-large-size);font-weight:var(--mdui-typescale-label-large-weight);letter-spacing:var(--mdui-typescale-label-large-tracking);line-height:var(--mdui-typescale-label-large-line-height)}.button{width:100%;padding:0 1rem}:host([full-width]){display:block}:host([variant=elevated]){box-shadow:var(--mdui-elevation-level1);background-color:rgb(var(--mdui-color-surface-container-low));--mdui-comp-ripple-state-layer-color:var(--mdui-color-primary)}:host([variant=filled]){color:rgb(var(--mdui-color-on-primary));background-color:rgb(var(--mdui-color-primary));--mdui-comp-ripple-state-layer-color:var(--mdui-color-on-primary)}:host([variant=tonal]){color:rgb(var(--mdui-color-on-secondary-container));background-color:rgb(var(--mdui-color-secondary-container));--mdui-comp-ripple-state-layer-color:var(
      --mdui-color-on-secondary-container
    )}:host([variant=outlined]){border:.0625rem solid rgb(var(--mdui-color-outline));--mdui-comp-ripple-state-layer-color:var(--mdui-color-primary)}:host([variant=text]){--mdui-comp-ripple-state-layer-color:var(--mdui-color-primary)}:host([variant=outlined][focus-visible]){border-color:rgb(var(--mdui-color-primary))}:host([variant=elevated][hover]){box-shadow:var(--mdui-elevation-level2)}:host([variant=filled][hover]),:host([variant=tonal][hover]){box-shadow:var(--mdui-elevation-level1)}:host([disabled]),:host([loading]){cursor:default;pointer-events:none}:host([disabled]){color:rgba(var(--mdui-color-on-surface),38%);box-shadow:var(--mdui-elevation-level0)}:host([variant=elevated][disabled]),:host([variant=filled][disabled]),:host([variant=tonal][disabled]){background-color:rgba(var(--mdui-color-on-surface),12%)}:host([variant=outlined][disabled]){border-color:rgba(var(--mdui-color-on-surface),12%)}.label{display:inline-flex;padding-right:.5rem;padding-left:.5rem}.end-icon,.icon{display:inline-flex;font-size:1.28571429em}.end-icon mdui-icon,.icon mdui-icon,::slotted([slot=end-icon]),::slotted([slot=icon]){font-size:inherit}mdui-circular-progress{display:inline-flex;width:1.125rem;height:1.125rem}:host([variant=filled]) mdui-circular-progress{stroke:rgb(var(--mdui-color-on-primary))}:host([variant=tonal]) mdui-circular-progress{stroke:rgb(var(--mdui-color-on-secondary-container))}:host([disabled]) mdui-circular-progress{stroke:rgba(var(--mdui-color-on-surface),38%)}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"c1x0d":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./button-icon/index.js");
parcelHelpers.exportAll(_indexJs, exports);

},{"./button-icon/index.js":"7ikl4","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7ikl4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ButtonIcon", ()=>ButtonIcon);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _refJs = require("lit/directives/ref.js");
var _hasSlotJs = require("@mdui/shared/controllers/has-slot.js");
var _watchJs = require("@mdui/shared/decorators/watch.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _templateJs = require("@mdui/shared/helpers/template.js");
var _buttonBaseJs = require("../button/button-base.js");
var _iconJs = require("../icon.js");
var _styleJs = require("./style.js");
/**
 * @summary 图标按钮组件
 *
 * ```html
 * <mdui-button-icon icon="search"></mdui-button-icon>
 * ```
 *
 * @event focus - 获得焦点时触发
 * @event blur - 失去焦点时触发
 * @event change - 选中状态变更时触发
 * @event invalid - 表单字段验证未通过时触发
 *
 * @slot - 图标组件
 * @slot selected-icon 选中状态显示的图标元素
 *
 * @csspart button - 内部的 `<button>` 或 `<a>` 元素
 * @csspart icon - 未选中状态的图标
 * @csspart selected-icon 选中状态的图标
 * @csspart loading - 加载中状态的 `<mdui-circular-progress>` 元素
 *
 * @cssprop --shape-corner - 组件的圆角大小。可以指定一个具体的像素值；但更推荐[引用设计令牌](/docs/2/styles/design-tokens#shape-corner)
 */ let ButtonIcon = class ButtonIcon extends (0, _buttonBaseJs.ButtonBase) {
    constructor(){
        super(...arguments);
        /**
         * 图标按钮的形状。可选值为：
         *
         * * `standard`：用于最低优先级的操作
         * * `filled`：具有最强视觉效果，用于高优先级的操作
         * * `tonal`：视觉效果介于 `filled` 和 `outlined` 之间，用于中高优先级的操作
         * * `outlined`：用于中等优先级的操作
         */ this.variant = "standard";
        /**
         * 是否可选中
         */ this.selectable = false;
        /**
         * 是否已选中
         */ this.selected = false;
        this.rippleRef = (0, _refJs.createRef)();
        this.hasSlotController = new (0, _hasSlotJs.HasSlotController)(this, "[default]", "selected-icon");
    }
    get rippleElement() {
        return this.rippleRef.value;
    }
    onSelectedChange() {
        this.emit("change");
    }
    firstUpdated(changedProperties) {
        super.firstUpdated(changedProperties);
        this.addEventListener("click", ()=>{
            if (!this.selectable || this.disabled) return;
            this.selected = !this.selected;
        });
    }
    render() {
        return (0, _lit.html)`<mdui-ripple ${(0, _refJs.ref)(this.rippleRef)} .noRipple="${this.noRipple}"></mdui-ripple>${this.isButton() ? this.renderButton({
            className: "button",
            part: "button",
            content: this.renderIcon()
        }) : this.disabled || this.loading ? (0, _lit.html)`<span part="button" class="button _a">${this.renderIcon()}</span>` : this.renderAnchor({
            className: "button",
            part: "button",
            content: this.renderIcon()
        })} ${this.renderLoading()}`;
    }
    renderIcon() {
        const icon = ()=>this.hasSlotController.test("[default]") ? (0, _lit.html)`<slot></slot>` : this.icon ? (0, _lit.html)`<mdui-icon part="icon" class="icon" name="${this.icon}"></mdui-icon>` : (0, _templateJs.nothingTemplate);
        const selectedIcon = ()=>this.hasSlotController.test("selected-icon") || this.selectedIcon ? (0, _lit.html)`<slot name="selected-icon" part="selected-icon" class="selected-icon"><mdui-icon name="${this.selectedIcon}"></mdui-icon></slot>` : icon();
        return this.selected ? selectedIcon() : icon();
    }
};
ButtonIcon.styles = [
    (0, _buttonBaseJs.ButtonBase).styles,
    (0, _styleJs.style)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], ButtonIcon.prototype, "variant", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], ButtonIcon.prototype, "icon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "selected-icon"
    })
], ButtonIcon.prototype, "selectedIcon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], ButtonIcon.prototype, "selectable", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], ButtonIcon.prototype, "selected", void 0);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("selected", true)
], ButtonIcon.prototype, "onSelectedChange", null);
ButtonIcon = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-button-icon")
], ButtonIcon);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/ref.js":"eKwmp","@mdui/shared/controllers/has-slot.js":"cARnY","@mdui/shared/decorators/watch.js":"20Qzb","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/helpers/template.js":"7SHVu","../button/button-base.js":"7z0Zx","../icon.js":"6YN4l","./style.js":"aSy2Y","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aSy2Y":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "style", ()=>style);
var _lit = require("lit");
const style = (0, _lit.css)`:host{--shape-corner:var(--mdui-shape-corner-full);position:relative;display:inline-block;overflow:hidden;text-align:center;border-radius:var(--shape-corner);cursor:pointer;-webkit-tap-highlight-color:transparent;font-size:1.5rem;width:2.5rem;min-width:2.5rem;height:2.5rem}:host([variant=standard]){color:rgb(var(--mdui-color-on-surface-variant));--mdui-comp-ripple-state-layer-color:var(--mdui-color-on-surface-variant)}:host([variant=filled]){color:rgb(var(--mdui-color-primary));background-color:rgb(var(--mdui-color-surface-container-highest));--mdui-comp-ripple-state-layer-color:var(--mdui-color-primary)}:host([variant=tonal]){color:rgb(var(--mdui-color-on-surface-variant));background-color:rgb(var(--mdui-color-surface-container-highest));--mdui-comp-ripple-state-layer-color:var(--mdui-color-on-surface-variant)}:host([variant=outlined]){border:.0625rem solid rgb(var(--mdui-color-outline));color:rgb(var(--mdui-color-on-surface-variant));--mdui-comp-ripple-state-layer-color:var(--mdui-color-on-surface-variant)}:host([variant=outlined][pressed]){color:rgb(var(--mdui-color-on-surface));--mdui-comp-ripple-state-layer-color:var(--mdui-color-on-surface)}:host([variant=standard][selected]){color:rgb(var(--mdui-color-primary));--mdui-comp-ripple-state-layer-color:var(--mdui-color-primary)}:host([variant=filled]:not([selectable])),:host([variant=filled][selected]){color:rgb(var(--mdui-color-on-primary));background-color:rgb(var(--mdui-color-primary));--mdui-comp-ripple-state-layer-color:var(--mdui-color-on-primary)}:host([variant=tonal]:not([selectable])),:host([variant=tonal][selected]){color:rgb(var(--mdui-color-on-secondary-container));background-color:rgb(var(--mdui-color-secondary-container));--mdui-comp-ripple-state-layer-color:var(
      --mdui-color-on-secondary-container
    )}:host([variant=outlined][selected]){border:none;color:rgb(var(--mdui-color-inverse-on-surface));background-color:rgb(var(--mdui-color-inverse-surface));--mdui-comp-ripple-state-layer-color:var(--mdui-color-inverse-on-surface)}:host([variant=filled][disabled]),:host([variant=outlined][disabled]),:host([variant=tonal][disabled]){background-color:rgba(var(--mdui-color-on-surface),.12);border-color:rgba(var(--mdui-color-on-surface),.12)}:host([disabled]),:host([loading]){cursor:default;pointer-events:none}:host([disabled]){color:rgba(var(--mdui-color-on-surface),.38)!important}:host([loading]) .button,:host([loading]) mdui-ripple{opacity:0}.button{float:left;width:100%}.icon,.selected-icon mdui-icon,::slotted(*){font-size:inherit}mdui-circular-progress{display:flex;position:absolute;top:calc(50% - 1.5rem / 2);left:calc(50% - 1.5rem / 2);width:1.5rem;height:1.5rem}:host([variant=filled]:not([disabled])) mdui-circular-progress{stroke:rgb(var(--mdui-color-on-primary))}:host([disabled]) mdui-circular-progress{stroke:rgba(var(--mdui-color-on-surface),38%)}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cpwHR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./card/index.js");
parcelHelpers.exportAll(_indexJs, exports);

},{"./card/index.js":"8KywU","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8KywU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Card", ()=>Card);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _refJs = require("lit/directives/ref.js");
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _anchorJs = require("@mdui/shared/mixins/anchor.js");
var _focusableJs = require("@mdui/shared/mixins/focusable.js");
var _rippleMixinJs = require("../ripple/ripple-mixin.js");
var _styleJs = require("./style.js");
/**
 * @summary 卡片组件
 *
 * ```html
 * <mdui-card>card content</mdui-card>
 * ```
 *
 * @event focus - 获得焦点时触发
 * @event blur - 失去焦点时触发
 *
 * @slot - 卡片内容
 *
 * @cssprop --shape-corner - 组件的圆角大小。可以指定一个具体的像素值；但更推荐[引用设计令牌](/docs/2/styles/design-tokens#shape-corner)
 */ let Card = class Card extends (0, _anchorJs.AnchorMixin)((0, _rippleMixinJs.RippleMixin)((0, _focusableJs.FocusableMixin)((0, _mduiElementJs.MduiElement)))) {
    constructor(){
        super(...arguments);
        /**
         * 卡片形状。可选值为：
         *
         * * `elevated`：具有阴影，与背景的分离度比 `filled` 更高，但小于 `outlined`
         * * `filled`：与背景的分离度最小
         * * `outlined`：具有边框，与背景的分离度最大
         */ this.variant = "elevated";
        /**
         * 是否可点击。为 `true` 时，会添加鼠标悬浮效果、及点击涟漪效果
         */ this.clickable = false;
        /**
         * 是否禁用
         */ this.disabled = false;
        this.rippleRef = (0, _refJs.createRef)();
    }
    get rippleElement() {
        return this.rippleRef.value;
    }
    get rippleDisabled() {
        return this.disabled || !this.href && !this.clickable;
    }
    get focusElement() {
        return this.href && !this.disabled ? this.renderRoot.querySelector("._a") : this;
    }
    get focusDisabled() {
        return this.rippleDisabled;
    }
    render() {
        return (0, _lit.html)`<mdui-ripple ${(0, _refJs.ref)(this.rippleRef)} .noRipple="${this.noRipple}"></mdui-ripple>${this.href && !this.disabled ? this.renderAnchor({
            className: "link",
            content: (0, _lit.html)`<slot></slot>`
        }) : (0, _lit.html)`<slot></slot>`}`;
    }
};
Card.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _styleJs.style)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Card.prototype, "variant", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Card.prototype, "clickable", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Card.prototype, "disabled", void 0);
Card = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-card")
], Card);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/ref.js":"eKwmp","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/lit-styles/component-style.js":"jFNMX","@mdui/shared/mixins/anchor.js":"lvjeP","@mdui/shared/mixins/focusable.js":"kzhFM","../ripple/ripple-mixin.js":"djWHz","./style.js":"BFCDj","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"BFCDj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "style", ()=>style);
var _lit = require("lit");
const style = (0, _lit.css)`:host{--shape-corner:var(--mdui-shape-corner-medium);position:relative;display:inline-block;overflow:hidden;border-radius:var(--shape-corner);-webkit-tap-highlight-color:transparent;transition:box-shadow var(--mdui-motion-duration-short4) var(--mdui-motion-easing-linear);--mdui-comp-ripple-state-layer-color:var(--mdui-color-on-surface)}:host([clickable]){cursor:pointer}:host([variant=elevated]){background-color:rgb(var(--mdui-color-surface-container-low));box-shadow:var(--mdui-elevation-level1)}:host([variant=filled]){background-color:rgb(var(--mdui-color-surface-container-highest))}:host([variant=outlined]){background-color:rgb(var(--mdui-color-surface));border:.0625rem solid rgb(var(--mdui-color-outline))}:host([variant=elevated][hover]){box-shadow:var(--mdui-elevation-level2)}:host([variant=filled][hover]),:host([variant=outlined][hover]){box-shadow:var(--mdui-elevation-level1)}:host([variant=elevated][dragged]),:host([variant=filled][dragged]),:host([variant=outlined][dragged]){box-shadow:var(--mdui-elevation-level3)}:host([disabled]){opacity:.38;cursor:default;-webkit-user-select:none;user-select:none}:host([variant=elevated][disabled]){background-color:rgb(var(--mdui-color-surface-variant));box-shadow:var(--mdui-elevation-level0)}:host([variant=filled][disabled]){background-color:rgb(var(--mdui-color-surface));box-shadow:var(--mdui-elevation-level1)}:host([variant=outlined][disabled]){box-shadow:var(--mdui-elevation-level0);border-color:rgba(var(--mdui-color-outline),.32)}.link{position:relative;display:inline-block;width:100%;height:100%;color:inherit;font-size:inherit;letter-spacing:inherit;text-decoration:none;touch-action:manipulation;-webkit-user-drag:none}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fAW8K":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./checkbox/index.js");
parcelHelpers.exportAll(_indexJs, exports);

},{"./checkbox/index.js":"cp7ka","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cp7ka":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Checkbox", ()=>Checkbox);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _classMapJs = require("lit/directives/class-map.js");
var _ifDefinedJs = require("lit/directives/if-defined.js");
var _liveJs = require("lit/directives/live.js");
var _refJs = require("lit/directives/ref.js");
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _formJs = require("@mdui/shared/controllers/form.js");
var _defaultValueJs = require("@mdui/shared/decorators/default-value.js");
var _watchJs = require("@mdui/shared/decorators/watch.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _checkBoxOutlineBlankJs = require("@mdui/shared/icons/check-box-outline-blank.js");
var _checkBoxJs = require("@mdui/shared/icons/check-box.js");
var _indeterminateCheckBoxJs = require("@mdui/shared/icons/indeterminate-check-box.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _focusableJs = require("@mdui/shared/mixins/focusable.js");
var _iconJs = require("../icon.js");
var _rippleMixinJs = require("../ripple/ripple-mixin.js");
var _styleJs = require("./style.js");
/**
 * @summary 复选框组件
 *
 * ```html
 * <mdui-checkbox>Checkbox</mdui-checkbox>
 * ```
 *
 * @event focus - 获得焦点时触发
 * @event blur - 失去焦点时触发
 * @event change - 选中状态变更时触发
 * @event input - 选中状态变更时触发
 * @event invalid - 表单字段验证未通过时触发
 *
 * @slot - 文本
 * @slot unchecked-icon - 未选中状态图标
 * @slot checked-icon - 选中状态图标
 * @slot indeterminate-icon - 不确定状态图标
 *
 * @csspart control - 左侧图标容器
 * @csspart unchecked-icon - 未选中状态图标
 * @csspart checked-icon - 选中状态图标
 * @csspart indeterminate-icon - 不确定状态图标
 * @csspart label - 文本
 */ let Checkbox = class Checkbox extends (0, _rippleMixinJs.RippleMixin)((0, _focusableJs.FocusableMixin)((0, _mduiElementJs.MduiElement))) {
    constructor(){
        super(...arguments);
        /**
         * 是否为禁用状态
         */ this.disabled = false;
        /**
         * 是否为选中状态
         */ this.checked = false;
        /**
         * 默认选中状态。在重置表单时，将重置为该默认状态。该属性只能通过 JavaScript 属性设置
         */ this.defaultChecked = false;
        /**
         * 是否为不确定状态
         */ this.indeterminate = false;
        /**
         * 提交表单时，是否必须选中该复选框
         */ this.required = false;
        /**
         * 复选框名称，将与表单数据一起提交
         */ this.name = "";
        /**
         * 复选框的值，将于表单数据一起提交
         */ this.value = "on";
        /**
         * 是否验证未通过
         */ this.invalid = false;
        this.inputRef = (0, _refJs.createRef)();
        this.rippleRef = (0, _refJs.createRef)();
        this.formController = new (0, _formJs.FormController)(this, {
            value: (control)=>control.checked ? control.value : undefined,
            defaultValue: (control)=>control.defaultChecked,
            setValue: (control, checked)=>control.checked = checked
        });
    }
    /**
     * 表单验证状态对象
     */ get validity() {
        return this.inputRef.value.validity;
    }
    /**
     * 表单验证的错误提示信息
     */ get validationMessage() {
        return this.inputRef.value.validationMessage;
    }
    get rippleElement() {
        return this.rippleRef.value;
    }
    get rippleDisabled() {
        return this.disabled;
    }
    get focusElement() {
        return this.inputRef.value;
    }
    get focusDisabled() {
        return this.disabled;
    }
    async onDisabledChange() {
        await this.updateComplete;
        this.invalid = !this.inputRef.value.checkValidity();
    }
    async onCheckedChange() {
        await this.updateComplete;
        // reset 引起的值变更，不执行验证；直接修改值引起的变更，需要进行验证
        const form = this.formController.getForm();
        if (form && (0, _formJs.formResets).get(form)?.has(this)) {
            this.invalid = false;
            (0, _formJs.formResets).get(form).delete(this);
        } else this.invalid = !this.inputRef.value.checkValidity();
    }
    /**
     * 检查表单字段是否验证通过。若未通过则返回 `false`，并触发 `invalid` 事件；若验证通过，则返回 `true`
     */ checkValidity() {
        const valid = this.inputRef.value.checkValidity();
        if (!valid) this.emit("invalid", {
            bubbles: false,
            cancelable: true,
            composed: false
        });
        return valid;
    }
    /**
     * 检查表单字段是否验证通过。若未通过则返回 `false`，并触发 `invalid` 事件；若验证通过，则返回 `true`。
     *
     * 验证未通过时，还将在组件上显示未通过的提示。
     */ reportValidity() {
        this.invalid = !this.inputRef.value.reportValidity();
        if (this.invalid) {
            const eventProceeded = this.emit("invalid", {
                bubbles: false,
                cancelable: true,
                composed: false
            });
            // 调用了 preventDefault() 时，隐藏默认的表单错误提示
            if (!eventProceeded) {
                this.blur();
                this.focus();
            }
        }
        return !this.invalid;
    }
    /**
     * 设置自定义的错误提示文本。只要文本不为空，则表示字段验证未通过
     *
     * @param message 自定义的提示文本
     */ setCustomValidity(message) {
        this.inputRef.value.setCustomValidity(message);
        this.invalid = !this.inputRef.value.checkValidity();
    }
    render() {
        return (0, _lit.html)`<label class="${(0, _classMapJs.classMap)({
            invalid: this.invalid
        })}"><input ${(0, _refJs.ref)(this.inputRef)} type="checkbox" name="${(0, _ifDefinedJs.ifDefined)(this.name)}" value="${(0, _ifDefinedJs.ifDefined)(this.value)}" .indeterminate="${(0, _liveJs.live)(this.indeterminate)}" .disabled="${this.disabled}" .checked="${(0, _liveJs.live)(this.checked)}" .required="${this.required}" @change="${this.onChange}"> <i part="control"><mdui-ripple ${(0, _refJs.ref)(this.rippleRef)} .noRipple="${this.noRipple}"></mdui-ripple><slot name="unchecked-icon" part="unchecked-icon" class="icon unchecked-icon">${this.uncheckedIcon ? (0, _lit.html)`<mdui-icon name="${this.uncheckedIcon}" class="i"></mdui-icon>` : (0, _lit.html)`<mdui-icon-check-box-outline-blank class="i"></mdui-icon-check-box-outline-blank>`}</slot><slot name="checked-icon" part="checked-icon" class="icon checked-icon">${this.checkedIcon ? (0, _lit.html)`<mdui-icon name="${this.checkedIcon}" class="i"></mdui-icon>` : (0, _lit.html)`<mdui-icon-check-box class="i"></mdui-icon-check-box>`}</slot><slot name="indeterminate-icon" part="indeterminate-icon" class="icon indeterminate-icon">${this.indeterminateIcon ? (0, _lit.html)`<mdui-icon name="${this.indeterminateIcon}" class="i"></mdui-icon>` : (0, _lit.html)`<mdui-icon-indeterminate-check-box class="i"></mdui-icon-indeterminate-check-box>`}</slot></i><slot part="label" class="label"></slot></label>`;
    }
    /**
     * input[type="checkbox"] 的 change 事件无法冒泡越过 shadow dom
     */ onChange() {
        this.checked = this.inputRef.value.checked;
        this.indeterminate = false;
        this.emit("change");
    }
};
Checkbox.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _styleJs.style)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Checkbox.prototype, "disabled", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Checkbox.prototype, "checked", void 0);
(0, _tslib.__decorate)([
    (0, _defaultValueJs.defaultValue)("checked")
], Checkbox.prototype, "defaultChecked", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Checkbox.prototype, "indeterminate", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Checkbox.prototype, "required", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Checkbox.prototype, "form", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Checkbox.prototype, "name", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Checkbox.prototype, "value", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "unchecked-icon"
    })
], Checkbox.prototype, "uncheckedIcon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "checked-icon"
    })
], Checkbox.prototype, "checkedIcon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "indeterminate-icon"
    })
], Checkbox.prototype, "indeterminateIcon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], Checkbox.prototype, "invalid", void 0);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("disabled", true),
    (0, _watchJs.watch)("indeterminate", true),
    (0, _watchJs.watch)("required", true)
], Checkbox.prototype, "onDisabledChange", null);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("checked", true)
], Checkbox.prototype, "onCheckedChange", null);
Checkbox = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-checkbox")
], Checkbox);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/class-map.js":"jiVKL","lit/directives/if-defined.js":"77RTn","lit/directives/live.js":"a4wmv","lit/directives/ref.js":"eKwmp","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/controllers/form.js":"9HuZO","@mdui/shared/decorators/default-value.js":"lGYLk","@mdui/shared/decorators/watch.js":"20Qzb","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/icons/check-box-outline-blank.js":"auBYk","@mdui/shared/icons/check-box.js":"2Ao6T","@mdui/shared/icons/indeterminate-check-box.js":"7HnlI","@mdui/shared/lit-styles/component-style.js":"jFNMX","@mdui/shared/mixins/focusable.js":"kzhFM","../icon.js":"6YN4l","../ripple/ripple-mixin.js":"djWHz","./style.js":"4C5nK","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"a4wmv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _liveJs = require("lit-html/directives/live.js");
parcelHelpers.exportAll(_liveJs, exports);

},{"lit-html/directives/live.js":"hilXU","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hilXU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "live", ()=>l);
var _litHtmlJs = require("../lit-html.js");
var _directiveJs = require("../directive.js");
var _directiveHelpersJs = require("../directive-helpers.js");
/**
 * @license
 * Copyright 2020 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */ const l = (0, _directiveJs.directive)(class extends (0, _directiveJs.Directive) {
    constructor(r){
        if (super(r), r.type !== (0, _directiveJs.PartType).PROPERTY && r.type !== (0, _directiveJs.PartType).ATTRIBUTE && r.type !== (0, _directiveJs.PartType).BOOLEAN_ATTRIBUTE) throw Error("The `live` directive is not allowed on child or event bindings");
        if (!(0, _directiveHelpersJs.isSingleExpression)(r)) throw Error("`live` bindings can only contain a single expression");
    }
    render(r) {
        return r;
    }
    update(i, [t]) {
        if (t === (0, _litHtmlJs.noChange) || t === (0, _litHtmlJs.nothing)) return t;
        const o = i.element, l = i.name;
        if (i.type === (0, _directiveJs.PartType).PROPERTY) {
            if (t === o[l]) return 0, _litHtmlJs.noChange;
        } else if (i.type === (0, _directiveJs.PartType).BOOLEAN_ATTRIBUTE) {
            if (!!t === o.hasAttribute(l)) return 0, _litHtmlJs.noChange;
        } else if (i.type === (0, _directiveJs.PartType).ATTRIBUTE && o.getAttribute(l) === t + "") return 0, _litHtmlJs.noChange;
        return (0, _directiveHelpersJs.setCommittedValue)(i), t;
    }
});

},{"../lit-html.js":"1cmQt","../directive.js":"9lbyV","../directive-helpers.js":"cJsxz","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lGYLk":[function(require,module,exports) {
/**
 * defaultValue 装饰器。在 attribute 属性变更时，若值和 property 值不一致，则会保存新的 attribute 值
 *
 * 用于在调用表单的 reset() 方法时，还原成初始值
 *
 * @property({ reflect: true }) value = '';
 * @defaultValue() defaultValue = '';
 *
 * @property({ type: Boolean, reflect: true }) checked = false;
 * @defaultValue('checked') defaultChecked = false;
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * @param propertyName 对应的属性名
 */ parcelHelpers.export(exports, "defaultValue", ()=>defaultValue);
var _lit = require("lit");
var _helperJs = require("@mdui/jq/shared/helper.js");
function defaultValue(propertyName = "value") {
    return (proto, key)=>{
        const constructor = proto.constructor;
        const attributeChangedCallback = constructor.prototype.attributeChangedCallback;
        constructor.prototype.attributeChangedCallback = function(name, old, value) {
            const options = constructor.getPropertyOptions(propertyName);
            const attributeName = (0, _helperJs.isString)(options.attribute) ? options.attribute : propertyName;
            if (name === attributeName) {
                const converter = options.converter || (0, _lit.defaultConverter);
                const fromAttribute = (0, _helperJs.isFunction)(converter) ? converter : converter?.fromAttribute ?? (0, _lit.defaultConverter).fromAttribute;
                const newValue = fromAttribute(value, options.type);
                if (this[propertyName] !== newValue) this[key] = newValue;
            }
            attributeChangedCallback.call(this, name, old, value);
        };
    };
}

},{"lit":"4antt","@mdui/jq/shared/helper.js":"4D489","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"auBYk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "IconCheckBoxOutlineBlank", ()=>IconCheckBoxOutlineBlank);
var _tslib = require("tslib");
var _lit = require("lit");
var _customElementJs = require("lit/decorators/custom-element.js");
var _styleJs = require("./shared/style.js");
var _svgTagJs = require("./shared/svg-tag.js");
let IconCheckBoxOutlineBlank = class IconCheckBoxOutlineBlank extends (0, _lit.LitElement) {
    render() {
        return (0, _svgTagJs.svgTag)('<path d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"/>');
    }
};
IconCheckBoxOutlineBlank.styles = (0, _styleJs.style);
IconCheckBoxOutlineBlank = (0, _tslib.__decorate)([
    (0, _customElementJs.customElement)("mdui-icon-check-box-outline-blank")
], IconCheckBoxOutlineBlank);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators/custom-element.js":"i1eyG","./shared/style.js":"a02xN","./shared/svg-tag.js":"4bX1Q","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"i1eyG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _customElementJs = require("@lit/reactive-element/decorators/custom-element.js");
parcelHelpers.exportAll(_customElementJs, exports);

},{"@lit/reactive-element/decorators/custom-element.js":"cMf50","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"a02xN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "style", ()=>style);
var _lit = require("lit");
const style = (0, _lit.css)`:host{display:inline-block;width:1em;height:1em;line-height:1;font-size:1.5rem}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4bX1Q":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "svgTag", ()=>svgTag);
var _lit = require("lit");
var _unsafeSvgJs = require("lit/directives/unsafe-svg.js");
const svgTag = (svgPaths)=>(0, _lit.html)`<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 24 24" fill="currentColor">${(0, _unsafeSvgJs.unsafeSVG)(svgPaths)}</svg>`;

},{"lit":"4antt","lit/directives/unsafe-svg.js":"l1CHr","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2Ao6T":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "IconCheckBox", ()=>IconCheckBox);
var _tslib = require("tslib");
var _lit = require("lit");
var _customElementJs = require("lit/decorators/custom-element.js");
var _styleJs = require("./shared/style.js");
var _svgTagJs = require("./shared/svg-tag.js");
let IconCheckBox = class IconCheckBox extends (0, _lit.LitElement) {
    render() {
        return (0, _svgTagJs.svgTag)('<path d="M19 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2zm-9 14-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>');
    }
};
IconCheckBox.styles = (0, _styleJs.style);
IconCheckBox = (0, _tslib.__decorate)([
    (0, _customElementJs.customElement)("mdui-icon-check-box")
], IconCheckBox);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators/custom-element.js":"i1eyG","./shared/style.js":"a02xN","./shared/svg-tag.js":"4bX1Q","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7HnlI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "IconIndeterminateCheckBox", ()=>IconIndeterminateCheckBox);
var _tslib = require("tslib");
var _lit = require("lit");
var _customElementJs = require("lit/decorators/custom-element.js");
var _styleJs = require("./shared/style.js");
var _svgTagJs = require("./shared/svg-tag.js");
let IconIndeterminateCheckBox = class IconIndeterminateCheckBox extends (0, _lit.LitElement) {
    render() {
        return (0, _svgTagJs.svgTag)('<path d="M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"/>');
    }
};
IconIndeterminateCheckBox.styles = (0, _styleJs.style);
IconIndeterminateCheckBox = (0, _tslib.__decorate)([
    (0, _customElementJs.customElement)("mdui-icon-indeterminate-check-box")
], IconIndeterminateCheckBox);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators/custom-element.js":"i1eyG","./shared/style.js":"a02xN","./shared/svg-tag.js":"4bX1Q","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4C5nK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "style", ()=>style);
var _lit = require("lit");
const style = (0, _lit.css)`:host{position:relative;display:inline-flex;cursor:pointer;-webkit-tap-highlight-color:transparent;border-radius:.125rem;font-size:var(--mdui-typescale-label-large-size);font-weight:var(--mdui-typescale-label-large-weight);letter-spacing:var(--mdui-typescale-label-large-tracking);line-height:var(--mdui-typescale-label-large-line-height)}label{display:inline-flex;align-items:center;width:100%;cursor:inherit;-webkit-user-select:none;user-select:none;touch-action:manipulation;zoom:1;-webkit-user-drag:none}input{position:absolute;padding:0;opacity:0;pointer-events:none;width:1.125rem;height:1.125rem;margin:0 0 0 .6875rem}.icon{display:flex;position:absolute;opacity:1;transform:scale(1);color:rgb(var(--mdui-color-on-surface));font-size:1.5rem;transition:color var(--mdui-motion-duration-short4) var(--mdui-motion-easing-standard)}.checked-icon,.indeterminate-icon{opacity:0;transform:scale(.5);transition-property:color,opacity,transform;transition-duration:var(--mdui-motion-duration-short4);transition-timing-function:var(--mdui-motion-easing-standard)}.icon .i,::slotted([slot=checked-icon]),::slotted([slot=indeterminate-icon]),::slotted([slot=unchecked-icon]){color:inherit;font-size:inherit}i{position:relative;display:flex;align-items:center;justify-content:center;overflow:hidden;border-radius:50%;width:2.5rem;min-width:2.5rem;height:2.5rem;--mdui-comp-ripple-state-layer-color:var(--mdui-color-on-surface)}.label{display:flex;width:100%;padding-top:.625rem;padding-bottom:.625rem;color:rgb(var(--mdui-color-on-surface));transition:color var(--mdui-motion-duration-short4) var(--mdui-motion-easing-standard)}:host([checked]) i{--mdui-comp-ripple-state-layer-color:var(--mdui-color-primary)}:host([checked]) .icon{color:rgb(var(--mdui-color-primary))}:host([checked]) .indeterminate-icon{opacity:0;transform:scale(.5)}:host([checked]) .checked-icon{opacity:1;transform:scale(1)}:host([indeterminate]) i{--mdui-comp-ripple-state-layer-color:var(--mdui-color-primary)}:host([indeterminate]) .icon{color:rgb(var(--mdui-color-primary))}:host([indeterminate]) .checked-icon{opacity:0;transform:scale(.5)}:host([indeterminate]) .indeterminate-icon{opacity:1;transform:scale(1)}.invalid i{--mdui-comp-ripple-state-layer-color:var(--mdui-color-error)}.invalid .icon{color:rgb(var(--mdui-color-error))}.invalid .label{color:rgb(var(--mdui-color-error))}:host([disabled]){cursor:default;pointer-events:none}:host([disabled]) .icon{color:rgba(var(--mdui-color-on-surface),38%)}:host([disabled]) .label{color:rgba(var(--mdui-color-on-surface),38%)}:host([disabled][checked]) .unchecked-icon,:host([disabled][indeterminate]) .unchecked-icon{opacity:0}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bIB3P":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./chip/index.js");
parcelHelpers.exportAll(_indexJs, exports);

},{"./chip/index.js":"gleab","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gleab":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Chip", ()=>Chip);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _refJs = require("lit/directives/ref.js");
var _classcat = require("classcat");
var _classcatDefault = parcelHelpers.interopDefault(_classcat);
var _hasSlotJs = require("@mdui/shared/controllers/has-slot.js");
var _watchJs = require("@mdui/shared/decorators/watch.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _templateJs = require("@mdui/shared/helpers/template.js");
var _checkJs = require("@mdui/shared/icons/check.js");
var _clearJs = require("@mdui/shared/icons/clear.js");
var _buttonBaseJs = require("../button/button-base.js");
var _iconJs = require("../icon.js");
var _styleJs = require("./style.js");
/**
 * @summary 纸片组件
 *
 * ```html
 * <mdui-chip>Chip</mdui-chip>
 * ```
 *
 * @event focus - 获得焦点时触发
 * @event blur - 失去焦点时触发
 * @event invalid - 表单字段验证未通过时触发
 * @event change - 选中状态变更时触发
 * @event delete - 点击删除图标时触发
 *
 * @slot - 文本
 * @slot icon - 左侧元素
 * @slot end-icon - 右侧元素
 * @slot selected-icon - 选中状态的左侧元素
 * @slot delete-icon - 可删除时，右侧的删除元素
 *
 * @csspart button - 内部的 `button` 或 `a` 元素
 * @csspart label - 文本
 * @csspart icon - 左侧图标
 * @csspart end-icon - 右侧图标
 * @csspart selected-icon - 选中状态的左侧图标
 * @csspart delete-icon - 可删除时，右侧的删除图标
 * @csspart loading - 加载中状态的 `<mdui-circular-progress>` 元素
 *
 * @cssprop --shape-corner - 组件的圆角大小。可以指定一个具体的像素值；但更推荐[引用设计令牌](/docs/2/styles/design-tokens#shape-corner)
 */ let Chip = class Chip extends (0, _buttonBaseJs.ButtonBase) {
    constructor(){
        super();
        /**
         * 纸片形状。可选值为：
         *
         * * `assist`：用于显示和当前上下文相关的辅助操作。例如在点餐页面，提供分享，收藏等功能
         * * `filter`：用于对内容进行筛选。例如在搜索结果页，对搜索结果进行过滤
         * * `input`：用于表示用户输入的信息片段。例如 Gmail 中“收件人”字段中的联系人
         * * `suggestion`：用于提供动态生成的推荐信息，以简化用户操作。例如在聊天应用中猜测用户可能想发送的信息，供用户选择
         */ this.variant = "assist";
        /**
         * 是否包含阴影
         */ this.elevated = false;
        /**
         * 是否可选中
         */ this.selectable = false;
        /**
         * 是否为选中状态
         */ this.selected = false;
        /**
         * 是否可删除。为 `true` 时，在右侧会显示删除图标图标
         */ this.deletable = false;
        this.rippleRef = (0, _refJs.createRef)();
        this.hasSlotController = new (0, _hasSlotJs.HasSlotController)(this, "icon", "selected-icon", "end-icon");
        this.onClick = this.onClick.bind(this);
        this.onKeyDown = this.onKeyDown.bind(this);
    }
    get rippleElement() {
        return this.rippleRef.value;
    }
    onSelectedChange() {
        this.emit("change");
    }
    firstUpdated(changedProperties) {
        super.firstUpdated(changedProperties);
        this.addEventListener("click", this.onClick);
        this.addEventListener("keydown", this.onKeyDown);
    }
    render() {
        const hasIcon = this.icon || this.hasSlotController.test("icon");
        const hasEndIcon = this.endIcon || this.hasSlotController.test("end-icon");
        const hasSelectedIcon = this.selectedIcon || [
            "assist",
            "filter"
        ].includes(this.variant) || hasIcon || this.hasSlotController.test("selected-icon");
        const className = (0, _classcatDefault.default)({
            button: true,
            "has-icon": this.loading || !this.selected && hasIcon || this.selected && hasSelectedIcon,
            "has-end-icon": hasEndIcon
        });
        return (0, _lit.html)`<mdui-ripple ${(0, _refJs.ref)(this.rippleRef)} .noRipple="${this.noRipple}"></mdui-ripple>${this.isButton() ? this.renderButton({
            className,
            part: "button",
            content: this.renderInner()
        }) : this.disabled || this.loading ? (0, _lit.html)`<span part="button" class="${className} _a">${this.renderInner()}</span>` : this.renderAnchor({
            className,
            part: "button",
            content: this.renderInner()
        })}`;
    }
    onClick() {
        if (this.disabled || this.loading) return;
        // 点击时，切换选中状态
        if (this.selectable) this.selected = !this.selected;
    }
    onKeyDown(event) {
        if (this.disabled || this.loading) return;
        // 按下空格键时，切换选中状态
        if (this.selectable && event.key === " ") {
            event.preventDefault();
            this.selected = !this.selected;
        }
        // 按下 Delete 或 BackSpace 键时，触发 delete 事件
        if (this.deletable && [
            "Delete",
            "Backspace"
        ].includes(event.key)) this.emit("delete");
    }
    /**
     * 点击删除按钮
     */ onDelete(event) {
        event.stopPropagation();
        this.emit("delete");
    }
    renderIcon() {
        if (this.loading) return this.renderLoading();
        const icon = ()=>{
            return this.icon ? (0, _lit.html)`<mdui-icon name="${this.icon}" class="i"></mdui-icon>` : (0, _templateJs.nothingTemplate);
        };
        const selectedIcon = ()=>{
            if (this.selectedIcon) return (0, _lit.html)`<mdui-icon name="${this.selectedIcon}" class="i"></mdui-icon>`;
            if (this.variant === "assist" || this.variant === "filter") return (0, _lit.html)`<mdui-icon-check class="i"></mdui-icon-check>`;
            return icon();
        };
        return !this.selected ? (0, _lit.html)`<slot name="icon" part="icon" class="icon">${icon()}</slot>` : (0, _lit.html)`<slot name="selected-icon" part="selected-icon" class="selected-icon">${selectedIcon()}</slot>`;
    }
    renderLabel() {
        return (0, _lit.html)`<slot part="label" class="label"></slot>`;
    }
    renderEndIcon() {
        return (0, _lit.html)`<slot name="end-icon" part="end-icon" class="end-icon">${this.endIcon ? (0, _lit.html)`<mdui-icon name="${this.endIcon}" class="i"></mdui-icon>` : (0, _templateJs.nothingTemplate)}</slot>`;
    }
    renderDeleteIcon() {
        if (!this.deletable) return 0, _templateJs.nothingTemplate;
        return (0, _lit.html)`<slot name="delete-icon" part="delete-icon" class="delete-icon" @click="${this.onDelete}">${this.deleteIcon ? (0, _lit.html)`<mdui-icon name="${this.deleteIcon}" class="i"></mdui-icon>` : (0, _lit.html)`<mdui-icon-clear class="i"></mdui-icon-clear>`}</slot>`;
    }
    renderInner() {
        return [
            this.renderIcon(),
            this.renderLabel(),
            this.renderEndIcon(),
            this.renderDeleteIcon()
        ];
    }
};
Chip.styles = [
    (0, _buttonBaseJs.ButtonBase).styles,
    (0, _styleJs.style)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Chip.prototype, "variant", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Chip.prototype, "elevated", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Chip.prototype, "selectable", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Chip.prototype, "selected", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Chip.prototype, "deletable", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Chip.prototype, "icon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "selected-icon"
    })
], Chip.prototype, "selectedIcon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "end-icon"
    })
], Chip.prototype, "endIcon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "delete-icon"
    })
], Chip.prototype, "deleteIcon", void 0);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("selected", true)
], Chip.prototype, "onSelectedChange", null);
Chip = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-chip")
], Chip);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/ref.js":"eKwmp","classcat":"9ww9D","@mdui/shared/controllers/has-slot.js":"cARnY","@mdui/shared/decorators/watch.js":"20Qzb","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/helpers/template.js":"7SHVu","@mdui/shared/icons/check.js":"aAByS","@mdui/shared/icons/clear.js":"bLHIr","../button/button-base.js":"7z0Zx","../icon.js":"6YN4l","./style.js":"dJHSC","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aAByS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "IconCheck", ()=>IconCheck);
var _tslib = require("tslib");
var _lit = require("lit");
var _customElementJs = require("lit/decorators/custom-element.js");
var _styleJs = require("./shared/style.js");
var _svgTagJs = require("./shared/svg-tag.js");
let IconCheck = class IconCheck extends (0, _lit.LitElement) {
    render() {
        return (0, _svgTagJs.svgTag)('<path d="M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"/>');
    }
};
IconCheck.styles = (0, _styleJs.style);
IconCheck = (0, _tslib.__decorate)([
    (0, _customElementJs.customElement)("mdui-icon-check")
], IconCheck);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators/custom-element.js":"i1eyG","./shared/style.js":"a02xN","./shared/svg-tag.js":"4bX1Q","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bLHIr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "IconClear", ()=>IconClear);
var _tslib = require("tslib");
var _lit = require("lit");
var _customElementJs = require("lit/decorators/custom-element.js");
var _styleJs = require("./shared/style.js");
var _svgTagJs = require("./shared/svg-tag.js");
let IconClear = class IconClear extends (0, _lit.LitElement) {
    render() {
        return (0, _svgTagJs.svgTag)('<path d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/>');
    }
};
IconClear.styles = (0, _styleJs.style);
IconClear = (0, _tslib.__decorate)([
    (0, _customElementJs.customElement)("mdui-icon-clear")
], IconClear);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators/custom-element.js":"i1eyG","./shared/style.js":"a02xN","./shared/svg-tag.js":"4bX1Q","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dJHSC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "style", ()=>style);
var _lit = require("lit");
const style = (0, _lit.css)`:host{--shape-corner:var(--mdui-shape-corner-small);position:relative;display:inline-block;overflow:hidden;border-radius:var(--shape-corner);cursor:pointer;-webkit-tap-highlight-color:transparent;transition:box-shadow var(--mdui-motion-duration-short4) var(--mdui-motion-easing-linear);height:2rem;background-color:rgb(var(--mdui-color-surface));border:.0625rem solid rgb(var(--mdui-color-outline));color:rgb(var(--mdui-color-on-surface-variant));font-size:var(--mdui-typescale-label-large-size);font-weight:var(--mdui-typescale-label-large-weight);letter-spacing:var(--mdui-typescale-label-large-tracking);line-height:var(--mdui-typescale-label-large-line-height);--mdui-comp-ripple-state-layer-color:var(--mdui-color-on-surface-variant)}.button{padding-right:.4375rem;padding-left:.4375rem}:host([variant=input]) .button{padding-right:.1875rem;padding-left:.1875rem}:host([selected]) .button{padding-right:.5rem;padding-left:.5rem}:host([selected][variant=input]) .button{padding-right:.25rem;padding-left:.25rem}:host([elevated]) .button{padding-right:.5rem;padding-left:.5rem}:host([variant=assist]){color:rgb(var(--mdui-color-on-surface));--mdui-comp-ripple-state-layer-color:var(--mdui-color-on-surface)}:host([elevated]){border-width:0;background-color:rgb(var(--mdui-color-surface-container-low));box-shadow:var(--mdui-elevation-level1)}:host([selected]){color:rgb(var(--mdui-color-on-secondary-container));background-color:rgb(var(--mdui-color-secondary-container));border-width:0;--mdui-comp-ripple-state-layer-color:var(
      --mdui-color-on-secondary-container
    )}:host([disabled]),:host([loading]){cursor:default;pointer-events:none}:host([disabled]){border-color:rgba(var(--mdui-color-on-surface),12%);color:rgba(var(--mdui-color-on-surface),38%);box-shadow:var(--mdui-elevation-level0)}:host([disabled][elevated]),:host([disabled][selected]){background-color:rgba(var(--mdui-color-on-surface),12%)}:host([selected][hover]){box-shadow:var(--mdui-elevation-level1)}:host([elevated][hover]){color:rgb(var(--mdui-color-on-secondary-container));box-shadow:var(--mdui-elevation-level2)}:host([variant=filter][hover]),:host([variant=input][hover]),:host([variant=suggestion][hover]){color:rgb(var(--mdui-color-on-surface-variant))}:host([variant=filter][focus-visible]),:host([variant=input][focus-visible]),:host([variant=suggestion][focus-visible]){border-color:rgb(var(--mdui-color-on-surface-variant))}:host([dragged]),:host([dragged][hover]){box-shadow:var(--mdui-elevation-level4)}.button{overflow:visible}.label{display:inline-flex;padding-right:.5rem;padding-left:.5rem}.end-icon,.icon,.selected-icon{display:inline-flex;font-size:1.28571429em;color:rgb(var(--mdui-color-on-surface-variant))}:host([variant=assist]) .end-icon,:host([variant=assist]) .icon,:host([variant=assist]) .selected-icon{color:rgb(var(--mdui-color-primary))}:host([selected]) .end-icon,:host([selected]) .icon,:host([selected]) .selected-icon{color:rgb(var(--mdui-color-on-secondary-container))}:host([disabled]) .end-icon,:host([disabled]) .icon,:host([disabled]) .selected-icon{opacity:.38;color:rgb(var(--mdui-color-on-surface))}.end-icon .i,.icon .i,.selected-icon .i,::slotted([slot=end-icon]),::slotted([slot=icon]),::slotted([slot=selected-icon]){font-size:inherit}:host([variant=input]) .has-icon .icon,:host([variant=input]) .has-icon .selected-icon,:host([variant=input]) .has-icon mdui-circular-progress{margin-left:.25rem}:host([variant=input]) .has-end-icon .end-icon{margin-right:.25rem}mdui-circular-progress{display:inline-flex;width:1.125rem;height:1.125rem}:host([disabled]) mdui-circular-progress{stroke:rgba(var(--mdui-color-on-surface),38%)}::slotted(mdui-avatar[slot=end-icon]),::slotted(mdui-avatar[slot=icon]),::slotted(mdui-avatar[slot=selected-icon]){width:1.5rem;height:1.5rem}:host([disabled]) ::slotted(mdui-avatar[slot=end-icon]),:host([disabled]) ::slotted(mdui-avatar[slot=icon]),:host([disabled]) ::slotted(mdui-avatar[slot=selected-icon]){opacity:.38}::slotted(mdui-avatar[slot=icon]),::slotted(mdui-avatar[slot=selected-icon]){margin-left:-.25rem;margin-right:-.125rem}::slotted(mdui-avatar[slot=end-icon]){margin-right:-.25rem;margin-left:-.125rem}.delete-icon{display:inline-flex;font-size:1.28571429em;transition:background-color var(--mdui-motion-duration-short4) var(--mdui-motion-easing-linear);border-radius:var(--mdui-shape-corner-full);margin-right:-.25rem;margin-left:-.25rem;padding:.25rem;color:rgb(var(--mdui-color-on-surface-variant))}.delete-icon:hover{background-color:rgba(var(--mdui-color-on-surface-variant),12%)}.has-end-icon .delete-icon{margin-left:.25rem}:host([variant=assiat]) .delete-icon{color:rgb(var(--mdui-color-primary))}:host([variant=input]) .delete-icon{margin-right:.0625rem}:host([disabled]) .delete-icon{color:rgba(var(--mdui-color-on-surface),38%)}.delete-icon .i,::slotted([slot=delete-icon]){font-size:inherit}::slotted(mdui-avatar[slot=delete-icon]){width:1.125rem;height:1.125rem}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"g0ZBZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Collapse", ()=>Collapse);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _js = require("@mdui/jq/$.js");
var _isJs = require("@mdui/jq/methods/is.js");
var _helperJs = require("@mdui/jq/shared/helper.js");
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _definedJs = require("@mdui/shared/controllers/defined.js");
var _watchJs = require("@mdui/shared/decorators/watch.js");
var _arrayJs = require("@mdui/shared/helpers/array.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _collapseStyleJs = require("./collapse-style.js");
/**
 * @summary 折叠面板组件。需与 `<mdui-collapse-item>` 组件配合使用
 *
 * ```html
 * <mdui-collapse>
 * ..<mdui-collapse-item header="header-1">content-1</mdui-collapse-item>
 * ..<mdui-collapse-item header="header-2">content-2</mdui-collapse-item>
 * </mdui-collapse>
 * ```
 *
 * @event change - 当前打开的折叠面板项改变时触发
 *
 * @slot - `<mdui-collapse-item>` 组件
 */ let Collapse = class Collapse extends (0, _mduiElementJs.MduiElement) {
    constructor(){
        super(...arguments);
        /**
         * 是否为手风琴模式
         */ this.accordion = false;
        /**
         * 是否禁用该折叠面板
         */ this.disabled = false;
        // 因为 collapse-item 的 value 可能会重复，所以在每个 collapse-item 元素上都添加了一个唯一的 key，通过 activeKey 来记录激活状态的 key
        this.activeKeys = [];
        // 是否是初始状态，初始状态不触发 change 事件，没有动画
        this.isInitial = true;
        this.definedController = new (0, _definedJs.DefinedController)(this, {
            relatedElements: [
                "mdui-collapse-item"
            ]
        });
    }
    async onActiveKeysChange() {
        await this.definedController.whenDefined();
        // 根据 activeKeys 读取对应 collapse-item 的值
        const value = this.accordion ? this.items.find((item)=>this.activeKeys.includes(item.key))?.value : this.items.filter((item)=>this.activeKeys.includes(item.key)).map((item)=>item.value);
        this.setValue(value);
        if (!this.isInitial) this.emit("change");
    }
    async onValueChange() {
        this.isInitial = !this.hasUpdated;
        await this.definedController.whenDefined();
        if (this.accordion) {
            const value = this.value;
            if (!value) this.setActiveKeys([]);
            else {
                const item = this.items.find((item)=>item.value === value);
                this.setActiveKeys(item ? [
                    item.key
                ] : []);
            }
        } else {
            const value = this.value;
            if (!value.length) this.setActiveKeys([]);
            else {
                const activeKeys = this.items.filter((item)=>value.includes(item.value)).map((item)=>item.key);
                this.setActiveKeys(activeKeys);
            }
        }
        this.updateItems();
    }
    render() {
        return (0, _lit.html)`<slot @slotchange="${this.onSlotChange}" @click="${this.onClick}"></slot>`;
    }
    setActiveKeys(activeKeys) {
        if (!(0, _arrayJs.arraysEqualIgnoreOrder)(this.activeKeys, activeKeys)) this.activeKeys = activeKeys;
    }
    setValue(value) {
        if (this.accordion || (0, _helperJs.isUndefined)(this.value) || (0, _helperJs.isUndefined)(value)) this.value = value;
        else if (!(0, _arrayJs.arraysEqualIgnoreOrder)(this.value, value)) this.value = value;
    }
    onClick(event) {
        // 全部禁用
        if (this.disabled) return;
        // event.button 为 0 时，为鼠标左键点击。忽略鼠标中键和右键
        if (event.button) return;
        const target = event.target;
        const item = target.closest("mdui-collapse-item");
        // collapse-item 被禁用，忽略
        if (!item || item.disabled) return;
        const path = event.composedPath();
        // 指定了 trigger 时，点击了其他地方时，忽略
        if (item.trigger && !path.find((element)=>(0, _helperJs.isElement)(element) && (0, _js.$)(element).is(item.trigger))) return;
        // header 元素，忽略点击 header 以外的元素
        if (!path.find((element)=>(0, _helperJs.isElement)(element) && element.part.contains("header"))) return;
        if (this.accordion) {
            if (this.activeKeys.includes(item.key)) this.setActiveKeys([]);
            else this.setActiveKeys([
                item.key
            ]);
        } else {
            // 直接修改 this.activeKeys 无法被 watch 监听到，需要先克隆一份 this.activeKeys
            const activeKeys = [
                ...this.activeKeys
            ];
            if (activeKeys.includes(item.key)) activeKeys.splice(activeKeys.indexOf(item.key), 1);
            else activeKeys.push(item.key);
            this.setActiveKeys(activeKeys);
        }
        this.isInitial = false;
        this.updateItems();
    }
    async onSlotChange() {
        await this.definedController.whenDefined();
        this.updateItems();
    }
    // 更新 <mdui-collapse-item> 的状态
    updateItems() {
        this.items.forEach((item)=>{
            item.active = this.activeKeys.includes(item.key);
            item.isInitial = this.isInitial;
        });
    }
};
Collapse.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _collapseStyleJs.collapseStyle)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Collapse.prototype, "accordion", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)()
], Collapse.prototype, "value", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Collapse.prototype, "disabled", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], Collapse.prototype, "activeKeys", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.queryAssignedElements)({
        selector: "mdui-collapse-item",
        flatten: true
    })
], Collapse.prototype, "items", void 0);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("activeKeys", true)
], Collapse.prototype, "onActiveKeysChange", null);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("value")
], Collapse.prototype, "onValueChange", null);
Collapse = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-collapse")
], Collapse);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","@mdui/jq/$.js":"dZx9v","@mdui/jq/methods/is.js":"iN2DI","@mdui/jq/shared/helper.js":"4D489","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/controllers/defined.js":"9Omrp","@mdui/shared/decorators/watch.js":"20Qzb","@mdui/shared/helpers/array.js":"gRRlE","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/lit-styles/component-style.js":"jFNMX","./collapse-style.js":"iN59k","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gRRlE":[function(require,module,exports) {
/**
 * 检查两个数组是否包含相同的元素，不考虑顺序
 * @param a
 * @param b
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "arraysEqualIgnoreOrder", ()=>arraysEqualIgnoreOrder);
const arraysEqualIgnoreOrder = (a, b)=>{
    if (a.length !== b.length) return false;
    const sortedA = [
        ...a
    ].sort();
    const sortedB = [
        ...b
    ].sort();
    return sortedA.every((value, index)=>value === sortedB[index]);
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iN59k":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "collapseStyle", ()=>collapseStyle);
var _lit = require("lit");
const collapseStyle = (0, _lit.css)`:host{display:block}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5HBVi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CollapseItem", ()=>CollapseItem);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _classMapJs = require("lit/directives/class-map.js");
var _refJs = require("lit/directives/ref.js");
var _js = require("@mdui/jq/$.js");
var _heightJs = require("@mdui/jq/methods/height.js");
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _watchJs = require("@mdui/shared/decorators/watch.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _uniqueIdJs = require("@mdui/shared/helpers/uniqueId.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _collapseItemStyleJs = require("./collapse-item-style.js");
/**
 * @summary 折叠面板项组件。需与 `<mdui-collapse>` 组件配合使用
 *
 * ```html
 * <mdui-collapse>
 * ..<mdui-collapse-item header="header-1">content-1</mdui-collapse-item>
 * ..<mdui-collapse-item header="header-2">content-2</mdui-collapse-item>
 * </mdui-collapse>
 * ```
 *
 * @event open - 开始打开时，事件被触发
 * @event opened - 打开动画完成时，事件被触发
 * @event close - 开始关闭时，事件被触发
 * @event closed - 关闭动画完成时，事件被触发
 *
 * @slot - 折叠面板项的正文内容
 * @slot header - 折叠面板项的头部内容
 *
 * @csspart header - 折叠面板的头部内容
 * @csspart body - 折叠面板的正文内容
 */ let CollapseItem = class CollapseItem extends (0, _mduiElementJs.MduiElement) {
    constructor(){
        super(...arguments);
        /**
         * 是否禁用该折叠面板项
         */ this.disabled = false;
        /**
         * 是否为激活状态，由 `collapse` 组件控制该参数
         */ this.active = false;
        this.state = "closed";
        // 是否是初始状态，不显示动画
        this.isInitial = true;
        // 每一个 `collapse-item` 元素都添加一个唯一的 key
        this.key = (0, _uniqueIdJs.uniqueId)();
        this.bodyRef = (0, _refJs.createRef)();
    }
    onActiveChange() {
        if (this.isInitial) {
            this.state = this.active ? "opened" : "closed";
            if (this.hasUpdated) this.updateBodyHeight();
        } else {
            this.state = this.active ? "open" : "close";
            this.emit(this.state);
            this.updateBodyHeight();
        }
    }
    firstUpdated(changedProperties) {
        super.firstUpdated(changedProperties);
        this.updateBodyHeight();
    }
    render() {
        return (0, _lit.html)`<slot name="header" part="header" class="header">${this.header}</slot><slot part="body" class="body ${(0, _classMapJs.classMap)({
            opened: this.state === "opened",
            active: this.active
        })}" ${(0, _refJs.ref)(this.bodyRef)} @transitionend="${this.onTransitionEnd}"></slot>`;
    }
    onTransitionEnd(event) {
        if (event.target === this.bodyRef.value) {
            this.state = this.active ? "opened" : "closed";
            this.emit(this.state);
            this.updateBodyHeight();
        }
    }
    updateBodyHeight() {
        const scrollHeight = this.bodyRef.value.scrollHeight;
        // 如果是从 opened 状态开始关闭，则先设置高度值，并等重绘完成
        if (this.state === "close") {
            (0, _js.$)(this.bodyRef.value).height(scrollHeight);
            this.bodyRef.value.clientLeft;
        }
        (0, _js.$)(this.bodyRef.value).height(this.state === "opened" ? "auto" : this.state === "open" ? scrollHeight : 0);
    }
};
CollapseItem.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _collapseItemStyleJs.collapseItemStyle)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], CollapseItem.prototype, "value", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], CollapseItem.prototype, "header", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], CollapseItem.prototype, "disabled", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)()
], CollapseItem.prototype, "trigger", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], CollapseItem.prototype, "active", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], CollapseItem.prototype, "state", void 0);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("active")
], CollapseItem.prototype, "onActiveChange", null);
CollapseItem = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-collapse-item")
], CollapseItem);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/class-map.js":"jiVKL","lit/directives/ref.js":"eKwmp","@mdui/jq/$.js":"dZx9v","@mdui/jq/methods/height.js":"4Py39","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/decorators/watch.js":"20Qzb","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/helpers/uniqueId.js":"4DPTP","@mdui/shared/lit-styles/component-style.js":"jFNMX","./collapse-item-style.js":"53a2f","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"53a2f":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "collapseItemStyle", ()=>collapseItemStyle);
var _lit = require("lit");
const collapseItemStyle = (0, _lit.css)`:host{display:flex;flex-direction:column}.header{display:block}.body{display:block;overflow:hidden;transition:height var(--mdui-motion-duration-short4) var(--mdui-motion-easing-emphasized)}.body.opened{overflow:visible}.body.active{transition-duration:var(--mdui-motion-duration-medium4)}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"GiXpK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./dialog/index.js");
parcelHelpers.exportAll(_indexJs, exports);

},{"./dialog/index.js":"7pLMS","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7pLMS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Dialog", ()=>Dialog);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _classMapJs = require("lit/directives/class-map.js");
var _refJs = require("lit/directives/ref.js");
var _whenJs = require("lit/directives/when.js");
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _definedJs = require("@mdui/shared/controllers/defined.js");
var _hasSlotJs = require("@mdui/shared/controllers/has-slot.js");
var _watchJs = require("@mdui/shared/decorators/watch.js");
var _animateJs = require("@mdui/shared/helpers/animate.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _modalJs = require("@mdui/shared/helpers/modal.js");
var _motionJs = require("@mdui/shared/helpers/motion.js");
var _scrollJs = require("@mdui/shared/helpers/scroll.js");
var _templateJs = require("@mdui/shared/helpers/template.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _iconJs = require("../icon.js");
var _styleJs = require("./style.js");
/**
 * @summary 对话框组件
 *
 * ```html
 * <mdui-dialog>content</mdui-dialog>
 * ```
 *
 * @event open - 在对话框打开之前触发。可以通过调用 `event.preventDefault()` 阻止对话框打开
 * @event opened - 在对话框打开之后触发
 * @event close - 在对话框关闭之前触发。可以通过调用 `event.preventDefault()` 阻止对话框关闭
 * @event closed - 在对话框关闭之后触发
 * @event overlay-click - 点击遮罩层时触发
 *
 * @slot header - 顶部元素，默认包含 `icon` slot 和 `headline` slot
 * @slot icon - 顶部图标
 * @slot headline - 顶部标题
 * @slot description - 标题下方的文本
 * @slot - 对话框主体内容
 * @slot action - 底部操作栏中的元素
 *
 * @csspart overlay - 遮罩层
 * @csspart panel - 对话框容器
 * @csspart header - 对话框 header 部分，其中包含了 icon 和 headline
 * @csspart icon - 顶部的图标，位于 header 中
 * @csspart headline - 顶部的标题，位于 header 中
 * @csspart body - 对话框的 body 部分
 * @csspart description - 副文本部分，位于 body 中
 * @csspart action - 底部操作按钮
 *
 * @cssprop --shape-corner - 组件的圆角大小。可以指定一个具体的像素值；但更推荐[引用设计令牌](/docs/2/styles/design-tokens#shape-corner)
 * @cssprop --z-index - 组件的 CSS 的 `z-index` 值
 */ let Dialog = class Dialog extends (0, _mduiElementJs.MduiElement) {
    constructor(){
        super(...arguments);
        /**
         * 是否打开对话框
         */ this.open = false;
        /**
         * 是否为全屏对话框
         */ this.fullscreen = false;
        /**
         * 是否在按下 ESC 键时，关闭对话框
         */ this.closeOnEsc = false;
        /**
         * 是否在点击遮罩时，关闭对话框
         */ this.closeOnOverlayClick = false;
        /**
         * 是否垂直排列底部操作按钮
         */ this.stackedActions = false;
        this.overlayRef = (0, _refJs.createRef)();
        this.panelRef = (0, _refJs.createRef)();
        this.bodyRef = (0, _refJs.createRef)();
        this.hasSlotController = new (0, _hasSlotJs.HasSlotController)(this, "header", "icon", "headline", "description", "action", "[default]");
        this.definedController = new (0, _definedJs.DefinedController)(this, {
            relatedElements: [
                "mdui-top-app-bar"
            ]
        });
    }
    async onOpenChange() {
        const hasUpdated = this.hasUpdated;
        // 默认为关闭状态。因此首次渲染时，且为关闭状态，不执行
        if (!this.open && !hasUpdated) return;
        await this.definedController.whenDefined();
        if (!hasUpdated) await this.updateComplete;
        // 内部的 header, body, actions 元素
        const children = Array.from(this.panelRef.value.querySelectorAll(".header, .body, .actions"));
        const easingLinear = (0, _motionJs.getEasing)(this, "linear");
        const easingEmphasizedDecelerate = (0, _motionJs.getEasing)(this, "emphasized-decelerate");
        const easingEmphasizedAccelerate = (0, _motionJs.getEasing)(this, "emphasized-accelerate");
        const stopAnimation = ()=>Promise.all([
                (0, _animateJs.stopAnimations)(this.overlayRef.value),
                (0, _animateJs.stopAnimations)(this.panelRef.value),
                ...children.map((child)=>(0, _animateJs.stopAnimations)(child))
            ]);
        // 打开
        // 要区分是否首次渲染，首次渲染不触发事件，不执行动画；非首次渲染，触发事件，执行动画
        if (this.open) {
            if (hasUpdated) {
                const eventProceeded = this.emit("open", {
                    cancelable: true
                });
                if (!eventProceeded) return;
            }
            this.style.display = "flex";
            // 包含 <mdui-top-app-bar slot="header"> 时
            const topAppBarElements = this.topAppBarElements ?? [];
            if (topAppBarElements.length) {
                const topAppBarElement = topAppBarElements[0];
                // top-app-bar 未设置 scrollTarget 时，默认设置为 bodyRef
                if (!topAppBarElement.scrollTarget) topAppBarElement.scrollTarget = this.bodyRef.value;
                // 移除 header 和 body 之间的 margin
                this.bodyRef.value.style.marginTop = "0";
            }
            this.originalTrigger = document.activeElement;
            this.modalHelper.activate();
            (0, _scrollJs.lockScreen)(this);
            await stopAnimation();
            // 设置聚焦
            requestAnimationFrame(()=>{
                const autoFocusTarget = this.querySelector("[autofocus]");
                if (autoFocusTarget) autoFocusTarget.focus({
                    preventScroll: true
                });
                else this.panelRef.value.focus({
                    preventScroll: true
                });
            });
            const duration = (0, _motionJs.getDuration)(this, "medium4");
            await Promise.all([
                (0, _animateJs.animateTo)(this.overlayRef.value, [
                    {
                        opacity: 0
                    },
                    {
                        opacity: 1,
                        offset: 0.3
                    },
                    {
                        opacity: 1
                    }
                ], {
                    duration: hasUpdated ? duration : 0,
                    easing: easingLinear
                }),
                (0, _animateJs.animateTo)(this.panelRef.value, [
                    {
                        transform: "translateY(-1.875rem) scaleY(0)"
                    },
                    {
                        transform: "translateY(0) scaleY(1)"
                    }
                ], {
                    duration: hasUpdated ? duration : 0,
                    easing: easingEmphasizedDecelerate
                }),
                (0, _animateJs.animateTo)(this.panelRef.value, [
                    {
                        opacity: 0
                    },
                    {
                        opacity: 1,
                        offset: 0.1
                    },
                    {
                        opacity: 1
                    }
                ], {
                    duration: hasUpdated ? duration : 0,
                    easing: easingLinear
                }),
                ...children.map((child)=>(0, _animateJs.animateTo)(child, [
                        {
                            opacity: 0
                        },
                        {
                            opacity: 0,
                            offset: 0.2
                        },
                        {
                            opacity: 1,
                            offset: 0.8
                        },
                        {
                            opacity: 1
                        }
                    ], {
                        duration: hasUpdated ? duration : 0,
                        easing: easingLinear
                    }))
            ]);
            if (hasUpdated) this.emit("opened");
        } else {
            const eventProceeded = this.emit("close", {
                cancelable: true
            });
            if (!eventProceeded) return;
            this.modalHelper.deactivate();
            await stopAnimation();
            const duration = (0, _motionJs.getDuration)(this, "short4");
            await Promise.all([
                (0, _animateJs.animateTo)(this.overlayRef.value, [
                    {
                        opacity: 1
                    },
                    {
                        opacity: 0
                    }
                ], {
                    duration,
                    easing: easingLinear
                }),
                (0, _animateJs.animateTo)(this.panelRef.value, [
                    {
                        transform: "translateY(0) scaleY(1)"
                    },
                    {
                        transform: "translateY(-1.875rem) scaleY(0.6)"
                    }
                ], {
                    duration,
                    easing: easingEmphasizedAccelerate
                }),
                (0, _animateJs.animateTo)(this.panelRef.value, [
                    {
                        opacity: 1
                    },
                    {
                        opacity: 1,
                        offset: 0.75
                    },
                    {
                        opacity: 0
                    }
                ], {
                    duration,
                    easing: easingLinear
                }),
                ...children.map((child)=>(0, _animateJs.animateTo)(child, [
                        {
                            opacity: 1
                        },
                        {
                            opacity: 0,
                            offset: 0.75
                        },
                        {
                            opacity: 0
                        }
                    ], {
                        duration,
                        easing: easingLinear
                    }))
            ]);
            this.style.display = "none";
            (0, _scrollJs.unlockScreen)(this);
            // 对话框关闭后，恢复焦点到原有的元素上
            const trigger = this.originalTrigger;
            if (typeof trigger?.focus === "function") setTimeout(()=>trigger.focus());
            this.emit("closed");
        }
    }
    disconnectedCallback() {
        super.disconnectedCallback();
        (0, _scrollJs.unlockScreen)(this);
    }
    firstUpdated(_changedProperties) {
        super.firstUpdated(_changedProperties);
        this.modalHelper = new (0, _modalJs.Modal)(this);
        this.addEventListener("keydown", (event)=>{
            if (this.open && this.closeOnEsc && event.key === "Escape") {
                event.stopPropagation();
                this.open = false;
            }
        });
    }
    render() {
        const hasActionSlot = this.hasSlotController.test("action");
        const hasDefaultSlot = this.hasSlotController.test("[default]");
        const hasIcon = !!this.icon || this.hasSlotController.test("icon");
        const hasHeadline = !!this.headline || this.hasSlotController.test("headline");
        const hasDescription = !!this.description || this.hasSlotController.test("description");
        const hasHeader = hasIcon || hasHeadline || this.hasSlotController.test("header");
        const hasBody = hasDescription || hasDefaultSlot;
        return (0, _lit.html)`<div ${(0, _refJs.ref)(this.overlayRef)} part="overlay" class="overlay" @click="${this.onOverlayClick}" tabindex="-1"></div><div ${(0, _refJs.ref)(this.panelRef)} part="panel" class="panel ${(0, _classMapJs.classMap)({
            "has-icon": hasIcon,
            "has-description": hasDescription,
            "has-default": hasDefaultSlot
        })}" tabindex="0">${(0, _whenJs.when)(hasHeader, ()=>(0, _lit.html)`<slot name="header" part="header" class="header">${(0, _whenJs.when)(hasIcon, ()=>this.renderIcon())} ${(0, _whenJs.when)(hasHeadline, ()=>this.renderHeadline())}</slot>`)} ${(0, _whenJs.when)(hasBody, ()=>(0, _lit.html)`<div ${(0, _refJs.ref)(this.bodyRef)} part="body" class="body">${(0, _whenJs.when)(hasDescription, ()=>this.renderDescription())}<slot></slot></div>`)} ${(0, _whenJs.when)(hasActionSlot, ()=>(0, _lit.html)`<slot name="action" part="action" class="action"></slot>`)}</div>`;
    }
    onOverlayClick() {
        this.emit("overlay-click");
        if (!this.closeOnOverlayClick) return;
        this.open = false;
    }
    renderIcon() {
        return (0, _lit.html)`<slot name="icon" part="icon" class="icon">${this.icon ? (0, _lit.html)`<mdui-icon name="${this.icon}"></mdui-icon>` : (0, _templateJs.nothingTemplate)}</slot>`;
    }
    renderHeadline() {
        return (0, _lit.html)`<slot name="headline" part="headline" class="headline">${this.headline}</slot>`;
    }
    renderDescription() {
        return (0, _lit.html)`<slot name="description" part="description" class="description">${this.description}</slot>`;
    }
};
Dialog.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _styleJs.style)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Dialog.prototype, "icon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Dialog.prototype, "headline", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Dialog.prototype, "description", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Dialog.prototype, "open", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Dialog.prototype, "fullscreen", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter),
        attribute: "close-on-esc"
    })
], Dialog.prototype, "closeOnEsc", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter),
        attribute: "close-on-overlay-click"
    })
], Dialog.prototype, "closeOnOverlayClick", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter),
        attribute: "stacked-actions"
    })
], Dialog.prototype, "stackedActions", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.queryAssignedElements)({
        slot: "header",
        selector: "mdui-top-app-bar",
        flatten: true
    })
], Dialog.prototype, "topAppBarElements", void 0);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("open")
], Dialog.prototype, "onOpenChange", null);
Dialog = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-dialog")
], Dialog);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/class-map.js":"jiVKL","lit/directives/ref.js":"eKwmp","lit/directives/when.js":"5IbUr","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/controllers/defined.js":"9Omrp","@mdui/shared/controllers/has-slot.js":"cARnY","@mdui/shared/decorators/watch.js":"20Qzb","@mdui/shared/helpers/animate.js":"abZbA","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/helpers/modal.js":"jo62G","@mdui/shared/helpers/motion.js":"3ZuTY","@mdui/shared/helpers/scroll.js":"2m60Y","@mdui/shared/helpers/template.js":"7SHVu","@mdui/shared/lit-styles/component-style.js":"jFNMX","../icon.js":"6YN4l","./style.js":"7vjdD","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5IbUr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _whenJs = require("lit-html/directives/when.js");
parcelHelpers.exportAll(_whenJs, exports);

},{"lit-html/directives/when.js":"lm1WX","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lm1WX":[function(require,module,exports) {
/**
 * @license
 * Copyright 2021 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "when", ()=>n);
function n(n, r, t) {
    return n ? r(n) : t?.(n);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"abZbA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "animateTo", ()=>animateTo);
parcelHelpers.export(exports, "stopAnimations", ()=>stopAnimations);
var _helperJs = require("@mdui/jq/shared/helper.js");
function animateTo(el, keyframes, options) {
    if (!el) return Promise.resolve();
    return new Promise((resolve)=>{
        if (options.duration === Infinity) throw new Error("Promise-based animations must be finite.");
        if ((0, _helperJs.isNumber)(options.duration) && isNaN(options.duration)) options.duration = 0;
        if (options.easing === "") options.easing = "linear";
        const animation = el.animate(keyframes, options);
        animation.addEventListener("cancel", resolve, {
            once: true
        });
        animation.addEventListener("finish", resolve, {
            once: true
        });
    });
}
function stopAnimations(el) {
    if (!el) return Promise.resolve();
    return Promise.all(el.getAnimations().map((animation)=>{
        return new Promise((resolve)=>{
            const handleAnimationEvent = requestAnimationFrame(resolve);
            animation.addEventListener("cancel", ()=>handleAnimationEvent, {
                once: true
            });
            animation.addEventListener("finish", ()=>handleAnimationEvent, {
                once: true
            });
            animation.cancel();
        });
    }));
}

},{"@mdui/jq/shared/helper.js":"4D489","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jo62G":[function(require,module,exports) {
/** https://github.com/shoelace-style/shoelace/blob/next/src/internal/modal.ts */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Modal", ()=>Modal);
var _tabbableJs = require("./tabbable.js");
let activeModals = [];
class Modal {
    constructor(element){
        this.tabDirection = "forward";
        this.element = element;
        this.handleFocusIn = this.handleFocusIn.bind(this);
        this.handleKeyDown = this.handleKeyDown.bind(this);
        this.handleKeyUp = this.handleKeyUp.bind(this);
    }
    activate() {
        activeModals.push(this.element);
        document.addEventListener("focusin", this.handleFocusIn);
        document.addEventListener("keydown", this.handleKeyDown);
        document.addEventListener("keyup", this.handleKeyUp);
    }
    deactivate() {
        activeModals = activeModals.filter((modal)=>modal !== this.element);
        document.removeEventListener("focusin", this.handleFocusIn);
        document.removeEventListener("keydown", this.handleKeyDown);
        document.removeEventListener("keyup", this.handleKeyUp);
    }
    isActive() {
        // The "active" modal is always the most recent one shown
        return activeModals[activeModals.length - 1] === this.element;
    }
    checkFocus() {
        if (this.isActive()) {
            if (!this.element.matches(":focus-within")) {
                const { start, end } = (0, _tabbableJs.getTabbableBoundary)(this.element);
                const target = this.tabDirection === "forward" ? start : end;
                if (typeof target?.focus === "function") target.focus({
                    preventScroll: true
                });
            }
        }
    }
    handleFocusIn() {
        this.checkFocus();
    }
    handleKeyDown(event) {
        if (event.key === "Tab" && event.shiftKey) this.tabDirection = "backward";
        // Ensure focus remains trapped after they key is pressed
        requestAnimationFrame(()=>this.checkFocus());
    }
    handleKeyUp() {
        this.tabDirection = "forward";
    }
}

},{"./tabbable.js":"6qf72","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6qf72":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Returns the first and last bounding elements that are tabbable. This is more performant than checking every single
 * element because it short-circuits after finding the first and last ones.
 */ parcelHelpers.export(exports, "getTabbableBoundary", ()=>getTabbableBoundary);
var _ssrWindow = require("ssr-window");
/** https://github.com/shoelace-style/shoelace/blob/next/src/internal/tabbable.ts */ /** Determines if the specified element is tabbable using heuristics inspired by https://github.com/focus-trap/tabbable */ function isTabbable(el) {
    const window = (0, _ssrWindow.getWindow)();
    const localName = el.localName;
    // Elements with a -1 tab index are not tabbable
    if (el.getAttribute("tabindex") === "-1") return false;
    // Elements with a disabled attribute are not tabbable
    if (el.hasAttribute("disabled")) return false;
    // Elements with aria-disabled are not tabbable
    if (el.hasAttribute("aria-disabled") && el.getAttribute("aria-disabled") !== "false") return false;
    // Radios without a checked attribute are not tabbable
    if (localName === "input" && el.getAttribute("type") === "radio" && !el.hasAttribute("checked")) return false;
    // Elements that are hidden have no offsetParent and are not tabbable
    if (el.offsetParent === null) return false;
    // Elements without visibility are not tabbable
    if (window.getComputedStyle(el).visibility === "hidden") return false;
    // Audio and video elements with the controls attribute are tabbable
    if ((localName === "audio" || localName === "video") && el.hasAttribute("controls")) return true;
    // Elements with a tabindex other than -1 are tabbable
    if (el.hasAttribute("tabindex")) return true;
    // Elements with a contenteditable attribute are tabbable
    if (el.hasAttribute("contenteditable") && el.getAttribute("contenteditable") !== "false") return true;
    // At this point, the following elements are considered tabbable
    return [
        "button",
        "input",
        "select",
        "textarea",
        "a",
        "audio",
        "video",
        "summary"
    ].includes(localName);
}
function getTabbableBoundary(root) {
    const allElements = [];
    function walk(el) {
        if (el instanceof HTMLElement) {
            allElements.push(el);
            if (el.shadowRoot !== null && el.shadowRoot.mode === "open") walk(el.shadowRoot);
        }
        const children = el.children;
        [
            ...children
        ].forEach((e)=>walk(e));
    }
    // Collect all elements including the root
    walk(root);
    // Find the first and last tabbable elements
    const start = allElements.find((el)=>isTabbable(el)) ?? null;
    const end = allElements.reverse().find((el)=>isTabbable(el)) ?? null;
    return {
        start,
        end
    };
}

},{"ssr-window":"3lyfI","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3ZuTY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getEasing", ()=>getEasing);
parcelHelpers.export(exports, "getDuration", ()=>getDuration);
var _js = require("@mdui/jq/$.js");
var _cssJs = require("@mdui/jq/methods/css.js");
const getEasing = (element, name)=>{
    const cssVariableName = `--mdui-motion-easing-${name}`;
    return (0, _js.$)(element).css(cssVariableName).trim();
};
const getDuration = (element, name)=>{
    const cssVariableName = `--mdui-motion-duration-${name}`;
    const cssValue = (0, _js.$)(element).css(cssVariableName).trim().toLowerCase();
    if (cssValue.endsWith("ms")) return parseFloat(cssValue);
    else return parseFloat(cssValue) * 1000;
};

},{"@mdui/jq/$.js":"dZx9v","@mdui/jq/methods/css.js":"lzdJz","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2m60Y":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getScrollBarSize", ()=>getScrollBarSize);
parcelHelpers.export(exports, "lockScreen", ()=>lockScreen);
parcelHelpers.export(exports, "unlockScreen", ()=>unlockScreen);
var _ssrWindow = require("ssr-window");
var _js = require("@mdui/jq/$.js");
var _addClassJs = require("@mdui/jq/methods/addClass.js");
var _appendJs = require("@mdui/jq/methods/append.js");
var _appendToJs = require("@mdui/jq/methods/appendTo.js");
var _cssJs = require("@mdui/jq/methods/css.js");
var _removeJs = require("@mdui/jq/methods/remove.js");
var _removeClassJs = require("@mdui/jq/methods/removeClass.js");
var _widthJs = require("@mdui/jq/methods/width.js");
var _helperJs = require("@mdui/jq/shared/helper.js");
// 缓存滚动条宽度
let scrollBarSizeCached;
const getScrollBarSize = (fresh)=>{
    if ((0, _helperJs.isUndefined)(document)) return 0;
    if (fresh || scrollBarSizeCached === undefined) {
        const $inner = (0, _js.$)("<div>").css({
            width: "100%",
            height: "200px"
        });
        const $outer = (0, _js.$)("<div>").css({
            position: "absolute",
            top: "0",
            left: "0",
            pointerEvents: "none",
            visibility: "hidden",
            width: "200px",
            height: "150px",
            overflow: "hidden"
        }).append($inner).appendTo(document.body);
        const widthContained = $inner[0].offsetWidth;
        $outer.css("overflow", "scroll");
        let widthScroll = $inner[0].offsetWidth;
        if (widthContained === widthScroll) widthScroll = $outer[0].clientWidth;
        $outer.remove();
        scrollBarSizeCached = widthContained - widthScroll;
    }
    return scrollBarSizeCached;
};
const lockMap = new WeakMap();
const className = "mdui-lock-screen";
const lockScreen = (source, target)=>{
    const document1 = (0, _ssrWindow.getDocument)();
    target ??= document1.body;
    if (!lockMap.has(target)) lockMap.set(target, new Set());
    const lock = lockMap.get(target);
    lock.add(source);
    (0, _js.$)(target).addClass(className).css("width", `calc(100% - ${getScrollBarSize()}px)`);
};
const unlockScreen = (source, target)=>{
    const document1 = (0, _ssrWindow.getDocument)();
    target ??= document1.body;
    const lock = lockMap.get(target);
    if (!lock) return;
    lock.delete(source);
    if (lock.size === 0) {
        lockMap.delete(target);
        (0, _js.$)(target).removeClass(className).width("");
    }
};

},{"ssr-window":"3lyfI","@mdui/jq/$.js":"dZx9v","@mdui/jq/methods/addClass.js":"eBNUW","@mdui/jq/methods/append.js":"948yF","@mdui/jq/methods/appendTo.js":"gOUbd","@mdui/jq/methods/css.js":"lzdJz","@mdui/jq/methods/remove.js":"eOqqE","@mdui/jq/methods/removeClass.js":"iF0be","@mdui/jq/methods/width.js":"4wNQJ","@mdui/jq/shared/helper.js":"4D489","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7vjdD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "style", ()=>style);
var _lit = require("lit");
const style = (0, _lit.css)`:host{--shape-corner:var(--mdui-shape-corner-extra-large);--z-index:2300;position:fixed;z-index:var(--z-index);display:none;align-items:center;justify-content:center;inset:0;padding:3rem}::slotted(mdui-top-app-bar[slot=header]){position:absolute;border-top-left-radius:var(--mdui-shape-corner-extra-large);border-top-right-radius:var(--mdui-shape-corner-extra-large);background-color:rgb(var(--mdui-color-surface-container-high))}:host([fullscreen]){--shape-corner:var(--mdui-shape-corner-none);padding:0}:host([fullscreen]) ::slotted(mdui-top-app-bar[slot=header]){border-top-left-radius:var(--mdui-shape-corner-none);border-top-right-radius:var(--mdui-shape-corner-none)}.overlay{position:fixed;inset:0;background-color:rgba(var(--mdui-color-scrim),.4)}.panel{position:relative;display:flex;flex-direction:column;max-height:100%;border-radius:var(--shape-corner);outline:0;transform-origin:top;min-width:17.5rem;max-width:35rem;padding:1.5rem;background-color:rgb(var(--mdui-color-surface-container-high));box-shadow:var(--mdui-elevation-level3)}:host([fullscreen]) .panel{width:100%;max-width:100%;height:100%;max-height:100%;box-shadow:var(--mdui-elevation-level0)}.header{display:flex;flex-direction:column}.has-icon .header{align-items:center}.icon{display:flex;color:rgb(var(--mdui-color-secondary));font-size:1.5rem}.icon mdui-icon,::slotted([slot=icon]){font-size:inherit}.headline{display:flex;color:rgb(var(--mdui-color-on-surface));font-size:var(--mdui-typescale-headline-small-size);font-weight:var(--mdui-typescale-headline-small-weight);letter-spacing:var(--mdui-typescale-headline-small-tracking);line-height:var(--mdui-typescale-headline-small-line-height)}.icon+.headline{padding-top:1rem}.body{overflow:auto}.header+.body{margin-top:1rem}.description{display:flex;color:rgb(var(--mdui-color-on-surface-variant));font-size:var(--mdui-typescale-body-medium-size);font-weight:var(--mdui-typescale-body-medium-weight);letter-spacing:var(--mdui-typescale-body-medium-tracking);line-height:var(--mdui-typescale-body-medium-line-height)}:host([fullscreen]) .description{color:rgb(var(--mdui-color-on-surface))}.has-description.has-default .description{margin-bottom:1rem}.action{display:flex;justify-content:flex-end;padding-top:1.5rem}.action::slotted(:not(:first-child)){margin-left:.5rem}:host([stacked-actions]) .action{flex-direction:column;align-items:end}:host([stacked-actions]) .action::slotted(:not(:first-child)){margin-left:0;margin-top:.5rem}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bIBbV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./divider/index.js");
parcelHelpers.exportAll(_indexJs, exports);

},{"./divider/index.js":"ati7s","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ati7s":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Divider", ()=>Divider);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _styleJs = require("./style.js");
/**
 * @summary 分割线组件
 *
 * ```html
 * <mdui-divider></mdui-divider>
 * ```
 */ let Divider = class Divider extends (0, _mduiElementJs.MduiElement) {
    constructor(){
        super(...arguments);
        /**
         * 是否显示垂直分割线
         */ this.vertical = false;
        /**
         * 是否左侧缩进
         */ this.inset = false;
        /**
         * 是否左右两侧缩进
         */ this.middle = false;
    }
    render() {
        return (0, _lit.html)``;
    }
};
Divider.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _styleJs.style)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Divider.prototype, "vertical", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Divider.prototype, "inset", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Divider.prototype, "middle", void 0);
Divider = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-divider")
], Divider);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/lit-styles/component-style.js":"jFNMX","./style.js":"1YHqN","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1YHqN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "style", ()=>style);
var _lit = require("lit");
const style = (0, _lit.css)`:host{display:block;height:.0625rem;background-color:rgb(var(--mdui-color-surface-variant))}:host([inset]){margin-left:1rem}:host([middle]){margin-left:1rem;margin-right:1rem}:host([vertical]){height:100%;width:.0625rem}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"buAB1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./dropdown/index.js");
parcelHelpers.exportAll(_indexJs, exports);

},{"./dropdown/index.js":"5AKMR","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5AKMR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Dropdown", ()=>Dropdown);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _refJs = require("lit/directives/ref.js");
var _dom = require("@floating-ui/utils/dom");
var _js = require("@mdui/jq/$.js");
var _heightJs = require("@mdui/jq/methods/height.js");
var _isJs = require("@mdui/jq/methods/is.js");
var _widthJs = require("@mdui/jq/methods/width.js");
var _helperJs = require("@mdui/jq/shared/helper.js");
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _definedJs = require("@mdui/shared/controllers/defined.js");
var _watchJs = require("@mdui/shared/decorators/watch.js");
var _animateJs = require("@mdui/shared/helpers/animate.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _motionJs = require("@mdui/shared/helpers/motion.js");
var _observeResizeJs = require("@mdui/shared/helpers/observeResize.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _styleJs = require("./style.js");
/**
 * @summary 下拉组件
 *
 * ```html
 * <mdui-dropdown>
 * ..<mdui-button slot="trigger">open dropdown</mdui-button>
 * ..<mdui-menu>
 * ....<mdui-menu-item>Item 1</mdui-menu-item>
 * ....<mdui-menu-item>Item 2</mdui-menu-item>
 * ..</mdui-menu>
 * </mdui-dropdown>
 * ```
 *
 * @event open - dropdown 开始打开时，事件被触发。可以通过调用 `event.preventDefault()` 阻止 dropdown 打开
 * @event opened - dropdown 打开动画完成时，事件被触发
 * @event close - dropdown 开始关闭时，事件被触发。可以通过调用 `event.preventDefault()` 阻止 dropdown 关闭
 * @event closed - dropdown 关闭动画完成时，事件被触发
 *
 * @slot - dropdown 的内容
 * @slot trigger - 触发 dropdown 的元素，例如 [`<mdui-button>`](/docs/2/components/button) 元素
 *
 * @csspart trigger - 触发 dropdown 的元素的容器，即 `trigger` slot 的容器
 * @csspart panel - dropdown 内容的容器
 *
 * @cssprop --z-index - 组件的 CSS 的 `z-index` 值
 */ let Dropdown = class Dropdown extends (0, _mduiElementJs.MduiElement) {
    constructor(){
        super();
        /**
         * dropdown 是否打开
         */ this.open = false;
        /**
         * 是否禁用 dropdown
         */ this.disabled = false;
        /**
         * dropdown 的触发方式，支持传入多个值，用空格分隔。可选值为：
         *
         * * `click`：点击时触发
         * * `hover`：鼠标悬浮触发
         * * `focus`：聚焦时触发
         * * `contextmenu`：鼠标右键点击、或触摸长按时触发
         * * `manual`：使用了该值时，只能使用编程方式打开和关闭 dropdown，且不能再指定其他触发方式
         */ this.trigger = "click";
        /**
         * dropdown 内容的位置。可选值为：
         *
         * * `auto`：自动判断位置
         * * `top-start`：位于上方，且左对齐
         * * `top`：位于上方，且居中对齐
         * * `top-end`：位于上方，且右对齐
         * * `bottom-start`：位于下方，且左对齐
         * * `bottom`：位于下方，且居中对齐
         * * `bottom-end`：位于下方，且右对齐
         * * `left-start`：位于左侧，且顶部对齐
         * * `left`：位于左侧，且居中对齐
         * * `left-end`：位于左侧，且底部对齐
         * * `right-start`：位于右侧，且顶部对齐
         * * `right`：位于右侧，且居中对齐
         * * `right-end`：位于右侧，且底部对齐
         */ this.placement = "auto";
        /**
         * 在点击 [`<mdui-menu-item>`](/docs/2/components/menu#menu-item-api) 元素后，是否仍保持 dropdown 为打开状态
         */ this.stayOpenOnClick = false;
        /**
         * 通过 hover 触发 dropdown 打开时的延时，单位为毫秒
         */ this.openDelay = 150;
        /**
         * 通过 hover 触发 dropdown 关闭时的延时，单位为毫秒
         */ this.closeDelay = 150;
        /**
         * 是否在触发 dropdown 时的光标所在的位置打开 dropdown。通常用于在打开鼠标右键菜单时使用
         */ this.openOnPointer = false;
        this.panelRef = (0, _refJs.createRef)();
        this.definedController = new (0, _definedJs.DefinedController)(this, {
            relatedElements: [
                ""
            ]
        });
        this.onDocumentClick = this.onDocumentClick.bind(this);
        this.onDocumentKeydown = this.onDocumentKeydown.bind(this);
        this.onWindowScroll = this.onWindowScroll.bind(this);
        this.onMouseLeave = this.onMouseLeave.bind(this);
        this.onFocus = this.onFocus.bind(this);
        this.onClick = this.onClick.bind(this);
        this.onContextMenu = this.onContextMenu.bind(this);
        this.onMouseEnter = this.onMouseEnter.bind(this);
        this.onPanelClick = this.onPanelClick.bind(this);
    }
    get triggerElement() {
        return this.triggerElements[0];
    }
    // 这些属性变更时，需要更新样式
    async onPositionChange() {
        // 如果是打开状态，则更新 panel 的位置
        if (this.open) {
            await this.definedController.whenDefined();
            this.updatePositioner();
        }
    }
    async onOpenChange() {
        const hasUpdated = this.hasUpdated;
        // 默认为关闭状态。因此首次渲染时，且为关闭状态，不执行
        if (!this.open && !hasUpdated) return;
        await this.definedController.whenDefined();
        if (!hasUpdated) await this.updateComplete;
        const easingLinear = (0, _motionJs.getEasing)(this, "linear");
        const easingEmphasizedDecelerate = (0, _motionJs.getEasing)(this, "emphasized-decelerate");
        const easingEmphasizedAccelerate = (0, _motionJs.getEasing)(this, "emphasized-accelerate");
        // 打开
        // 要区分是否首次渲染，首次渲染时不触发事件，不执行动画；非首次渲染，触发事件，执行动画
        if (this.open) {
            if (hasUpdated) {
                const eventProceeded = this.emit("open", {
                    cancelable: true
                });
                if (!eventProceeded) return;
            }
            // dropdown 打开时，尝试把焦点放到 panel 中
            const focusablePanel = this.panelElements.find((panel)=>(0, _helperJs.isFunction)(panel.focus));
            setTimeout(()=>{
                focusablePanel?.focus();
            });
            const duration = (0, _motionJs.getDuration)(this, "medium4");
            await (0, _animateJs.stopAnimations)(this.panelRef.value);
            this.panelRef.value.hidden = false;
            this.updatePositioner();
            await Promise.all([
                (0, _animateJs.animateTo)(this.panelRef.value, [
                    {
                        transform: `${this.getCssScaleName()}(0.45)`
                    },
                    {
                        transform: `${this.getCssScaleName()}(1)`
                    }
                ], {
                    duration: hasUpdated ? duration : 0,
                    easing: easingEmphasizedDecelerate
                }),
                (0, _animateJs.animateTo)(this.panelRef.value, [
                    {
                        opacity: 0
                    },
                    {
                        opacity: 1,
                        offset: 0.125
                    },
                    {
                        opacity: 1
                    }
                ], {
                    duration: hasUpdated ? duration : 0,
                    easing: easingLinear
                })
            ]);
            if (hasUpdated) this.emit("opened");
        } else {
            const eventProceeded = this.emit("close", {
                cancelable: true
            });
            if (!eventProceeded) return;
            // dropdown 关闭时，如果不支持 focus 触发，且焦点在 dropdown 内，则焦点回到 trigger 上
            if (!this.hasTrigger("focus") && (0, _helperJs.isFunction)(this.triggerElement?.focus) && (this.contains(document.activeElement) || this.contains(document.activeElement?.assignedSlot ?? null))) this.triggerElement.focus();
            const duration = (0, _motionJs.getDuration)(this, "short4");
            await (0, _animateJs.stopAnimations)(this.panelRef.value);
            await Promise.all([
                (0, _animateJs.animateTo)(this.panelRef.value, [
                    {
                        transform: `${this.getCssScaleName()}(1)`
                    },
                    {
                        transform: `${this.getCssScaleName()}(0.45)`
                    }
                ], {
                    duration,
                    easing: easingEmphasizedAccelerate
                }),
                (0, _animateJs.animateTo)(this.panelRef.value, [
                    {
                        opacity: 1
                    },
                    {
                        opacity: 1,
                        offset: 0.875
                    },
                    {
                        opacity: 0
                    }
                ], {
                    duration,
                    easing: easingLinear
                })
            ]);
            // 可能关闭 dropdown 时该元素已经不存在了（比如页面直接跳转了）
            if (this.panelRef.value) this.panelRef.value.hidden = true;
            this.emit("closed");
        }
    }
    connectedCallback() {
        super.connectedCallback();
        this.definedController.whenDefined().then(()=>{
            document.addEventListener("pointerdown", this.onDocumentClick);
            document.addEventListener("keydown", this.onDocumentKeydown);
            this.overflowAncestors = (0, _dom.getOverflowAncestors)(this.triggerElement);
            this.overflowAncestors.forEach((ancestor)=>{
                ancestor.addEventListener("scroll", this.onWindowScroll);
            });
        });
    }
    disconnectedCallback() {
        super.disconnectedCallback();
        document.removeEventListener("pointerdown", this.onDocumentClick);
        document.removeEventListener("keydown", this.onDocumentKeydown);
        this.overflowAncestors?.forEach((ancestor)=>{
            ancestor.removeEventListener("scroll", this.onWindowScroll);
        });
        this.observeResize?.unobserve();
    }
    firstUpdated(changedProperties) {
        super.firstUpdated(changedProperties);
        this.addEventListener("mouseleave", this.onMouseLeave);
        this.definedController.whenDefined().then(()=>{
            this.triggerElement.addEventListener("focus", this.onFocus);
            this.triggerElement.addEventListener("click", this.onClick);
            this.triggerElement.addEventListener("contextmenu", this.onContextMenu);
            this.triggerElement.addEventListener("mouseenter", this.onMouseEnter);
            // triggerElement 的尺寸变化时，重新调整 panel 的位置
            this.observeResize = (0, _observeResizeJs.observeResize)(this.triggerElement, ()=>{
                this.updatePositioner();
            });
        });
    }
    render() {
        return (0, _lit.html)`<slot name="trigger" part="trigger" class="trigger"></slot><slot ${(0, _refJs.ref)(this.panelRef)} part="panel" class="panel" hidden @click="${this.onPanelClick}"></slot>`;
    }
    /**
     * 获取 dropdown 打开、关闭动画的 CSS scaleX 或 scaleY
     */ getCssScaleName() {
        return this.animateDirection === "horizontal" ? "scaleX" : "scaleY";
    }
    /**
     * 在 document 上点击时，根据条件判断是否要关闭 dropdown
     */ onDocumentClick(e) {
        if (this.disabled || !this.open) return;
        const path = e.composedPath();
        // 点击 dropdown 外部区域，直接关闭
        if (!path.includes(this)) this.open = false;
        // 当包含 contextmenu 且不包含 click 时，点击 trigger，关闭
        if (this.hasTrigger("contextmenu") && !this.hasTrigger("click") && path.includes(this.triggerElement)) this.open = false;
    }
    /**
     * 在 document 上按下按键时，根据条件判断是否要关闭 dropdown
     */ onDocumentKeydown(event) {
        if (this.disabled || !this.open) return;
        // 按下 ESC 键时，关闭 dropdown
        if (event.key === "Escape") {
            this.open = false;
            return;
        }
        // 按下 Tab 键时，关闭 dropdown
        if (event.key === "Tab") {
            // 如果不支持 focus 触发，则焦点回到 trigger 上（这个会在 onOpenChange 中执行 ）这里只需阻止默认的 Tab 行为
            if (!this.hasTrigger("focus") && (0, _helperJs.isFunction)(this.triggerElement?.focus)) event.preventDefault();
            this.open = false;
        }
    }
    onWindowScroll() {
        window.requestAnimationFrame(()=>this.onPositionChange());
    }
    hasTrigger(trigger) {
        const triggers = this.trigger.split(" ");
        return triggers.includes(trigger);
    }
    onFocus() {
        if (this.disabled || this.open || !this.hasTrigger("focus")) return;
        this.open = true;
    }
    onClick(e) {
        // e.button 为 0 时，为鼠标左键点击。忽略鼠标中间和右键
        if (this.disabled || e.button || !this.hasTrigger("click")) return;
        // 支持 hover 或 focus 触发时，点击时，不关闭 dropdown
        if (this.open && (this.hasTrigger("hover") || this.hasTrigger("focus"))) return;
        this.pointerOffsetX = e.offsetX;
        this.pointerOffsetY = e.offsetY;
        this.open = !this.open;
    }
    onPanelClick(e) {
        if (!this.disabled && !this.stayOpenOnClick && (0, _js.$)(e.target).is("mdui-menu-item")) this.open = false;
    }
    onContextMenu(e) {
        if (this.disabled || !this.hasTrigger("contextmenu")) return;
        e.preventDefault();
        this.pointerOffsetX = e.offsetX;
        this.pointerOffsetY = e.offsetY;
        this.open = true;
    }
    onMouseEnter() {
        // 不做 open 状态的判断，因为可以延时打开和关闭
        if (this.disabled || !this.hasTrigger("hover")) return;
        window.clearTimeout(this.closeTimeout);
        if (this.openDelay) this.openTimeout = window.setTimeout(()=>{
            this.open = true;
        }, this.openDelay);
        else this.open = true;
    }
    onMouseLeave() {
        // 不做 open 状态的判断，因为可以延时打开和关闭
        if (this.disabled || !this.hasTrigger("hover")) return;
        window.clearTimeout(this.openTimeout);
        this.closeTimeout = window.setTimeout(()=>{
            this.open = false;
        }, this.closeDelay || 50);
    }
    // 更新 panel 的位置
    updatePositioner() {
        const $panel = (0, _js.$)(this.panelRef.value);
        const $window = (0, _js.$)(window);
        const panelElements = this.panelElements;
        const panelRect = {
            width: Math.max(...panelElements?.map((panel)=>panel.offsetWidth) ?? []),
            height: panelElements?.map((panel)=>panel.offsetHeight).reduce((total, height)=>total + height, 0)
        };
        // 在光标位置触发时，假设 triggerElement 的宽高为 0，位置位于光标位置
        const triggerClientRect = this.triggerElement.getBoundingClientRect();
        const triggerRect = this.openOnPointer ? {
            top: this.pointerOffsetY + triggerClientRect.top,
            left: this.pointerOffsetX + triggerClientRect.left,
            width: 0,
            height: 0
        } : triggerClientRect;
        // dropdown 与屏幕边界至少保留 8px 间距
        const screenMargin = 8;
        let transformOriginX;
        let transformOriginY;
        let top;
        let left;
        let placement = this.placement;
        // 自动判断 dropdown 的方位
        // 优先级为 bottom>top>right>left，start>center>end
        if (placement === "auto") {
            const windowWidth = $window.width();
            const windowHeight = $window.height();
            let position;
            let alignment;
            if (windowHeight - triggerRect.top - triggerRect.height > panelRect.height + screenMargin) // 下方放得下，放下方
            position = "bottom";
            else if (triggerRect.top > panelRect.height + screenMargin) // 上方放得下，放上方
            position = "top";
            else if (windowWidth - triggerRect.left - triggerRect.width > panelRect.width + screenMargin) // 右侧放得下，放右侧
            position = "right";
            else if (triggerRect.left > panelRect.width + screenMargin) // 左侧放得下，放左侧
            position = "left";
            else // 默认放下方
            position = "bottom";
            if ([
                "top",
                "bottom"
            ].includes(position)) {
                if (windowWidth - triggerRect.left > panelRect.width + screenMargin) // 左对齐放得下，左对齐
                alignment = "start";
                else if (triggerRect.left + triggerRect.width / 2 > panelRect.width / 2 + screenMargin && windowWidth - triggerRect.left - triggerRect.width / 2 > panelRect.width / 2 + screenMargin) // 居中对齐放得下，居中对齐
                alignment = undefined;
                else if (triggerRect.left + triggerRect.width > panelRect.width + screenMargin) // 右对齐放得下，右对齐
                alignment = "end";
                else // 默认左对齐
                alignment = "start";
            } else {
                if (windowHeight - triggerRect.top > panelRect.height + screenMargin) // 顶部对齐放得下，顶部对齐
                alignment = "start";
                else if (triggerRect.top + triggerRect.height / 2 > panelRect.height / 2 + screenMargin && windowHeight - triggerRect.top - triggerRect.height / 2 > panelRect.height / 2 + screenMargin) // 居中对齐放得下，居中对齐
                alignment = undefined;
                else if (triggerRect.top + triggerRect.height > panelRect.height + screenMargin) // 底部对齐放得下，底部对齐
                alignment = "end";
                else // 默认顶部对齐
                alignment = "start";
            }
            placement = alignment ? [
                position,
                alignment
            ].join("-") : position;
        }
        // 根据 placement 计算 panel 的位置和方向
        const [position, alignment] = placement.split("-");
        this.animateDirection = [
            "top",
            "bottom"
        ].includes(position) ? "vertical" : "horizontal";
        switch(position){
            case "top":
                transformOriginY = "bottom";
                top = triggerRect.top - panelRect.height;
                break;
            case "bottom":
                transformOriginY = "top";
                top = triggerRect.top + triggerRect.height;
                break;
            default:
                transformOriginY = "center";
                switch(alignment){
                    case "start":
                        top = triggerRect.top;
                        break;
                    case "end":
                        top = triggerRect.top + triggerRect.height - panelRect.height;
                        break;
                    default:
                        top = triggerRect.top + triggerRect.height / 2 - panelRect.height / 2;
                        break;
                }
                break;
        }
        switch(position){
            case "left":
                transformOriginX = "right";
                left = triggerRect.left - panelRect.width;
                break;
            case "right":
                transformOriginX = "left";
                left = triggerRect.left + triggerRect.width;
                break;
            default:
                transformOriginX = "center";
                switch(alignment){
                    case "start":
                        left = triggerRect.left;
                        break;
                    case "end":
                        left = triggerRect.left + triggerRect.width - panelRect.width;
                        break;
                    default:
                        left = triggerRect.left + triggerRect.width / 2 - panelRect.width / 2;
                        break;
                }
                break;
        }
        $panel.css({
            top,
            left,
            transformOrigin: [
                transformOriginX,
                transformOriginY
            ].join(" ")
        });
    }
};
Dropdown.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _styleJs.style)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Dropdown.prototype, "open", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Dropdown.prototype, "disabled", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Dropdown.prototype, "trigger", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Dropdown.prototype, "placement", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter),
        attribute: "stay-open-on-click"
    })
], Dropdown.prototype, "stayOpenOnClick", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Number,
        reflect: true,
        attribute: "open-delay"
    })
], Dropdown.prototype, "openDelay", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Number,
        reflect: true,
        attribute: "close-delay"
    })
], Dropdown.prototype, "closeDelay", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter),
        attribute: "open-on-pointer"
    })
], Dropdown.prototype, "openOnPointer", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.queryAssignedElements)({
        slot: "trigger",
        flatten: true
    })
], Dropdown.prototype, "triggerElements", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.queryAssignedElements)({
        flatten: true
    })
], Dropdown.prototype, "panelElements", void 0);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("placement", true),
    (0, _watchJs.watch)("openOnPointer", true)
], Dropdown.prototype, "onPositionChange", null);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("open")
], Dropdown.prototype, "onOpenChange", null);
Dropdown = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-dropdown")
], Dropdown);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/ref.js":"eKwmp","@floating-ui/utils/dom":"iv7Ca","@mdui/jq/$.js":"dZx9v","@mdui/jq/methods/height.js":"4Py39","@mdui/jq/methods/is.js":"iN2DI","@mdui/jq/methods/width.js":"4wNQJ","@mdui/jq/shared/helper.js":"4D489","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/controllers/defined.js":"9Omrp","@mdui/shared/decorators/watch.js":"20Qzb","@mdui/shared/helpers/animate.js":"abZbA","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/helpers/motion.js":"3ZuTY","@mdui/shared/helpers/observeResize.js":"fLGE3","@mdui/shared/lit-styles/component-style.js":"jFNMX","./style.js":"5r7cA","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iv7Ca":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getComputedStyle", ()=>getComputedStyle);
parcelHelpers.export(exports, "getContainingBlock", ()=>getContainingBlock);
parcelHelpers.export(exports, "getDocumentElement", ()=>getDocumentElement);
parcelHelpers.export(exports, "getNearestOverflowAncestor", ()=>getNearestOverflowAncestor);
parcelHelpers.export(exports, "getNodeName", ()=>getNodeName);
parcelHelpers.export(exports, "getNodeScroll", ()=>getNodeScroll);
parcelHelpers.export(exports, "getOverflowAncestors", ()=>getOverflowAncestors);
parcelHelpers.export(exports, "getParentNode", ()=>getParentNode);
parcelHelpers.export(exports, "getWindow", ()=>getWindow);
parcelHelpers.export(exports, "isContainingBlock", ()=>isContainingBlock);
parcelHelpers.export(exports, "isElement", ()=>isElement);
parcelHelpers.export(exports, "isHTMLElement", ()=>isHTMLElement);
parcelHelpers.export(exports, "isLastTraversableNode", ()=>isLastTraversableNode);
parcelHelpers.export(exports, "isNode", ()=>isNode);
parcelHelpers.export(exports, "isOverflowElement", ()=>isOverflowElement);
parcelHelpers.export(exports, "isShadowRoot", ()=>isShadowRoot);
parcelHelpers.export(exports, "isTableElement", ()=>isTableElement);
parcelHelpers.export(exports, "isWebKit", ()=>isWebKit);
function getNodeName(node) {
    if (isNode(node)) return (node.nodeName || "").toLowerCase();
    // Mocked nodes in testing environments may not be instances of Node. By
    // returning `#document` an infinite loop won't occur.
    // https://github.com/floating-ui/floating-ui/issues/2317
    return "#document";
}
function getWindow(node) {
    var _node$ownerDocument;
    return (node == null ? void 0 : (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;
}
function getDocumentElement(node) {
    var _ref;
    return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;
}
function isNode(value) {
    return value instanceof Node || value instanceof getWindow(value).Node;
}
function isElement(value) {
    return value instanceof Element || value instanceof getWindow(value).Element;
}
function isHTMLElement(value) {
    return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;
}
function isShadowRoot(value) {
    // Browsers without `ShadowRoot` support.
    if (typeof ShadowRoot === "undefined") return false;
    return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;
}
function isOverflowElement(element) {
    const { overflow, overflowX, overflowY, display } = getComputedStyle(element);
    return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && ![
        "inline",
        "contents"
    ].includes(display);
}
function isTableElement(element) {
    return [
        "table",
        "td",
        "th"
    ].includes(getNodeName(element));
}
function isContainingBlock(element) {
    const webkit = isWebKit();
    const css = getComputedStyle(element);
    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block
    return css.transform !== "none" || css.perspective !== "none" || (css.containerType ? css.containerType !== "normal" : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== "none" : false) || !webkit && (css.filter ? css.filter !== "none" : false) || [
        "transform",
        "perspective",
        "filter"
    ].some((value)=>(css.willChange || "").includes(value)) || [
        "paint",
        "layout",
        "strict",
        "content"
    ].some((value)=>(css.contain || "").includes(value));
}
function getContainingBlock(element) {
    let currentNode = getParentNode(element);
    while(isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)){
        if (isContainingBlock(currentNode)) return currentNode;
        else currentNode = getParentNode(currentNode);
    }
    return null;
}
function isWebKit() {
    if (typeof CSS === "undefined" || !CSS.supports) return false;
    return CSS.supports("-webkit-backdrop-filter", "none");
}
function isLastTraversableNode(node) {
    return [
        "html",
        "body",
        "#document"
    ].includes(getNodeName(node));
}
function getComputedStyle(element) {
    return getWindow(element).getComputedStyle(element);
}
function getNodeScroll(element) {
    if (isElement(element)) return {
        scrollLeft: element.scrollLeft,
        scrollTop: element.scrollTop
    };
    return {
        scrollLeft: element.pageXOffset,
        scrollTop: element.pageYOffset
    };
}
function getParentNode(node) {
    if (getNodeName(node) === "html") return node;
    const result = // Step into the shadow DOM of the parent of a slotted node.
    node.assignedSlot || // DOM Element detected.
    node.parentNode || // ShadowRoot detected.
    isShadowRoot(node) && node.host || // Fallback.
    getDocumentElement(node);
    return isShadowRoot(result) ? result.host : result;
}
function getNearestOverflowAncestor(node) {
    const parentNode = getParentNode(node);
    if (isLastTraversableNode(parentNode)) return node.ownerDocument ? node.ownerDocument.body : node.body;
    if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) return parentNode;
    return getNearestOverflowAncestor(parentNode);
}
function getOverflowAncestors(node, list, traverseIframes) {
    var _node$ownerDocument2;
    if (list === void 0) list = [];
    if (traverseIframes === void 0) traverseIframes = true;
    const scrollableAncestor = getNearestOverflowAncestor(node);
    const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);
    const win = getWindow(scrollableAncestor);
    if (isBody) return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);
    return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5r7cA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "style", ()=>style);
var _lit = require("lit");
const style = (0, _lit.css)`:host{--z-index:2100;display:contents}.panel{display:block;position:fixed;z-index:var(--z-index)}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6L4TD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./fab/index.js");
parcelHelpers.exportAll(_indexJs, exports);

},{"./fab/index.js":"1tSOU","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1tSOU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Fab", ()=>Fab);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _refJs = require("lit/directives/ref.js");
var _classcat = require("classcat");
var _classcatDefault = parcelHelpers.interopDefault(_classcat);
var _definedJs = require("@mdui/shared/controllers/defined.js");
var _hasSlotJs = require("@mdui/shared/controllers/has-slot.js");
var _watchJs = require("@mdui/shared/decorators/watch.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _delayJs = require("@mdui/shared/helpers/delay.js");
var _templateJs = require("@mdui/shared/helpers/template.js");
var _buttonBaseJs = require("../button/button-base.js");
var _iconJs = require("../icon.js");
var _styleJs = require("./style.js");
/**
 * @summary 浮动操作按钮组件
 *
 * ```html
 * <mdui-fab icon="edit"></mdui-fab>
 * ```
 *
 * @event focus - 获得焦点时触发
 * @event blur - 失去焦点时触发
 * @event invalid - 表单字段验证未通过时触发
 *
 * @slot - 文本
 * @slot icon - 图标
 *
 * @csspart button - 内部的 `button` 或 `a` 元素
 * @csspart label - 右侧的文本
 * @csspart icon - 左侧的图标
 * @csspart loading - 加载中状态的 `<mdui-circular-progress>` 元素
 *
 * @cssprop --shape-corner-small - `size="small"` 时，组件的圆角大小。可以指定一个具体的像素值；但更推荐[引用设计令牌](/docs/2/styles/design-tokens#shape-corner)
 * @cssprop --shape-corner-normal - `size="normal"` 时，组件的圆角大小。可以指定一个具体的像素值；但更推荐[引用设计令牌](/docs/2/styles/design-tokens#shape-corner)
 * @cssprop --shape-corner-large - `size="large"` 时，组件的圆角大小。可以指定一个具体的像素值；但更推荐[引用设计令牌](/docs/2/styles/design-tokens#shape-corner)
 */ let Fab = class Fab extends (0, _buttonBaseJs.ButtonBase) {
    constructor(){
        super(...arguments);
        /**
         * FAB 形状，此组件的不同形状之间只有颜色不一样。可选值为：
         *
         * * `primary`：使用 Primary container 背景色
         * * `surface`：使用 Surface container high 背景色
         * * `secondary`：使用 Secondary container 背景色
         * * `tertiary`：使用 Tertiary container 背景色
         */ this.variant = "primary";
        /**
         * FAB 大小。可选值为：
         * * `normal`：普通大小 FAB
         * * `small`：小型 FAB
         * * `large`：大型 FAB
         */ this.size = "normal";
        /**
         * 是否为展开状态
         */ this.extended = false;
        this.rippleRef = (0, _refJs.createRef)();
        this.hasSlotController = new (0, _hasSlotJs.HasSlotController)(this, "icon");
        this.definedController = new (0, _definedJs.DefinedController)(this, {
            relatedElements: [
                ""
            ]
        });
    }
    get rippleElement() {
        return this.rippleRef.value;
    }
    /**
     * extended 变更时，设置动画
     */ async onExtendedChange() {
        const hasUpdated = this.hasUpdated;
        if (this.extended) this.style.width = `${this.scrollWidth}px`;
        else this.style.width = "";
        await this.definedController.whenDefined();
        await this.updateComplete;
        if (this.extended && !hasUpdated) this.style.width = `${this.scrollWidth}px`;
        if (!hasUpdated) {
            // 延迟设置动画，避免首次渲染时也执行动画
            await (0, _delayJs.delay)();
            this.style.transitionProperty = "box-shadow, width, bottom, transform"; // bottom, transform 在 bottom-app-bar 中用到
        }
    }
    render() {
        const className = (0, _classcatDefault.default)({
            button: true,
            "has-icon": this.icon || this.hasSlotController.test("icon")
        });
        return (0, _lit.html)`<mdui-ripple ${(0, _refJs.ref)(this.rippleRef)} .noRipple="${this.noRipple}"></mdui-ripple>${this.isButton() ? this.renderButton({
            className,
            part: "button",
            content: this.renderInner()
        }) : this.disabled || this.loading ? (0, _lit.html)`<span part="button" class="_a ${className}">${this.renderInner()}</span>` : this.renderAnchor({
            className,
            part: "button",
            content: this.renderInner()
        })}`;
    }
    renderLabel() {
        return (0, _lit.html)`<slot part="label" class="label"></slot>`;
    }
    renderIcon() {
        if (this.loading) return this.renderLoading();
        return (0, _lit.html)`<slot name="icon" part="icon" class="icon">${this.icon ? (0, _lit.html)`<mdui-icon name="${this.icon}"></mdui-icon>` : (0, _templateJs.nothingTemplate)}</slot>`;
    }
    renderInner() {
        return [
            this.renderIcon(),
            this.renderLabel()
        ];
    }
};
Fab.styles = [
    (0, _buttonBaseJs.ButtonBase).styles,
    (0, _styleJs.style)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Fab.prototype, "variant", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Fab.prototype, "size", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Fab.prototype, "icon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Fab.prototype, "extended", void 0);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("extended")
], Fab.prototype, "onExtendedChange", null);
Fab = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-fab")
], Fab);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/ref.js":"eKwmp","classcat":"9ww9D","@mdui/shared/controllers/defined.js":"9Omrp","@mdui/shared/controllers/has-slot.js":"cARnY","@mdui/shared/decorators/watch.js":"20Qzb","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/helpers/delay.js":"3F3q2","@mdui/shared/helpers/template.js":"7SHVu","../button/button-base.js":"7z0Zx","../icon.js":"6YN4l","./style.js":"43ZiY","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3F3q2":[function(require,module,exports) {
/**
 * 延迟多少毫秒执行
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "delay", ()=>delay);
const delay = (duration = 0)=>{
    return new Promise((resolve)=>setTimeout(resolve, duration));
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"43ZiY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "style", ()=>style);
var _lit = require("lit");
const style = (0, _lit.css)`:host{--shape-corner-small:var(--mdui-shape-corner-small);--shape-corner-normal:var(--mdui-shape-corner-large);--shape-corner-large:var(--mdui-shape-corner-extra-large);position:relative;display:inline-block;overflow:hidden;text-align:center;border-radius:var(--shape-corner-normal);cursor:pointer;-webkit-tap-highlight-color:transparent;transition-property:box-shadow;transition-timing-function:var(--mdui-motion-easing-emphasized);transition-duration:var(--mdui-motion-duration-medium4);width:3.5rem;height:3.5rem;box-shadow:var(--mdui-elevation-level3);font-size:var(--mdui-typescale-label-large-size);font-weight:var(--mdui-typescale-label-large-weight);letter-spacing:var(--mdui-typescale-label-large-tracking);line-height:var(--mdui-typescale-label-large-line-height)}.button{padding:0 1rem}:host([size=small]) .button{padding:0 .5rem}:host([size=large]) .button{padding:0 1.875rem}:host([lowered]){box-shadow:var(--mdui-elevation-level1)}:host([focus-visible]){box-shadow:var(--mdui-elevation-level3)}:host([lowered][focus-visible]){box-shadow:var(--mdui-elevation-level1)}:host([pressed]){box-shadow:var(--mdui-elevation-level3)}:host([lowered][pressed]){box-shadow:var(--mdui-elevation-level1)}:host([hover]){box-shadow:var(--mdui-elevation-level4)}:host([lowered][hover]){box-shadow:var(--mdui-elevation-level2)}:host([variant=primary]){color:rgb(var(--mdui-color-on-primary-container));background-color:rgb(var(--mdui-color-primary-container));--mdui-comp-ripple-state-layer-color:var(
      --mdui-color-on-primary-container
    )}:host([variant=surface]){color:rgb(var(--mdui-color-primary));background-color:rgb(var(--mdui-color-surface-container-high));--mdui-comp-ripple-state-layer-color:var(--mdui-color-primary)}:host([variant=surface][lowered]){background-color:rgb(var(--mdui-color-surface-container-low))}:host([variant=secondary]){color:rgb(var(--mdui-color-on-secondary-container));background-color:rgb(var(--mdui-color-secondary-container));--mdui-comp-ripple-state-layer-color:var(
      --mdui-color-on-secondary-container
    )}:host([variant=tertiary]){color:rgb(var(--mdui-color-on-tertiary-container));background-color:rgb(var(--mdui-color-tertiary-container));--mdui-comp-ripple-state-layer-color:var(
      --mdui-color-on-tertiary-container
    )}:host([size=small]){border-radius:var(--shape-corner-small);width:2.5rem;height:2.5rem}:host([size=large]){border-radius:var(--shape-corner-large);width:6rem;height:6rem}:host([disabled]),:host([loading]){cursor:default;pointer-events:none}:host([disabled]){color:rgba(var(--mdui-color-on-surface),38%);background-color:rgba(var(--mdui-color-on-surface),12%);box-shadow:var(--mdui-elevation-level0)}:host([extended]){width:auto}.label{display:inline-flex;transition:opacity var(--mdui-motion-duration-short2) var(--mdui-motion-easing-linear) var(--mdui-motion-duration-short2);padding-left:.25rem;padding-right:.25rem}.has-icon .label{margin-left:.5rem}:host([size=small]) .has-icon .label{margin-left:.25rem}:host([size=large]) .has-icon .label{margin-left:1rem}:host(:not([extended])) .label{opacity:0;transition-delay:0s;transition-duration:var(--mdui-motion-duration-short1)}:host([size=large]) .label{font-size:1.5em}.icon{display:inline-flex;font-size:1.71428571em}:host([size=large]) .icon{font-size:2.57142857em}.icon mdui-icon,::slotted([slot=icon]){font-size:inherit}mdui-circular-progress{display:inline-flex;width:1.5rem;height:1.5rem}:host([size=large]) mdui-circular-progress{width:2.25rem;height:2.25rem}:host([disabled]) mdui-circular-progress{stroke:rgba(var(--mdui-color-on-surface),38%)}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hZdNY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _layoutJs = require("./layout/layout.js");
parcelHelpers.exportAll(_layoutJs, exports);

},{"./layout/layout.js":"4ro2s","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4ro2s":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Layout", ()=>Layout);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _layoutStyleJs = require("./layout-style.js");
/**
 * @summary 布局组件
 *
 * ```html
 * <mdui-layout>
 * ..<mdui-layout-item></mdui-layout-item>
 * ..<mdui-layout-item></mdui-layout-item>
 * ..<mdui-layout-main></mdui-layout-main>
 * </mdui-layout>
 * ```
 *
 * @slot - 可以是 [`<mdui-top-app-bar>`](/docs/2/components/top-app-bar)、[`<mdui-bottom-app-bar>`](/docs/2/components/bottom-app-bar)、[`<mdui-navigation-bar>`](/docs/2/components/navigation-bar)、[`<mdui-navigation-drawer>`](/docs/2/components/navigation-drawer)、[`<mdui-navigation-rail>`](/docs/2/components/navigation-rail)、`<mdui-layout-item>`、`<mdui-layout-main>` 元素
 */ let Layout = class Layout extends (0, _mduiElementJs.MduiElement) {
    constructor(){
        super(...arguments);
        /**
         * 把当前布局的高度设为 100%
         */ this.fullHeight = false;
    }
    render() {
        return (0, _lit.html)`<slot></slot>`;
    }
};
Layout.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _layoutStyleJs.layoutStyle)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter),
        attribute: "full-height"
    })
], Layout.prototype, "fullHeight", void 0);
Layout = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-layout")
], Layout);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/lit-styles/component-style.js":"jFNMX","./layout-style.js":"jYFyf","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jYFyf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "layoutStyle", ()=>layoutStyle);
var _lit = require("lit");
const layoutStyle = (0, _lit.css)`:host{position:relative;display:flex;flex:1 1 auto;overflow:hidden}:host([full-height]){height:100%}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"0YtA9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _layoutItemJs = require("./layout/layout-item.js");
parcelHelpers.exportAll(_layoutItemJs, exports);

},{"./layout/layout-item.js":"3Wcyk","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3Wcyk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LayoutItem", ()=>LayoutItem);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _watchJs = require("@mdui/shared/decorators/watch.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _layoutItemBaseJs = require("./layout-item-base.js");
var _layoutItemStyleJs = require("./layout-item-style.js");
/**
 * @summary 布局项组件
 *
 * ```html
 * <mdui-layout>
 * ..<mdui-layout-item></mdui-layout-item>
 * ..<mdui-layout-item></mdui-layout-item>
 * ..<mdui-layout-main></mdui-layout-main>
 * </mdui-layout>
 * ```
 *
 * @slot - 可以是任意内容
 */ let LayoutItem = class LayoutItem extends (0, _layoutItemBaseJs.LayoutItemBase) {
    constructor(){
        super(...arguments);
        /**
         * 该组件所处位置。可选值为：
         *
         * * `top`：位于上方
         * * `bottom`：位于下方
         * * `left`：位于左侧
         * * `right`：位于右侧
         */ this.placement = "top";
    }
    get layoutPlacement() {
        return this.placement;
    }
    // placement 变更时，需要重新调整布局
    onPlacementChange() {
        this.layoutManager?.updateLayout(this);
    }
    render() {
        return (0, _lit.html)`<slot></slot>`;
    }
};
LayoutItem.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _layoutItemStyleJs.layoutItemStyle)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], LayoutItem.prototype, "placement", void 0);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("placement", true)
], LayoutItem.prototype, "onPlacementChange", null);
LayoutItem = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-layout-item")
], LayoutItem);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","@mdui/shared/decorators/watch.js":"20Qzb","@mdui/shared/lit-styles/component-style.js":"jFNMX","./layout-item-base.js":"jgZrI","./layout-item-style.js":"lvrv7","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lvrv7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "layoutItemStyle", ()=>layoutItemStyle);
var _lit = require("lit");
const layoutItemStyle = (0, _lit.css)`:host{display:flex;z-index:1}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hwf2G":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _layoutMainJs = require("./layout/layout-main.js");
parcelHelpers.exportAll(_layoutMainJs, exports);

},{"./layout/layout-main.js":"dje4X","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dje4X":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LayoutMain", ()=>LayoutMain);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _helperJs = require("@mdui/jq/shared/helper.js");
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _helperJs1 = require("./helper.js");
var _layoutMainStyleJs = require("./layout-main-style.js");
/**
 * @summary 布局主内容组件
 *
 * ```html
 * <mdui-layout>
 * ..<mdui-layout-item></mdui-layout-item>
 * ..<mdui-layout-item></mdui-layout-item>
 * ..<mdui-layout-main></mdui-layout-main>
 * </mdui-layout>
 * ```
 *
 * @slot - 可以是任意内容
 */ let LayoutMain = class LayoutMain extends (0, _mduiElementJs.MduiElement) {
    connectedCallback() {
        super.connectedCallback();
        const parentElement = this.parentElement;
        if ((0, _helperJs.isNodeName)(parentElement, "mdui-layout")) {
            this.layoutManager = (0, _helperJs1.getLayout)(parentElement);
            this.layoutManager.registerMain(this);
        }
    }
    disconnectedCallback() {
        super.disconnectedCallback();
        if (this.layoutManager) this.layoutManager.unregisterMain();
    }
    render() {
        return (0, _lit.html)`<slot></slot>`;
    }
};
LayoutMain.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _layoutMainStyleJs.layoutMainStyle)
];
LayoutMain = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-layout-main")
], LayoutMain);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","@mdui/jq/shared/helper.js":"4D489","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/lit-styles/component-style.js":"jFNMX","./helper.js":"2G7b8","./layout-main-style.js":"ePLFH","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ePLFH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "layoutMainStyle", ()=>layoutMainStyle);
var _lit = require("lit");
const layoutMainStyle = (0, _lit.css)`:host{flex:1 0 auto;max-width:100%;overflow:auto}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4XkNq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./linear-progress/index.js");
parcelHelpers.exportAll(_indexJs, exports);

},{"./linear-progress/index.js":"hjA99","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hjA99":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LinearProgress", ()=>LinearProgress);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _styleMapJs = require("lit/directives/style-map.js");
var _helperJs = require("@mdui/jq/shared/helper.js");
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _styleJs = require("./style.js");
/**
 * @summary 线性进度指示器组件
 *
 * ```html
 * <mdui-linear-progress></mdui-linear-progress>
 * ```
 *
 * @csspart indicator - 指示器
 *
 * @cssprop --shape-corner - 组件的圆角大小。可以指定一个具体的像素值；但更推荐[引用设计令牌](/docs/2/styles/design-tokens#shape-corner)
 */ let LinearProgress = class LinearProgress extends (0, _mduiElementJs.MduiElement) {
    constructor(){
        super(...arguments);
        /**
         * 进度指示器的最大值，默认为 1
         */ this.max = 1;
    }
    render() {
        const isDeterminate = !(0, _helperJs.isUndefined)(this.value);
        if (isDeterminate) {
            const value = this.value;
            return (0, _lit.html)`<div part="indicator" class="determinate" style="${(0, _styleMapJs.styleMap)({
                width: `${value / Math.max(this.max ?? value, value) * 100}%`
            })}"></div>`;
        }
        return (0, _lit.html)`<div part="indicator" class="indeterminate"></div>`;
    }
};
LinearProgress.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _styleJs.style)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Number,
        reflect: true
    })
], LinearProgress.prototype, "max", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Number
    })
], LinearProgress.prototype, "value", void 0);
LinearProgress = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-linear-progress")
], LinearProgress);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/style-map.js":"4GQsu","@mdui/jq/shared/helper.js":"4D489","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/lit-styles/component-style.js":"jFNMX","./style.js":"ldZwu","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ldZwu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "style", ()=>style);
var _lit = require("lit");
const style = (0, _lit.css)`:host{--shape-corner:var(--mdui-shape-corner-none);position:relative;display:inline-block;width:100%;overflow:hidden;border-radius:var(--shape-corner);background-color:rgb(var(--mdui-color-surface-container-highest));height:.25rem}.determinate,.indeterminate{background-color:rgb(var(--mdui-color-primary))}.determinate{height:100%;transition:width var(--mdui-motion-duration-long2) var(--mdui-motion-easing-standard)}.indeterminate::before{position:absolute;top:0;bottom:0;left:0;background-color:inherit;animation:mdui-comp-progress-indeterminate 2s var(--mdui-motion-easing-linear) infinite;content:' '}.indeterminate::after{position:absolute;top:0;bottom:0;left:0;background-color:inherit;animation:mdui-comp-progress-indeterminate-short 2s var(--mdui-motion-easing-linear) infinite;content:' '}@keyframes mdui-comp-progress-indeterminate{0%{left:0;width:0}50%{left:30%;width:70%}75%{left:100%;width:0}}@keyframes mdui-comp-progress-indeterminate-short{0%{left:0;width:0}50%{left:0;width:0}75%{left:0;width:25%}100%{left:100%;width:0}}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2PYCx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _listItemJs = require("./list/list-item.js");
parcelHelpers.exportAll(_listItemJs, exports);

},{"./list/list-item.js":"iAgyS","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iAgyS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ListItem", ()=>ListItem);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _refJs = require("lit/directives/ref.js");
var _classcat = require("classcat");
var _classcatDefault = parcelHelpers.interopDefault(_classcat);
var _helperJs = require("@mdui/jq/shared/helper.js");
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _hasSlotJs = require("@mdui/shared/controllers/has-slot.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _templateJs = require("@mdui/shared/helpers/template.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _anchorJs = require("@mdui/shared/mixins/anchor.js");
var _focusableJs = require("@mdui/shared/mixins/focusable.js");
var _iconJs = require("../icon.js");
var _rippleMixinJs = require("../ripple/ripple-mixin.js");
var _listItemStyleJs = require("./list-item-style.js");
/**
 * @summary 列表项组件。需与 `<mdui-list>` 组件配合使用
 *
 * ```html
 * <mdui-list>
 * ..<mdui-list-subheader>Subheader</mdui-list-subheader>
 * ..<mdui-list-item>Item 1</mdui-list-item>
 * ..<mdui-list-item>Item 2</mdui-list-item>
 * </mdui-list>
 * ```
 *
 * @event focus - 获得焦点时触发
 * @event blur - 失去焦点时触发
 *
 * @slot - 主文本
 * @slot description - 副文本
 * @slot icon - 列表项左侧的元素
 * @slot end-icon - 列表项右侧的元素
 * @slot custom - 任意自定义内容
 *
 * @csspart container - 列表项容器
 * @csspart icon - 左侧图标
 * @csspart end-icon - 右侧图标
 * @csspart body - 中间部分
 * @csspart headline - 主标题
 * @csspart description - 副标题
 *
 * @cssprop --shape-corner - 列表项的圆角大小。可以指定一个具体的像素值；但更推荐[引用设计令牌](/docs/2/styles/design-tokens#shape-corner)
 * @cssprop --shape-corner-rounded - 指定了 `rounded` 时，列表项的圆角大小。可以指定一个具体的像素值；但更推荐[引用设计令牌](/docs/2/styles/design-tokens#shape-corner)
 */ let ListItem = class ListItem extends (0, _anchorJs.AnchorMixin)((0, _rippleMixinJs.RippleMixin)((0, _focusableJs.FocusableMixin)((0, _mduiElementJs.MduiElement)))) {
    constructor(){
        super(...arguments);
        /**
         * 是否禁用该列表项，列表项将置灰，且其中的 [`<mdui-checkbox>`](/docs/2/components/checkbox)、[`<mdui-radio>`](/docs/2/components/radio)、[`<mdui-switch>`](/docs/2/components/switch) 等都将禁用
         */ this.disabled = false;
        /**
         * 是否激活该列表项
         */ this.active = false;
        /**
         * 是否使列表项不可点击，但其中的 [`<mdui-checkbox>`](/docs/2/components/checkbox)、[`<mdui-radio>`](/docs/2/components/radio)、[`<mdui-switch>`](/docs/2/components/switch) 等仍可进行交互
         */ this.nonclickable = false;
        /**
         * 使用圆角形状的列表项
         */ this.rounded = false;
        /**
         * 列表项的垂直对齐方式。可选值为：
         *
         * * `start`：顶部对齐
         * * `center`：居中对齐
         * * `end`：底部对齐
         */ this.alignment = "center";
        this.rippleRef = (0, _refJs.createRef)();
        this.itemRef = (0, _refJs.createRef)();
        this.hasSlotController = new (0, _hasSlotJs.HasSlotController)(this, "[default]", "description", "icon", "end-icon", "custom");
    }
    get rippleElement() {
        return this.rippleRef.value;
    }
    get rippleDisabled() {
        return this.focusDisabled;
    }
    get focusElement() {
        return this.href && !this.disabled ? this.itemRef.value : this;
    }
    get focusDisabled() {
        return this.href ? this.disabled : this.disabled || this.nonclickable;
    }
    render() {
        const preset = !this.hasSlotController.test("custom");
        const hasIcon = this.icon || this.hasSlotController.test("icon");
        const hasEndIcon = this.endIcon || this.hasSlotController.test("end-icon");
        const hasDescription = this.description || this.hasSlotController.test("description");
        const className = (0, _classcatDefault.default)({
            container: true,
            preset,
            "has-icon": hasIcon,
            "has-end-icon": hasEndIcon,
            "has-description": hasDescription,
            // icon slot 中的元素是否为 mdui-icon 或 mdui-icon-* 组件
            "is-icon": (0, _helperJs.isNodeName)(this.iconElements[0], "mdui-icon"),
            // end-icon slot 中的元素是否为 mdui-icon 或 mdui-icon-* 组件
            "is-end-icon": (0, _helperJs.getNodeName)(this.endIconElements[0]).startsWith("mdui-icon-")
        });
        return (0, _lit.html)`<mdui-ripple ${(0, _refJs.ref)(this.rippleRef)} .noRipple="${this.noRipple}"></mdui-ripple>${this.href && !this.disabled ? this.renderAnchor({
            className,
            content: this.renderInner(),
            part: "container",
            refDirective: (0, _refJs.ref)(this.itemRef)
        }) : (0, _lit.html)`<div part="container" class="${className}" ${(0, _refJs.ref)(this.itemRef)}>${this.renderInner()}</div>`}`;
    }
    renderInner() {
        const hasDefaultSlot = this.hasSlotController.test("[default]");
        return (0, _lit.html)`<slot name="custom"><slot name="icon" part="icon" class="icon">${this.icon ? (0, _lit.html)`<mdui-icon name="${this.icon}"></mdui-icon>` : (0, _templateJs.nothingTemplate)}</slot><div part="body" class="body">${hasDefaultSlot ? (0, _lit.html)`<slot part="headline" class="headline"></slot>` : (0, _lit.html)`<div part="headline" class="headline">${this.headline}</div>`}<slot name="description" part="description" class="description">${this.description}</slot></div><slot name="end-icon" part="end-icon" class="end-icon">${this.endIcon ? (0, _lit.html)`<mdui-icon name="${this.endIcon}"></mdui-icon>` : (0, _templateJs.nothingTemplate)}</slot></slot>`;
    }
};
ListItem.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _listItemStyleJs.listItemStyle)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], ListItem.prototype, "headline", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Number,
        reflect: true,
        attribute: "headline-line"
    })
], ListItem.prototype, "headlineLine", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], ListItem.prototype, "description", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Number,
        reflect: true,
        attribute: "description-line"
    })
], ListItem.prototype, "descriptionLine", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], ListItem.prototype, "icon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "end-icon"
    })
], ListItem.prototype, "endIcon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], ListItem.prototype, "disabled", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], ListItem.prototype, "active", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], ListItem.prototype, "nonclickable", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], ListItem.prototype, "rounded", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], ListItem.prototype, "alignment", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.queryAssignedElements)({
        slot: "icon",
        flatten: true
    })
], ListItem.prototype, "iconElements", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.queryAssignedElements)({
        slot: "end-icon",
        flatten: true
    })
], ListItem.prototype, "endIconElements", void 0);
ListItem = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-list-item")
], ListItem);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/ref.js":"eKwmp","classcat":"9ww9D","@mdui/jq/shared/helper.js":"4D489","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/controllers/has-slot.js":"cARnY","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/helpers/template.js":"7SHVu","@mdui/shared/lit-styles/component-style.js":"jFNMX","@mdui/shared/mixins/anchor.js":"lvjeP","@mdui/shared/mixins/focusable.js":"kzhFM","../icon.js":"6YN4l","../ripple/ripple-mixin.js":"djWHz","./list-item-style.js":"eaywQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eaywQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "listItemStyle", ()=>listItemStyle);
var _lit = require("lit");
const listItemStyle = (0, _lit.css)`:host{--shape-corner:var(--mdui-shape-corner-none);--shape-corner-rounded:var(--mdui-shape-corner-extra-large);position:relative;display:block;border-radius:var(--shape-corner);--mdui-comp-ripple-state-layer-color:var(--mdui-color-on-surface)}:host([rounded]),:host([rounded]) mdui-ripple{border-radius:var(--shape-corner-rounded)}:host([active]){background-color:rgb(var(--mdui-color-secondary-container));--mdui-comp-ripple-state-layer-color:var(
      --mdui-color-on-secondary-container
    )}:host([disabled]){pointer-events:none}.container{cursor:pointer;-webkit-user-select:none;user-select:none;text-decoration:none;color:inherit;-webkit-tap-highlight-color:transparent}:host([disabled]) .container{cursor:default;opacity:.38}:host([nonclickable]:not([href])) .container{cursor:auto;-webkit-user-select:auto;user-select:auto}.preset{display:flex;align-items:center;padding:.5rem 1.5rem .5rem 1rem;min-height:3.5rem}:host([alignment=start]) .preset{align-items:flex-start}:host([alignment=end]) .preset{align-items:flex-end}.body{display:flex;flex:1 1 100%;flex-direction:column;justify-content:center;min-width:0}.headline{display:block;color:rgb(var(--mdui-color-on-surface));font-size:var(--mdui-typescale-body-large-size);font-weight:var(--mdui-typescale-body-large-weight);letter-spacing:var(--mdui-typescale-body-large-tracking);line-height:var(--mdui-typescale-body-large-line-height)}:host([active]) .headline{color:rgb(var(--mdui-color-on-secondary-container))}.description{display:none;color:rgb(var(--mdui-color-on-surface-variant));font-size:var(--mdui-typescale-body-medium-size);font-weight:var(--mdui-typescale-body-medium-weight);letter-spacing:var(--mdui-typescale-body-medium-tracking);line-height:var(--mdui-typescale-body-medium-line-height)}:host([disabled]) .description,:host([focused]) .description,:host([hover]) .description,:host([pressed]) .description{color:rgb(var(--mdui-color-on-surface))}.has-description .description{display:block}:host([description-line='1']) .description,:host([headline-line='1']) .headline{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}:host([description-line='2']) .description,:host([description-line='3']) .description,:host([headline-line='2']) .headline,:host([headline-line='3']) .headline{display:-webkit-box;overflow:hidden;text-overflow:ellipsis;-webkit-box-orient:vertical}:host([description-line='2']) .description,:host([headline-line='2']) .headline{-webkit-line-clamp:2}:host([description-line='3']) .description,:host([headline-line='3']) .headline{-webkit-line-clamp:3}.end-icon,.icon{display:flex;flex:0 0 auto;font-size:var(--mdui-typescale-label-small-size);font-weight:var(--mdui-typescale-label-small-weight);letter-spacing:var(--mdui-typescale-label-small-tracking);line-height:var(--mdui-typescale-label-small-line-height);color:rgb(var(--mdui-color-on-surface-variant))}:host([disabled]) .end-icon,:host([disabled]) .icon,:host([focused]) .end-icon,:host([focused]) .icon,:host([hover]) .end-icon,:host([hover]) .icon,:host([pressed]) .end-icon,:host([pressed]) .icon{color:rgb(var(--mdui-color-on-surface))}:host([active]) .end-icon,:host([active]) .icon{color:rgb(var(--mdui-color-on-secondary-container))}.end-icon mdui-icon,.icon mdui-icon,.is-end-icon ::slotted([slot=end-icon]),.is-icon ::slotted([slot=icon]){font-size:1.5rem}.has-icon .icon{margin-right:1rem}.has-icon ::slotted(mdui-checkbox[slot=icon]),.has-icon ::slotted(mdui-radio[slot=icon]){margin-left:-.5rem}.has-end-icon .end-icon{margin-left:1rem}.has-end-icon ::slotted(mdui-checkbox[slot=end-icon]),.has-end-icon ::slotted(mdui-radio[slot=end-icon]){margin-right:-.5rem}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"l6k45":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _listSubheaderJs = require("./list/list-subheader.js");
parcelHelpers.exportAll(_listSubheaderJs, exports);

},{"./list/list-subheader.js":"anl0z","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"anl0z":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ListSubheader", ()=>ListSubheader);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _listSubheaderStyleJs = require("./list-subheader-style.js");
/**
 * @summary 列表标题组件。需与 `<mdui-list>` 组件配合使用
 *
 * ```html
 * <mdui-list>
 * ..<mdui-list-subheader>Subheader</mdui-list-subheader>
 * ..<mdui-list-item>Item 1</mdui-list-item>
 * ..<mdui-list-item>Item 2</mdui-list-item>
 * </mdui-list>
 * ```
 *
 * @slot - 文本
 */ let ListSubheader = class ListSubheader extends (0, _mduiElementJs.MduiElement) {
    render() {
        return (0, _lit.html)`<slot></slot>`;
    }
};
ListSubheader.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _listSubheaderStyleJs.listSubheaderStyle)
];
ListSubheader = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-list-subheader")
], ListSubheader);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/lit-styles/component-style.js":"jFNMX","./list-subheader-style.js":"9XsAt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9XsAt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "listSubheaderStyle", ()=>listSubheaderStyle);
var _lit = require("lit");
const listSubheaderStyle = (0, _lit.css)`:host{display:block;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;cursor:default;color:rgb(var(--mdui-color-on-surface-variant));font-size:var(--mdui-typescale-label-small-size);font-weight:var(--mdui-typescale-label-small-weight);letter-spacing:var(--mdui-typescale-label-small-tracking);line-height:var(--mdui-typescale-label-small-line-height);padding-left:1rem;padding-right:1.5rem;height:3.5rem;line-height:3.5rem}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kLS9R":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _listJs = require("./list/list.js");
parcelHelpers.exportAll(_listJs, exports);

},{"./list/list.js":"8O0eT","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8O0eT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "List", ()=>List);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _listStyleJs = require("./list-style.js");
/**
 * @summary 列表组件。需与 `<mdui-list-item>` 组件配合使用
 *
 * ```html
 * <mdui-list>
 * ..<mdui-list-subheader>Subheader</mdui-list-subheader>
 * ..<mdui-list-item>Item 1</mdui-list-item>
 * ..<mdui-list-item>Item 2</mdui-list-item>
 * </mdui-list>
 * ```
 *
 * @slot - `<mdui-list-item>` 元素
 */ let List = class List extends (0, _mduiElementJs.MduiElement) {
    render() {
        return (0, _lit.html)`<slot></slot>`;
    }
};
List.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _listStyleJs.listStyle)
];
List = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-list")
], List);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/lit-styles/component-style.js":"jFNMX","./list-style.js":"bupo1","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bupo1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "listStyle", ()=>listStyle);
var _lit = require("lit");
const listStyle = (0, _lit.css)`:host{display:block;padding:.5rem 0}::slotted(mdui-divider[middle]){margin-left:1rem;margin-right:1.5rem}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aGd9k":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _menuItemJs = require("./menu/menu-item.js");
parcelHelpers.exportAll(_menuItemJs, exports);

},{"./menu/menu-item.js":"gu5Id","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gu5Id":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MenuItem", ()=>MenuItem);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _refJs = require("lit/directives/ref.js");
var _whenJs = require("lit/directives/when.js");
var _classcat = require("classcat");
var _classcatDefault = parcelHelpers.interopDefault(_classcat);
var _js = require("@mdui/jq/$.js");
var _cssJs = require("@mdui/jq/methods/css.js");
var _heightJs = require("@mdui/jq/methods/height.js");
var _innerHeightJs = require("@mdui/jq/methods/innerHeight.js");
var _innerWidthJs = require("@mdui/jq/methods/innerWidth.js");
var _widthJs = require("@mdui/jq/methods/width.js");
var _helperJs = require("@mdui/jq/shared/helper.js");
var _containsJs = require("@mdui/jq/static/contains.js");
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _definedJs = require("@mdui/shared/controllers/defined.js");
var _hasSlotJs = require("@mdui/shared/controllers/has-slot.js");
var _watchJs = require("@mdui/shared/decorators/watch.js");
var _animateJs = require("@mdui/shared/helpers/animate.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _motionJs = require("@mdui/shared/helpers/motion.js");
var _templateJs = require("@mdui/shared/helpers/template.js");
var _uniqueIdJs = require("@mdui/shared/helpers/uniqueId.js");
var _arrowRightJs = require("@mdui/shared/icons/arrow-right.js");
var _checkJs = require("@mdui/shared/icons/check.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _anchorJs = require("@mdui/shared/mixins/anchor.js");
var _focusableJs = require("@mdui/shared/mixins/focusable.js");
var _iconJs = require("../icon.js");
var _rippleMixinJs = require("../ripple/ripple-mixin.js");
var _menuItemStyleJs = require("./menu-item-style.js");
/**
 * @summary 菜单项组件
 *
 * ```html
 * <mdui-menu>
 * ..<mdui-menu-item>Item 1</mdui-menu-item>
 * ..<mdui-menu-item>Item 2</mdui-menu-item>
 * </mdui-menu>
 * ```
 *
 * @event focus - 获得焦点时触发
 * @event blur - 失去焦点时触发
 * @event submenu-open - 子菜单开始打开时，事件被触发。可以通过调用 `event.preventDefault()` 阻止子菜单打开
 * @event submenu-opened - 子菜单打开动画完成时，事件被触发
 * @event submenu-close - 子菜单开始关闭时，事件被触发。可以通过调用 `event.preventDefault()` 阻止子菜单关闭
 * @event submenu-closed - 子菜单关闭动画完成时，事件被触发
 *
 * @slot - 菜单项的文本
 * @slot icon - 菜单项左侧图标
 * @slot end-icon - 菜单项右侧图标
 * @slot end-text - 菜单右侧的文本
 * @slot selected-icon - 选中状态的图标
 * @slot submenu - 子菜单
 * @slot custom - 任意自定义内容
 *
 * @csspart container - 菜单项的容器
 * @csspart icon - 左侧的图标
 * @csspart label - 文本内容
 * @csspart end-icon - 右侧的图标
 * @csspart end-text - 右侧的文本
 * @csspart selected-icon - 选中状态的图标
 * @csspart submenu - 子菜单元素
 */ let MenuItem = class MenuItem extends (0, _anchorJs.AnchorMixin)((0, _rippleMixinJs.RippleMixin)((0, _focusableJs.FocusableMixin)((0, _mduiElementJs.MduiElement)))) {
    constructor(){
        super();
        /**
         * 是否禁用该菜单项
         */ this.disabled = false;
        /**
         * 是否打开子菜单
         */ this.submenuOpen = false;
        // 是否已选中该菜单项。由 <mdui-menu> 控制该参数
        this.selected = false;
        // 是否使用更紧凑的布局。由 <mdui-menu> 控制该参数
        this.dense = false;
        // 是否可聚焦。由 <mdui-menu> 控制该参数
        this.focusable = false;
        // 每一个 menu-item 元素都添加一个唯一的 key
        this.key = (0, _uniqueIdJs.uniqueId)();
        this.rippleRef = (0, _refJs.createRef)();
        this.containerRef = (0, _refJs.createRef)();
        this.submenuRef = (0, _refJs.createRef)();
        this.hasSlotController = new (0, _hasSlotJs.HasSlotController)(this, "[default]", "icon", "end-icon", "end-text", "submenu", "custom");
        this.definedController = new (0, _definedJs.DefinedController)(this, {
            relatedElements: [
                ""
            ]
        });
        this.onOuterClick = this.onOuterClick.bind(this);
        this.onFocus = this.onFocus.bind(this);
        this.onBlur = this.onBlur.bind(this);
        this.onClick = this.onClick.bind(this);
        this.onKeydown = this.onKeydown.bind(this);
        this.onMouseEnter = this.onMouseEnter.bind(this);
        this.onMouseLeave = this.onMouseLeave.bind(this);
    }
    get focusDisabled() {
        return this.disabled || !this.focusable;
    }
    get focusElement() {
        return this.href && !this.disabled ? this.containerRef.value : this;
    }
    get rippleDisabled() {
        return this.disabled;
    }
    get rippleElement() {
        return this.rippleRef.value;
    }
    get hasSubmenu() {
        return this.hasSlotController.test("submenu");
    }
    async onOpenChange() {
        const hasUpdated = this.hasUpdated;
        // 默认为关闭状态。因此首次渲染时，且为关闭状态，不执行
        if (!this.submenuOpen && !hasUpdated) return;
        await this.definedController.whenDefined();
        if (!hasUpdated) await this.updateComplete;
        const easingLinear = (0, _motionJs.getEasing)(this, "linear");
        const easingEmphasizedDecelerate = (0, _motionJs.getEasing)(this, "emphasized-decelerate");
        const easingEmphasizedAccelerate = (0, _motionJs.getEasing)(this, "emphasized-accelerate");
        // 打开
        // 要区分是否首次渲染，首次渲染时不触发事件，不执行动画；非首次渲染，触发事件，执行动画
        if (this.submenuOpen) {
            if (hasUpdated) {
                const eventProceeded = this.emit("submenu-open", {
                    cancelable: true
                });
                if (!eventProceeded) return;
            }
            const duration = (0, _motionJs.getDuration)(this, "medium4");
            await (0, _animateJs.stopAnimations)(this.submenuRef.value);
            this.submenuRef.value.hidden = false;
            this.updateSubmenuPositioner();
            await Promise.all([
                (0, _animateJs.animateTo)(this.submenuRef.value, [
                    {
                        transform: "scaleY(0.45)"
                    },
                    {
                        transform: "scaleY(1)"
                    }
                ], {
                    duration: hasUpdated ? duration : 0,
                    easing: easingEmphasizedDecelerate
                }),
                (0, _animateJs.animateTo)(this.submenuRef.value, [
                    {
                        opacity: 0
                    },
                    {
                        opacity: 1,
                        offset: 0.125
                    },
                    {
                        opacity: 1
                    }
                ], {
                    duration: hasUpdated ? duration : 0,
                    easing: easingLinear
                })
            ]);
            if (hasUpdated) this.emit("submenu-opened");
        } else {
            const eventProceeded = this.emit("submenu-close", {
                cancelable: true
            });
            if (!eventProceeded) return;
            const duration = (0, _motionJs.getDuration)(this, "short4");
            await (0, _animateJs.stopAnimations)(this.submenuRef.value);
            await Promise.all([
                (0, _animateJs.animateTo)(this.submenuRef.value, [
                    {
                        transform: "scaleY(1)"
                    },
                    {
                        transform: "scaleY(0.45)"
                    }
                ], {
                    duration,
                    easing: easingEmphasizedAccelerate
                }),
                (0, _animateJs.animateTo)(this.submenuRef.value, [
                    {
                        opacity: 1
                    },
                    {
                        opacity: 1,
                        offset: 0.875
                    },
                    {
                        opacity: 0
                    }
                ], {
                    duration,
                    easing: easingLinear
                })
            ]);
            if (this.submenuRef.value) this.submenuRef.value.hidden = true;
            this.emit("submenu-closed");
        }
    }
    connectedCallback() {
        super.connectedCallback();
        this.definedController.whenDefined().then(()=>{
            document.addEventListener("pointerdown", this.onOuterClick);
        });
    }
    disconnectedCallback() {
        super.disconnectedCallback();
        document.removeEventListener("pointerdown", this.onOuterClick);
    }
    firstUpdated(changedProperties) {
        super.firstUpdated(changedProperties);
        this.definedController.whenDefined().then(()=>{
            this.addEventListener("focus", this.onFocus);
            this.addEventListener("blur", this.onBlur);
            this.addEventListener("click", this.onClick);
            this.addEventListener("keydown", this.onKeydown);
            this.addEventListener("mouseenter", this.onMouseEnter);
            this.addEventListener("mouseleave", this.onMouseLeave);
        });
    }
    render() {
        const hasSubmenu = this.hasSubmenu;
        const hasCustomSlot = this.hasSlotController.test("custom");
        const hasEndIconSlot = this.hasSlotController.test("end-icon");
        const useDefaultEndIcon = !this.endIcon && hasSubmenu && !hasEndIconSlot;
        const hasEndIcon = this.endIcon || hasSubmenu || hasEndIconSlot;
        const hasIcon = !(0, _helperJs.isUndefined)(this.icon) || this.selects === "single" || this.selects === "multiple" || this.hasSlotController.test("icon");
        const hasEndText = !!this.endText || this.hasSlotController.test("end-text");
        const className = (0, _classcatDefault.default)({
            container: true,
            dense: this.dense,
            preset: !hasCustomSlot,
            "has-icon": hasIcon,
            "has-end-text": hasEndText,
            "has-end-icon": hasEndIcon
        });
        return (0, _lit.html)`<mdui-ripple ${(0, _refJs.ref)(this.rippleRef)} .noRipple="${this.noRipple}"></mdui-ripple>${this.href && !this.disabled ? this.renderAnchor({
            part: "container",
            className,
            content: this.renderInner(useDefaultEndIcon, hasIcon),
            refDirective: (0, _refJs.ref)(this.containerRef),
            tabIndex: this.focusable ? 0 : -1
        }) : (0, _lit.html)`<div part="container" ${(0, _refJs.ref)(this.containerRef)} class="${className}">${this.renderInner(useDefaultEndIcon, hasIcon)}</div>`} ${(0, _whenJs.when)(hasSubmenu, ()=>(0, _lit.html)`<slot name="submenu" ${(0, _refJs.ref)(this.submenuRef)} part="submenu" class="submenu" hidden></slot>`)}`;
    }
    /**
     * 点击子菜单外面的区域，关闭子菜单
     */ onOuterClick(event) {
        if (!this.disabled && this.submenuOpen && this !== event.target && !(0, _js.$).contains(this, event.target)) this.submenuOpen = false;
    }
    hasTrigger(trigger) {
        return this.submenuTrigger ? this.submenuTrigger.split(" ").includes(trigger) : false;
    }
    onFocus() {
        if (this.disabled || this.submenuOpen || !this.hasTrigger("focus") || !this.hasSubmenu) return;
        this.submenuOpen = true;
    }
    onBlur() {
        if (this.disabled || !this.submenuOpen || !this.hasTrigger("focus") || !this.hasSubmenu) return;
        this.submenuOpen = false;
    }
    onClick(event) {
        // e.button 为 0 时，为鼠标左键点击。忽略鼠标中间和右键
        if (this.disabled || event.button) return;
        // 切换子菜单打开状态
        if (!this.hasTrigger("click") || event.target !== this || !this.hasSubmenu) return;
        // 支持 hover 和 focus 触发时，点击菜单项不关闭子菜单
        if (this.submenuOpen && (this.hasTrigger("hover") || this.hasTrigger("focus"))) return;
        this.submenuOpen = !this.submenuOpen;
    }
    onKeydown(event) {
        // 切换子菜单打开状态
        if (this.disabled || !this.hasSubmenu) return;
        if (!this.submenuOpen && event.key === "Enter") {
            event.stopPropagation();
            this.submenuOpen = true;
        }
        if (this.submenuOpen && event.key === "Escape") {
            event.stopPropagation();
            this.submenuOpen = false;
        }
    }
    onMouseEnter() {
        // 不做 submenuOpen 的判断，因为可以延时打开和关闭
        if (this.disabled || !this.hasTrigger("hover") || !this.hasSubmenu) return;
        window.clearTimeout(this.submenuCloseTimeout);
        if (this.submenuOpenDelay) this.submenuOpenTimeout = window.setTimeout(()=>{
            this.submenuOpen = true;
        }, this.submenuOpenDelay);
        else this.submenuOpen = true;
    }
    onMouseLeave() {
        // 不做 submenuOpen 的判断，因为可以延时打开和关闭
        if (this.disabled || !this.hasTrigger("hover") || !this.hasSubmenu) return;
        window.clearTimeout(this.submenuOpenTimeout);
        this.submenuCloseTimeout = window.setTimeout(()=>{
            this.submenuOpen = false;
        }, this.submenuCloseDelay || 50);
    }
    // 更新子菜单的位置
    updateSubmenuPositioner() {
        const $window = (0, _js.$)(window);
        const $submenu = (0, _js.$)(this.submenuRef.value);
        const itemRect = this.getBoundingClientRect();
        const submenuWidth = $submenu.innerWidth();
        const submenuHeight = $submenu.innerHeight();
        const screenMargin = 8; // 子菜单与屏幕界至少保留 8px 间距
        let placementX = "bottom";
        let placementY = "right";
        // 判断子菜单上下位置
        if ($window.height() - itemRect.top > submenuHeight + screenMargin) placementX = "bottom";
        else if (itemRect.top + itemRect.height > submenuHeight + screenMargin) placementX = "top";
        // 判断子菜单左右位置
        if ($window.width() - itemRect.left - itemRect.width > submenuWidth + screenMargin) placementY = "right";
        else if (itemRect.left > submenuWidth + screenMargin) placementY = "left";
        (0, _js.$)(this.submenuRef.value).css({
            top: placementX === "bottom" ? 0 : itemRect.height - submenuHeight,
            left: placementY === "right" ? itemRect.width : -submenuWidth,
            transformOrigin: [
                placementY === "right" ? 0 : "100%",
                placementX === "bottom" ? 0 : "100%"
            ].join(" ")
        });
    }
    renderInner(useDefaultEndIcon, hasIcon) {
        return (0, _lit.html)`<slot name="custom">${this.selected ? (0, _lit.html)`<slot name="selected-icon" part="selected-icon" class="selected-icon">${this.selectedIcon ? (0, _lit.html)`<mdui-icon name="${this.selectedIcon}" class="i"></mdui-icon>` : (0, _lit.html)`<mdui-icon-check class="i"></mdui-icon-check>`}</slot>` : (0, _lit.html)`<slot name="icon" part="icon" class="icon">${hasIcon ? (0, _lit.html)`<mdui-icon name="${this.icon}" class="i"></mdui-icon>` : (0, _templateJs.nothingTemplate)}</slot>`}<div class="label-container"><slot part="label" class="label"></slot></div><slot name="end-text" part="end-text" class="end-text">${this.endText}</slot>${useDefaultEndIcon ? (0, _lit.html)`<mdui-icon-arrow-right part="end-icon" class="end-icon arrow-right"></mdui-icon-arrow-right>` : (0, _lit.html)`<slot name="end-icon" part="end-icon" class="end-icon">${this.endIcon ? (0, _lit.html)`<mdui-icon name="${this.endIcon}"></mdui-icon>` : (0, _templateJs.nothingTemplate)}</slot>`}</slot>`;
    }
};
MenuItem.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _menuItemStyleJs.menuItemStyle)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], MenuItem.prototype, "value", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], MenuItem.prototype, "disabled", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], MenuItem.prototype, "icon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "end-icon"
    })
], MenuItem.prototype, "endIcon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "end-text"
    })
], MenuItem.prototype, "endText", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "selected-icon"
    })
], MenuItem.prototype, "selectedIcon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter),
        attribute: "submenu-open"
    })
], MenuItem.prototype, "submenuOpen", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], MenuItem.prototype, "selected", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], MenuItem.prototype, "dense", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], MenuItem.prototype, "selects", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], MenuItem.prototype, "submenuTrigger", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], MenuItem.prototype, "submenuOpenDelay", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], MenuItem.prototype, "submenuCloseDelay", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], MenuItem.prototype, "focusable", void 0);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("submenuOpen")
], MenuItem.prototype, "onOpenChange", null);
MenuItem = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-menu-item")
], MenuItem);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/ref.js":"eKwmp","lit/directives/when.js":"5IbUr","classcat":"9ww9D","@mdui/jq/$.js":"dZx9v","@mdui/jq/methods/css.js":"lzdJz","@mdui/jq/methods/height.js":"4Py39","@mdui/jq/methods/innerHeight.js":"j1kN8","@mdui/jq/methods/innerWidth.js":"e8mrw","@mdui/jq/methods/width.js":"4wNQJ","@mdui/jq/shared/helper.js":"4D489","@mdui/jq/static/contains.js":"lgtfO","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/controllers/defined.js":"9Omrp","@mdui/shared/controllers/has-slot.js":"cARnY","@mdui/shared/decorators/watch.js":"20Qzb","@mdui/shared/helpers/animate.js":"abZbA","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/helpers/motion.js":"3ZuTY","@mdui/shared/helpers/template.js":"7SHVu","@mdui/shared/helpers/uniqueId.js":"4DPTP","@mdui/shared/icons/arrow-right.js":"XosZO","@mdui/shared/icons/check.js":"aAByS","@mdui/shared/lit-styles/component-style.js":"jFNMX","@mdui/shared/mixins/anchor.js":"lvjeP","@mdui/shared/mixins/focusable.js":"kzhFM","../icon.js":"6YN4l","../ripple/ripple-mixin.js":"djWHz","./menu-item-style.js":"6LmiZ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"XosZO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "IconArrowRight", ()=>IconArrowRight);
var _tslib = require("tslib");
var _lit = require("lit");
var _customElementJs = require("lit/decorators/custom-element.js");
var _styleJs = require("./shared/style.js");
var _svgTagJs = require("./shared/svg-tag.js");
let IconArrowRight = class IconArrowRight extends (0, _lit.LitElement) {
    render() {
        return (0, _svgTagJs.svgTag)('<path d="m10 17 5-5-5-5v10z"/>');
    }
};
IconArrowRight.styles = (0, _styleJs.style);
IconArrowRight = (0, _tslib.__decorate)([
    (0, _customElementJs.customElement)("mdui-icon-arrow-right")
], IconArrowRight);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators/custom-element.js":"i1eyG","./shared/style.js":"a02xN","./shared/svg-tag.js":"4bX1Q","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6LmiZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "menuItemStyle", ()=>menuItemStyle);
var _lit = require("lit");
const menuItemStyle = (0, _lit.css)`:host{position:relative;display:block}:host([selected]){background-color:rgba(var(--mdui-color-primary),12%)}:host([disabled]){pointer-events:none}.container{cursor:pointer;-webkit-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent}:host([disabled]) .container{cursor:default;opacity:.38}.preset{display:flex;align-items:center;text-decoration:none;height:3rem;padding:0 .75rem}.preset.dense{height:2rem}.label-container{flex:1 1 100%;min-width:0}.label{display:block;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;color:rgb(var(--mdui-color-on-surface));font-size:var(--mdui-typescale-label-large-size);font-weight:var(--mdui-typescale-label-large-weight);letter-spacing:var(--mdui-typescale-label-large-tracking)}.end-icon,.end-text,.icon,.selected-icon{display:none;flex:0 0 auto;color:rgb(var(--mdui-color-on-surface-variant))}.has-end-icon .end-icon,.has-end-text .end-text,.has-icon .icon,.has-icon .selected-icon{display:flex}.end-icon,.icon,.selected-icon{font-size:1.5rem}.end-icon::slotted(mdui-avatar),.icon::slotted(mdui-avatar),.selected-icon::slotted(mdui-avatar){width:1.5rem;height:1.5rem}.dense .end-icon,.dense .icon,.dense .selected-icon{font-size:1.125rem}.dense .end-icon::slotted(mdui-avatar),.dense .icon::slotted(mdui-avatar),.dense .selected-icon::slotted(mdui-avatar){width:1.125rem;height:1.125rem}.end-icon .i,.icon .i,.selected-icon .i,::slotted([slot=end-icon]),::slotted([slot=icon]),::slotted([slot=selected-icon]){font-size:inherit}.end-text{font-size:var(--mdui-typescale-label-large-size);font-weight:var(--mdui-typescale-label-large-weight);letter-spacing:var(--mdui-typescale-label-large-tracking);line-height:var(--mdui-typescale-label-large-line-height)}.icon,.selected-icon{margin-right:.75rem}.end-icon,.end-text{margin-left:.75rem}.arrow-right{color:rgb(var(--mdui-color-on-surface))}.submenu{--shape-corner:var(--mdui-shape-corner-extra-small);display:block;position:absolute;z-index:1;border-radius:var(--shape-corner);background-color:rgb(var(--mdui-color-surface-container));box-shadow:var(--mdui-elevation-level2);min-width:7rem;max-width:17.5rem;padding-top:.5rem;padding-bottom:.5rem;--mdui-comp-ripple-state-layer-color:var(--mdui-color-on-surface)}.submenu::slotted(mdui-divider){margin-top:.5rem;margin-bottom:.5rem}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"khqRo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _menuJs = require("./menu/menu.js");
parcelHelpers.exportAll(_menuJs, exports);

},{"./menu/menu.js":"jT3q1","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jT3q1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Menu", ()=>Menu);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _js = require("@mdui/jq/$.js");
var _addJs = require("@mdui/jq/methods/add.js");
var _childrenJs = require("@mdui/jq/methods/children.js");
var _findJs = require("@mdui/jq/methods/find.js");
var _getJs = require("@mdui/jq/methods/get.js");
var _isJs = require("@mdui/jq/methods/is.js");
var _parentJs = require("@mdui/jq/methods/parent.js");
var _parentsJs = require("@mdui/jq/methods/parents.js");
var _helperJs = require("@mdui/jq/shared/helper.js");
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _definedJs = require("@mdui/shared/controllers/defined.js");
var _watchJs = require("@mdui/shared/decorators/watch.js");
var _arrayJs = require("@mdui/shared/helpers/array.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _delayJs = require("@mdui/shared/helpers/delay.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _menuStyleJs = require("./menu-style.js");
/**
 * 键盘快捷键：
 * * `Arrow Up` / `Arrow Down` - 使焦点在 `<mdui-menu-item>` 之间向上/向下切换
 * * `Home` / `End` - 使焦点跳转到第一个/最后一个 `<mdui-menu-item>` 元素上
 * * `Space` - 可选中时，选中/取消选中一项
 * * `Enter` - 包含子菜单时，打开子菜单；为链接时，跳转链接
 * * `Escape` - 子菜单已打开时，关闭子菜单
 *
 * @summary 菜单组件。需与 `<mdui-menu-item>` 组件配合使用
 *
 * ```html
 * <mdui-menu>
 * ..<mdui-menu-item>Item 1</mdui-menu-item>
 * ..<mdui-menu-item>Item 2</mdui-menu-item>
 * </mdui-menu>
 * ```
 *
 * @event change - 菜单项的选中状态变化时触发
 *
 * @slot - 子菜单项（`<mdui-menu-item>`）、分割线（[`<mdui-divider>`](/docs/2/components/divider)）等元素
 *
 * @cssprop --shape-corner - 组件的圆角大小。可以指定一个具体的像素值；但更推荐[引用设计令牌](/docs/2/styles/design-tokens#shape-corner)
 */ let Menu = class Menu extends (0, _mduiElementJs.MduiElement) {
    constructor(){
        super(...arguments);
        /**
         * 菜单项是否使用更紧凑的布局
         */ this.dense = false;
        /**
         * 子菜单的触发方式，支持传入多个值，用空格分隔。可选值为：
         *
         * * `click`：点击菜单项时打开子菜单
         * * `hover`：鼠标悬浮到菜单项上时打开子菜单
         * * `focus`：聚焦到菜单项上时打开子菜单
         * * `manual`：使用了该值时，只能使用编程方式打开和关闭子菜单，且不能再指定其他触发方式
         */ this.submenuTrigger = "click hover";
        /**
         * 通过 hover 触发子菜单打开时的延时，单位为毫秒
         */ this.submenuOpenDelay = 200;
        /**
         * 通过 hover 触发子菜单关闭时的延时，单位为毫秒
         */ this.submenuCloseDelay = 200;
        // 因为 menu-item 的 value 可能会重复，所有在每一个 menu-item 元素上都加了一个唯一的 key 属性，通过 selectedKeys 来记录选中状态的 key
        this.selectedKeys = [];
        // 是否是初始状态，初始状态不触发 change 事件
        this.isInitial = true;
        // 最后一次获得焦点的 menu-item 元素。为嵌套菜单时，把不同层级的 menu-item 放到对应索引位的位置
        this.lastActiveItems = [];
        this.definedController = new (0, _definedJs.DefinedController)(this, {
            relatedElements: [
                "mdui-menu-item"
            ]
        });
    }
    // 菜单项元素（包含子菜单中的菜单项）
    get items() {
        return (0, _js.$)(this.childrenItems).find("mdui-menu-item").add(this.childrenItems).get();
    }
    // 菜单项元素（不包含已禁用的，包含子菜单中的菜单项）
    get itemsEnabled() {
        return this.items.filter((item)=>!item.disabled);
    }
    // 当前菜单是否为单选
    get isSingle() {
        return this.selects === "single";
    }
    // 当前菜单是否为多选
    get isMultiple() {
        return this.selects === "multiple";
    }
    // 当前菜单是否可选择
    get isSelectable() {
        return this.isSingle || this.isMultiple;
    }
    // 当前菜单是否为子菜单
    get isSubmenu() {
        return !(0, _js.$)(this).parent().length;
    }
    // 最深层级的子菜单中，最后交互过的 menu-item
    get lastActiveItem() {
        const index = this.lastActiveItems.length ? this.lastActiveItems.length - 1 : 0;
        return this.lastActiveItems[index];
    }
    set lastActiveItem(item) {
        const index = this.lastActiveItems.length ? this.lastActiveItems.length - 1 : 0;
        this.lastActiveItems[index] = item;
    }
    async onSlotChange() {
        await this.definedController.whenDefined();
        this.items.forEach((item)=>{
            item.dense = this.dense;
            item.selects = this.selects;
            item.submenuTrigger = this.submenuTrigger;
            item.submenuOpenDelay = this.submenuOpenDelay;
            item.submenuCloseDelay = this.submenuCloseDelay;
        });
    }
    async onSelectsChange() {
        if (!this.isSelectable) // 不可选中，清空选中值
        this.setSelectedKeys([]);
        else if (this.isSingle) // 单选，只保留第一个选中的值
        this.setSelectedKeys(this.selectedKeys.slice(0, 1));
        await this.onSelectedKeysChange();
    }
    async onSelectedKeysChange() {
        await this.definedController.whenDefined();
        // 根据 selectedKeys 读取出对应 menu-item 的 value
        const values = this.itemsEnabled.filter((item)=>this.selectedKeys.includes(item.key)).map((item)=>item.value);
        const value = this.isMultiple ? values : values[0] || undefined;
        this.setValue(value);
        if (!this.isInitial) this.emit("change");
    }
    async onValueChange() {
        this.isInitial = !this.hasUpdated;
        await this.definedController.whenDefined();
        // 根据 value 找出对应的 menu-item，并把这些 menu-item 的 key 赋值给 selectedKeys
        if (!this.isSelectable) {
            this.updateSelected();
            return;
        }
        const values = (this.isSingle ? [
            this.value
        ] : (0, _helperJs.isString)(this.value) ? [
            this.value
        ] : this.value).filter((i)=>i);
        if (!values.length) this.setSelectedKeys([]);
        else if (this.isSingle) {
            const firstItem = this.itemsEnabled.find((item)=>item.value === values[0]);
            this.setSelectedKeys(firstItem ? [
                firstItem.key
            ] : []);
        } else if (this.isMultiple) this.setSelectedKeys(this.itemsEnabled.filter((item)=>values.includes(item.value)).map((item)=>item.key));
        this.updateSelected();
        this.updateFocusable();
    }
    /**
     * 将焦点设置在当前元素上
     */ focus(options) {
        if (this.lastActiveItem) this.focusOne(this.lastActiveItem, options);
    }
    /**
     * 从当前元素中移除焦点
     */ blur() {
        if (this.lastActiveItem) this.lastActiveItem.blur();
    }
    firstUpdated(changedProperties) {
        super.firstUpdated(changedProperties);
        this.definedController.whenDefined().then(()=>{
            this.updateFocusable();
            this.lastActiveItem = this.items.find((item)=>item.focusable);
        });
        // 子菜单打开时，把焦点放到新的子菜单上
        this.addEventListener("submenu-open", (e)=>{
            const $parentItem = (0, _js.$)(e.target);
            const submenuItemsEnabled = $parentItem.children("mdui-menu-item:not([disabled])").get();
            const submenuLevel = $parentItem.parents("mdui-menu-item").length + 1; // 打开的是第几级子菜单
            if (submenuItemsEnabled.length) {
                this.lastActiveItems[submenuLevel] = submenuItemsEnabled[0];
                this.updateFocusable();
                this.focusOne(this.lastActiveItems[submenuLevel]);
            }
        });
        // 子菜单关闭时，把焦点还原到父菜单上
        this.addEventListener("submenu-close", (e)=>{
            const $parentItem = (0, _js.$)(e.target);
            const submenuLevel = $parentItem.parents("mdui-menu-item").length + 1; // 打开的是第几级子菜单
            if (this.lastActiveItems.length - 1 === submenuLevel) {
                this.lastActiveItems.pop();
                this.updateFocusable();
                if (this.lastActiveItems[submenuLevel - 1]) this.focusOne(this.lastActiveItems[submenuLevel - 1]);
            }
        });
    }
    render() {
        return (0, _lit.html)`<slot @slotchange="${this.onSlotChange}" @click="${this.onClick}" @keydown="${this.onKeyDown}"></slot>`;
    }
    setSelectedKeys(selectedKeys) {
        if (!(0, _arrayJs.arraysEqualIgnoreOrder)(this.selectedKeys, selectedKeys)) this.selectedKeys = selectedKeys;
    }
    setValue(value) {
        if (this.isSingle || (0, _helperJs.isUndefined)(this.value) || (0, _helperJs.isUndefined)(value)) this.value = value;
        else if (!(0, _arrayJs.arraysEqualIgnoreOrder)(this.value, value)) this.value = value;
    }
    // 获取和指定菜单项同级的所有菜单项
    getSiblingsItems(item, onlyEnabled = false) {
        return (0, _js.$)(item).parent().children(`mdui-menu-item${onlyEnabled ? ":not([disabled])" : ""}`).get();
    }
    // 更新 menu-item 的可聚焦状态
    updateFocusable() {
        // 焦点优先放在之前焦点所在的元素上
        if (this.lastActiveItem) {
            this.items.forEach((item)=>{
                item.focusable = item.key === this.lastActiveItem.key;
            });
            return;
        }
        // 没有选中任何一项，焦点放在第一个 menu-item 上
        if (!this.selectedKeys.length) {
            this.itemsEnabled.forEach((item, index)=>{
                item.focusable = !index;
            });
            return;
        }
        // 如果是单选，焦点放在当前选中的元素上
        if (this.isSingle) {
            this.items.forEach((item)=>{
                item.focusable = this.selectedKeys.includes(item.key);
            });
            return;
        }
        // 是多选，且原焦点不在 selectedKeys 上，焦点放在第一个选中的 menu-item 上
        if (this.isMultiple) {
            const focusableItem = this.items.find((item)=>item.focusable);
            if (!focusableItem?.key || !this.selectedKeys.includes(focusableItem.key)) this.itemsEnabled.filter((item)=>this.selectedKeys.includes(item.key)).forEach((item, index)=>item.focusable = !index);
        }
    }
    updateSelected() {
        // 选中 menu-item
        this.items.forEach((item)=>{
            item.selected = this.selectedKeys.includes(item.key);
        });
    }
    // 切换一个菜单项的选中状态
    selectOne(item) {
        if (this.isMultiple) {
            // 直接修改 this.selectedKeys 无法被 watch 监听到，需要先克隆一份 this.selectedKeys
            const selectedKeys = [
                ...this.selectedKeys
            ];
            if (selectedKeys.includes(item.key)) selectedKeys.splice(selectedKeys.indexOf(item.key), 1);
            else selectedKeys.push(item.key);
            this.setSelectedKeys(selectedKeys);
        }
        if (this.isSingle) {
            if (this.selectedKeys.includes(item.key)) this.setSelectedKeys([]);
            else this.setSelectedKeys([
                item.key
            ]);
        }
        this.isInitial = false;
        this.updateSelected();
    }
    // 使一个 menu-item 可聚焦
    async focusableOne(item) {
        this.items.forEach((_item)=>_item.focusable = _item.key === item.key);
        await (0, _delayJs.delay)(); // 等待 focusableMixin 更新完成
    }
    // 聚焦一个 menu-item
    focusOne(item, options) {
        item.focus(options);
    }
    async onClick(event) {
        if (!this.definedController.isDefined()) return;
        if (this.isSubmenu) return;
        // event.button 为 0 时，为鼠标左键点击。忽略鼠标中间和右键
        if (event.button) return;
        const target = event.target;
        const item = target.closest("mdui-menu-item");
        if (!item || item.disabled) return;
        this.lastActiveItem = item;
        if (this.isSelectable && item.value) this.selectOne(item);
        await this.focusableOne(item);
        this.focusOne(item);
    }
    async onKeyDown(event) {
        if (!this.definedController.isDefined()) return;
        if (this.isSubmenu) return;
        const item = event.target;
        // 按回车键，触发点击
        if (event.key === "Enter") {
            event.preventDefault();
            item.click();
        }
        // 按下空格键时，阻止页面向下滚动，切换选中状态
        if (event.key === " ") {
            event.preventDefault();
            if (this.isSelectable && item.value) {
                this.selectOne(item);
                await this.focusableOne(item);
                this.focusOne(item);
            }
        }
        // 按下方向键时，上下移动焦点；只在和当前 item 同级的 item 直接切换
        if ([
            "ArrowUp",
            "ArrowDown",
            "Home",
            "End"
        ].includes(event.key)) {
            const items = this.getSiblingsItems(item, true);
            const activeItem = items.find((item)=>item.focusable);
            let index = activeItem ? items.indexOf(activeItem) : 0;
            if (items.length > 0) {
                event.preventDefault();
                if (event.key === "ArrowDown") index++;
                else if (event.key === "ArrowUp") index--;
                else if (event.key === "Home") index = 0;
                else if (event.key === "End") index = items.length - 1;
                if (index < 0) index = items.length - 1;
                if (index > items.length - 1) index = 0;
                this.lastActiveItem = items[index];
                await this.focusableOne(items[index]);
                this.focusOne(items[index]);
                return;
            }
        }
    }
};
Menu.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _menuStyleJs.menuStyle)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Menu.prototype, "selects", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)()
], Menu.prototype, "value", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Menu.prototype, "dense", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "submenu-trigger"
    })
], Menu.prototype, "submenuTrigger", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Number,
        reflect: true,
        attribute: "submenu-open-delay"
    })
], Menu.prototype, "submenuOpenDelay", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Number,
        reflect: true,
        attribute: "submenu-close-delay"
    })
], Menu.prototype, "submenuCloseDelay", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], Menu.prototype, "selectedKeys", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.queryAssignedElements)({
        flatten: true,
        selector: "mdui-menu-item"
    })
], Menu.prototype, "childrenItems", void 0);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("dense"),
    (0, _watchJs.watch)("selects"),
    (0, _watchJs.watch)("submenuTrigger"),
    (0, _watchJs.watch)("submenuOpenDelay"),
    (0, _watchJs.watch)("submenuCloseDelay")
], Menu.prototype, "onSlotChange", null);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("selects", true)
], Menu.prototype, "onSelectsChange", null);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("selectedKeys", true)
], Menu.prototype, "onSelectedKeysChange", null);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("value")
], Menu.prototype, "onValueChange", null);
Menu = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-menu")
], Menu);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","@mdui/jq/$.js":"dZx9v","@mdui/jq/methods/add.js":"aC4Lq","@mdui/jq/methods/children.js":"ext9M","@mdui/jq/methods/find.js":"7eUR4","@mdui/jq/methods/get.js":"bzhq8","@mdui/jq/methods/is.js":"iN2DI","@mdui/jq/methods/parent.js":"4VHuP","@mdui/jq/methods/parents.js":"2RLUs","@mdui/jq/shared/helper.js":"4D489","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/controllers/defined.js":"9Omrp","@mdui/shared/decorators/watch.js":"20Qzb","@mdui/shared/helpers/array.js":"gRRlE","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/helpers/delay.js":"3F3q2","@mdui/shared/lit-styles/component-style.js":"jFNMX","./menu-style.js":"bb0DR","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bb0DR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "menuStyle", ()=>menuStyle);
var _lit = require("lit");
const menuStyle = (0, _lit.css)`:host{--shape-corner:var(--mdui-shape-corner-extra-small);position:relative;display:block;border-radius:var(--shape-corner);background-color:rgb(var(--mdui-color-surface-container));box-shadow:var(--mdui-elevation-level2);min-width:7rem;max-width:17.5rem;padding-top:.5rem;padding-bottom:.5rem;--mdui-comp-ripple-state-layer-color:var(--mdui-color-on-surface)}::slotted(mdui-divider){margin-top:.5rem;margin-bottom:.5rem}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lndSV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _navigationBarItemJs = require("./navigation-bar/navigation-bar-item.js");
parcelHelpers.exportAll(_navigationBarItemJs, exports);

},{"./navigation-bar/navigation-bar-item.js":"5ML2r","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5ML2r":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "NavigationBarItem", ()=>NavigationBarItem);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _refJs = require("lit/directives/ref.js");
var _classcat = require("classcat");
var _classcatDefault = parcelHelpers.interopDefault(_classcat);
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _hasSlotJs = require("@mdui/shared/controllers/has-slot.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _templateJs = require("@mdui/shared/helpers/template.js");
var _uniqueIdJs = require("@mdui/shared/helpers/uniqueId.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _anchorJs = require("@mdui/shared/mixins/anchor.js");
var _focusableJs = require("@mdui/shared/mixins/focusable.js");
var _iconJs = require("../icon.js");
var _rippleMixinJs = require("../ripple/ripple-mixin.js");
var _navigationBarItemStyleJs = require("./navigation-bar-item-style.js");
/**
 * @summary 底部导航栏项组件。需与 `<mdui-navigation-bar>` 组件配合使用
 *
 * ```html
 * <mdui-navigation-bar>
 * ..<mdui-navigation-bar-item icon="place">Item 1</mdui-navigation-bar-item>
 * ..<mdui-navigation-bar-item icon="commute">Item 2</mdui-navigation-bar-item>
 * ..<mdui-navigation-bar-item icon="people">Item 3</mdui-navigation-bar-item>
 * </mdui-navigation-bar>
 * ```
 *
 * @slot - 文本
 * @slot icon - 图标
 * @slot active-icon - 激活状态的图标元素
 * @slot badge - 徽标
 *
 * @event focus - 获得焦点时触发
 * @event blur - 失去焦点时触发
 *
 * @csspart container - 导航项容器
 * @csspart indicator - 指示器
 * @csspart badge - 徽标
 * @csspart icon - 图标
 * @csspart active-icon - 激活状态的图标
 * @csspart label - 文本
 *
 * @cssprop --shape-corner-indicator - 指示器的圆角大小。可以指定一个具体的像素值；但更推荐[引用设计令牌](/docs/2/styles/design-tokens#shape-corner)
 */ let NavigationBarItem = class NavigationBarItem extends (0, _anchorJs.AnchorMixin)((0, _rippleMixinJs.RippleMixin)((0, _focusableJs.FocusableMixin)((0, _mduiElementJs.MduiElement)))) {
    constructor(){
        super(...arguments);
        /**
         * 是否是初始状态，不显示动画。由 `<mdui-navigation-bar>` 组件控制该参数
         */ this.isInitial = true;
        /**
         * 是否为激活状态，由 `<mdui-navigation-bar>` 组件控制该参数
         */ this.active = false;
        // 是否禁用该元素，该组件没有禁用状态
        this.disabled = false;
        // 每一个 `<navigation-bar-item>` 元素都添加一个唯一的 key
        this.key = (0, _uniqueIdJs.uniqueId)();
        this.rippleRef = (0, _refJs.createRef)();
        this.hasSlotController = new (0, _hasSlotJs.HasSlotController)(this, "active-icon");
    }
    get rippleElement() {
        return this.rippleRef.value;
    }
    get rippleDisabled() {
        return this.disabled;
    }
    get focusElement() {
        return this.href ? this.renderRoot?.querySelector("._a") : this;
    }
    get focusDisabled() {
        return this.disabled;
    }
    render() {
        const labelVisibilityClassName = (0, _classcatDefault.default)({
            "label-visibility-selected": this.labelVisibility === "selected",
            "label-visibility-labeled": this.labelVisibility === "labeled",
            "label-visibility-unlabeled": this.labelVisibility === "unlabeled",
            initial: this.isInitial
        });
        const className = (0, _classcatDefault.default)([
            {
                container: true,
                "has-active-icon": this.activeIcon || this.hasSlotController.test("active-icon")
            },
            labelVisibilityClassName
        ]);
        return (0, _lit.html)`<mdui-ripple .noRipple="${!this.active || this.noRipple}" class="${labelVisibilityClassName}" ${(0, _refJs.ref)(this.rippleRef)}></mdui-ripple>${this.href ? this.renderAnchor({
            part: "container",
            className,
            content: this.renderInner()
        }) : (0, _lit.html)`<div part="container" class="${className}">${this.renderInner()}</div>`}`;
    }
    renderInner() {
        return (0, _lit.html)`<div part="indicator" class="indicator"><slot name="badge" part="badge" class="badge"></slot><slot name="active-icon" part="active-icon" class="active-icon">${this.activeIcon ? (0, _lit.html)`<mdui-icon name="${this.activeIcon}"></mdui-icon>` : (0, _templateJs.nothingTemplate)}</slot><slot name="icon" part="icon" class="icon">${this.icon ? (0, _lit.html)`<mdui-icon name="${this.icon}"></mdui-icon>` : (0, _templateJs.nothingTemplate)}</slot></div><slot part="label" class="label"></slot>`;
    }
};
NavigationBarItem.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _navigationBarItemStyleJs.navigationBarItemStyle)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], NavigationBarItem.prototype, "icon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "active-icon"
    })
], NavigationBarItem.prototype, "activeIcon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], NavigationBarItem.prototype, "value", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], NavigationBarItem.prototype, "labelVisibility", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], NavigationBarItem.prototype, "isInitial", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], NavigationBarItem.prototype, "active", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], NavigationBarItem.prototype, "disabled", void 0);
NavigationBarItem = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-navigation-bar-item")
], NavigationBarItem);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/ref.js":"eKwmp","classcat":"9ww9D","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/controllers/has-slot.js":"cARnY","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/helpers/template.js":"7SHVu","@mdui/shared/helpers/uniqueId.js":"4DPTP","@mdui/shared/lit-styles/component-style.js":"jFNMX","@mdui/shared/mixins/anchor.js":"lvjeP","@mdui/shared/mixins/focusable.js":"kzhFM","../icon.js":"6YN4l","../ripple/ripple-mixin.js":"djWHz","./navigation-bar-item-style.js":"9KLnb","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9KLnb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "navigationBarItemStyle", ()=>navigationBarItemStyle);
var _lit = require("lit");
const navigationBarItemStyle = (0, _lit.css)`:host{--shape-corner-indicator:var(--mdui-shape-corner-full);position:relative;z-index:0;flex:1;overflow:hidden;min-width:3rem;--mdui-comp-ripple-state-layer-color:var(--mdui-color-on-surface-variant)}.container{display:flex;flex-direction:column;align-items:center;justify-content:center;height:100%;text-decoration:none;cursor:pointer;-webkit-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;padding-top:.75rem;padding-bottom:.75rem}.container:not(.initial){transition:padding var(--mdui-motion-duration-short4) var(--mdui-motion-easing-standard)}mdui-ripple{z-index:1;left:50%;transform:translateX(-50%);width:4rem;height:2rem;margin-top:.75rem;border-radius:var(--mdui-shape-corner-full)}mdui-ripple:not(.initial){transition:margin-top var(--mdui-motion-duration-short4) var(--mdui-motion-easing-standard)}.indicator{position:relative;display:flex;align-items:center;justify-content:center;background-color:transparent;border-radius:var(--shape-corner-indicator);height:2rem;width:2rem}:not(.initial) .indicator{transition:background-color var(--mdui-motion-duration-short1) var(--mdui-motion-easing-standard),width var(--mdui-motion-duration-short4) var(--mdui-motion-easing-standard)}::slotted([slot=badge]){position:absolute;transform:translate(50%,-50%)}::slotted([slot=badge][variant=small]){transform:translate(.5625rem,-.5625rem)}.active-icon,.icon{color:rgb(var(--mdui-color-on-surface-variant));font-size:1.5rem}.active-icon mdui-icon,.icon mdui-icon,::slotted([slot=active]),::slotted([slot=icon]){font-size:inherit}.icon{display:flex}.active-icon{display:none}.label{display:flex;align-items:center;height:1rem;color:rgb(var(--mdui-color-on-surface-variant));margin-top:.25rem;margin-bottom:.25rem;font-size:var(--mdui-typescale-label-medium-size);font-weight:var(--mdui-typescale-label-medium-weight);letter-spacing:var(--mdui-typescale-label-medium-tracking);line-height:var(--mdui-typescale-label-medium-line-height)}:not(.initial) .label{transition:opacity var(--mdui-motion-duration-short4) var(--mdui-motion-easing-linear)}:host(:not([active])) mdui-ripple.label-visibility-selected,mdui-ripple.label-visibility-unlabeled{margin-top:1.5rem}.container.label-visibility-unlabeled,:host(:not([active])) .container.label-visibility-selected{padding-top:1.5rem;padding-bottom:0}.container.label-visibility-unlabeled .label,:host(:not([active])) .container.label-visibility-selected .label{opacity:0}:host([active]){--mdui-comp-ripple-state-layer-color:var(--mdui-color-on-surface)}:host([active]) .indicator{width:4rem;background-color:rgb(var(--mdui-color-secondary-container))}:host([active]) .active-icon,:host([active]) .icon{color:rgb(var(--mdui-color-on-secondary-container))}:host([active]) .has-active-icon .active-icon{display:flex}:host([active]) .has-active-icon .icon{display:none}:host([active]) .label{color:rgb(var(--mdui-color-on-surface))}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6H59B":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _navigationBarJs = require("./navigation-bar/navigation-bar.js");
parcelHelpers.exportAll(_navigationBarJs, exports);

},{"./navigation-bar/navigation-bar.js":"hPgfa","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hPgfa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "NavigationBar", ()=>NavigationBar);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _definedJs = require("@mdui/shared/controllers/defined.js");
var _watchJs = require("@mdui/shared/decorators/watch.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _scrollBehaviorJs = require("@mdui/shared/mixins/scrollBehavior.js");
var _layoutItemBaseJs = require("../layout/layout-item-base.js");
var _navigationBarStyleJs = require("./navigation-bar-style.js");
/**
 * @summary 底部导航栏组件。需与 `<mdui-navigation-bar-item>` 组件配合使用
 *
 * ```html
 * <mdui-navigation-bar>
 * ..<mdui-navigation-bar-item icon="place">Item 1</mdui-navigation-bar-item>
 * ..<mdui-navigation-bar-item icon="commute">Item 2</mdui-navigation-bar-item>
 * ..<mdui-navigation-bar-item icon="people">Item 3</mdui-navigation-bar-item>
 * </mdui-navigation-bar>
 * ```
 *
 * @event change - 值变化时触发
 * @event show - 开始显示时，事件被触发。可以通过调用 `event.preventDefault()` 阻止显示
 * @event shown - 显示动画完成时，事件被触发
 * @event hide - 开始隐藏时，事件被触发。可以通过调用 `event.preventDefault()` 阻止隐藏
 * @event hidden - 隐藏动画完成时，事件被触发
 *
 * @slot - `<mdui-navigation-bar-item>` 组件
 *
 * @cssprop --shape-corner - 组件的圆角大小。可以指定一个具体的像素值；但更推荐[引用设计令牌](/docs/2/styles/design-tokens#shape-corner)
 * @cssprop --z-index - 组件的 CSS 的 `z-index` 值
 */ let NavigationBar = class NavigationBar extends (0, _scrollBehaviorJs.ScrollBehaviorMixin)((0, _layoutItemBaseJs.LayoutItemBase)) {
    constructor(){
        super(...arguments);
        /**
         * 是否隐藏
         */ this.hide = false;
        /**
         * 文本的可视状态。可选值为：
         *
         * * `auto`：小于等于3个选项时，始终显示；大于3个选项时，仅显示选中状态的文本
         * * `selected`：仅选中状态显示文本
         * * `labeled`：始终显示文本
         * * `unlabeled`：始终不显示文本
         */ this.labelVisibility = "auto";
        // 因为 navigation-bar-item 的 value 可能会重复，所以在每个 navigation-bar-item 元素上都添加了一个唯一的 key，通过 activeKey 来记录激活状态的 key
        this.activeKey = 0;
        // 是否是初始状态，初始状态不触发 change 事件，没有动画
        this.isInitial = true;
        this.definedController = new (0, _definedJs.DefinedController)(this, {
            relatedElements: [
                "mdui-navigation-bar-item"
            ]
        });
    }
    get scrollPaddingPosition() {
        return "bottom";
    }
    get layoutPlacement() {
        return "bottom";
    }
    async onActiveKeyChange() {
        await this.definedController.whenDefined();
        // 根据 activeKey 读取对应 navigation-bar-item 的值
        const item = this.items.find((item)=>item.key === this.activeKey);
        this.value = item?.value;
        if (!this.isInitial) this.emit("change");
    }
    async onValueChange() {
        this.isInitial = !this.hasUpdated;
        await this.definedController.whenDefined();
        const item = this.items.find((item)=>item.value === this.value);
        this.activeKey = item?.key ?? 0;
        this.updateItems();
    }
    async onLabelVisibilityChange() {
        await this.definedController.whenDefined();
        this.updateItems();
    }
    firstUpdated(_changedProperties) {
        super.firstUpdated(_changedProperties);
        this.addEventListener("transitionend", (event)=>{
            if (event.target === this) this.emit(this.hide ? "hidden" : "shown");
        });
    }
    render() {
        return (0, _lit.html)`<slot @slotchange="${this.onSlotChange}" @click="${this.onClick}"></slot>`;
    }
    /**
     * 滚动行为
     * 当前仅支持 hide 这一个行为，所以不做行为类型判断
     */ runScrollThreshold(isScrollingUp) {
        // 向下滚动
        if (!isScrollingUp && !this.hide) {
            const eventProceeded = this.emit("hide", {
                cancelable: true
            });
            if (eventProceeded) this.hide = true;
        }
        // 向上滚动
        if (isScrollingUp && this.hide) {
            const eventProceeded = this.emit("show", {
                cancelable: true
            });
            if (eventProceeded) this.hide = false;
        }
    }
    onClick(event) {
        // event.button 为 0 时，为鼠标左键点击。忽略鼠标中键和右键
        if (event.button) return;
        const target = event.target;
        const item = target.closest("mdui-navigation-bar-item");
        if (!item) return;
        this.activeKey = item.key;
        this.isInitial = false;
        this.updateItems();
    }
    // 更新 <mdui-navigation-bar-item> 的状态
    updateItems() {
        const items = this.items;
        // <mdui-navigation-bar-item> 的 labelVisibility 不含 auto
        const labelVisibility = this.labelVisibility === "auto" ? items.length <= 3 ? "labeled" : "selected" : this.labelVisibility;
        items.forEach((item)=>{
            item.active = this.activeKey === item.key;
            item.labelVisibility = labelVisibility;
            item.isInitial = this.isInitial;
        });
    }
    async onSlotChange() {
        await this.definedController.whenDefined();
        this.updateItems();
    }
};
NavigationBar.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _navigationBarStyleJs.navigationBarStyle)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], NavigationBar.prototype, "hide", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "label-visibility"
    })
], NavigationBar.prototype, "labelVisibility", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], NavigationBar.prototype, "value", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "scroll-behavior"
    })
], NavigationBar.prototype, "scrollBehavior", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], NavigationBar.prototype, "activeKey", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.queryAssignedElements)({
        selector: "mdui-navigation-bar-item",
        flatten: true
    })
], NavigationBar.prototype, "items", void 0);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("activeKey", true)
], NavigationBar.prototype, "onActiveKeyChange", null);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("value")
], NavigationBar.prototype, "onValueChange", null);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("labelVisibility", true)
], NavigationBar.prototype, "onLabelVisibilityChange", null);
NavigationBar = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-navigation-bar")
], NavigationBar);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","@mdui/shared/controllers/defined.js":"9Omrp","@mdui/shared/decorators/watch.js":"20Qzb","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/lit-styles/component-style.js":"jFNMX","@mdui/shared/mixins/scrollBehavior.js":"lHJ5r","../layout/layout-item-base.js":"jgZrI","./navigation-bar-style.js":"99MCK","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"99MCK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "navigationBarStyle", ()=>navigationBarStyle);
var _lit = require("lit");
const navigationBarStyle = (0, _lit.css)`:host{--shape-corner:var(--mdui-shape-corner-none);--z-index:2000;position:fixed;right:0;bottom:0;left:0;display:flex;flex:0 0 auto;overflow:hidden;border-radius:var(--shape-corner) var(--shape-corner) 0 0;z-index:var(--z-index);transition-property:transform;transition-duration:var(--mdui-motion-duration-long2);transition-timing-function:var(--mdui-motion-easing-emphasized);height:5rem;background-color:rgb(var(--mdui-color-surface));box-shadow:var(--mdui-elevation-level2)}:host([scroll-target]:not([scroll-target=''])){position:absolute}:host([hide]){transform:translateY(5.625rem);transition-duration:var(--mdui-motion-duration-short4)}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"wNUsh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./navigation-drawer/index.js");
parcelHelpers.exportAll(_indexJs, exports);

},{"./navigation-drawer/index.js":"jbIXH","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jbIXH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "NavigationDrawer", ()=>NavigationDrawer);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _refJs = require("lit/directives/ref.js");
var _whenJs = require("lit/directives/when.js");
var _js = require("@mdui/jq/$.js");
var _cssJs = require("@mdui/jq/methods/css.js");
var _innerWidthJs = require("@mdui/jq/methods/innerWidth.js");
var _helperJs = require("@mdui/jq/shared/helper.js");
var _definedJs = require("@mdui/shared/controllers/defined.js");
var _watchJs = require("@mdui/shared/decorators/watch.js");
var _animateJs = require("@mdui/shared/helpers/animate.js");
var _breakpointJs = require("@mdui/shared/helpers/breakpoint.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _modalJs = require("@mdui/shared/helpers/modal.js");
var _motionJs = require("@mdui/shared/helpers/motion.js");
var _observeResizeJs = require("@mdui/shared/helpers/observeResize.js");
var _scrollJs = require("@mdui/shared/helpers/scroll.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _layoutItemBaseJs = require("../layout/layout-item-base.js");
var _styleJs = require("./style.js");
/**
 * 在手机端，`modal` 始终为 `true`；大于手机端时，`modal` 属性才开始生效
 *
 * @summary 侧边抽屉栏组件
 *
 * ```html
 * <mdui-navigation-drawer>content</mdui-navigation-drawer>
 * ```
 *
 * @event open - 在抽屉导航打开之前触发。可以通过调用 `event.preventDefault()` 阻止抽屉导航打开
 * @event opened - 在抽屉导航打开之后触发
 * @event close - 在抽屉导航关闭之前触发。可以通过调用 `event.preventDefault()` 阻止抽屉导航关闭
 * @event closed - 在抽屉导航关闭之后触发
 * @event overlay-click - 点击遮罩层时触发
 *
 * @slot - 抽屉导航中的内容
 *
 * @csspart overlay - 遮罩层
 * @csspart panel - 抽屉导航容器
 *
 * @cssprop --shape-corner - 组件的圆角大小。可以指定一个具体的像素值；但更推荐[引用设计令牌](/docs/2/styles/design-tokens#shape-corner)
 * @cssprop --z-index - 组件的 CSS 的 `z-index` 值
 */ let NavigationDrawer = class NavigationDrawer extends (0, _layoutItemBaseJs.LayoutItemBase) {
    constructor(){
        super(...arguments);
        /**
         * 是否打开抽屉导航
         */ this.open = false;
        /**
         * 打开时，是否显示遮罩层
         *
         * 较窄的设备上（屏幕宽度小于 [`--mdui-breakpoint-md`](/docs/2/styles/design-tokens#breakpoint) 时），会无视该参数，始终显示遮罩层
         */ this.modal = false;
        /**
         * 在含遮罩层时，是否在按下 ESC 键时，关闭抽屉导航
         */ this.closeOnEsc = false;
        /**
         * 是否在点击遮罩时，关闭抽屉导航
         */ this.closeOnOverlayClick = false;
        /**
         * 抽屉导航的显示位置。可选值为：
         *
         * * `left`：显示在左侧
         * * `right`：显示在右侧
         */ this.placement = "left";
        /**
         * 默认抽屉导航相对于 `body` 元素显示，该参数设置为 `true` 时，抽屉导航将相对于它的父元素显示
         *
         * Note:
         * 设置了该属性时，必须手动在父元素上设置样式 `position: relative; overflow: hidden;`
         */ this.contained = false;
        // 断点为 mobile 时为 `true` 时，强制使用遮罩层
        this.mobile = false;
        this.overlayRef = (0, _refJs.createRef)();
        this.panelRef = (0, _refJs.createRef)();
        this.definedController = new (0, _definedJs.DefinedController)(this, {
            needDomReady: true
        });
    }
    get layoutPlacement() {
        return this.placement;
    }
    get lockTarget() {
        return this.contained || this.isParentLayout ? this.parentElement : document.body;
    }
    get isModal() {
        return this.mobile || this.modal;
    }
    // contained 变更后，修改监听尺寸变化的元素。为 true 时，监听父元素；为 false 时，监听 body
    async onContainedChange() {
        await this.definedController.whenDefined();
        this.observeResize?.unobserve();
        this.observeResize = (0, _observeResizeJs.observeResize)(this.contained ? this.parentElement : document.body, ()=>{
            const target = this.contained ? this.parentElement : undefined;
            this.mobile = (0, _breakpointJs.breakpoint)(target).down("md");
            // 若位于 layout 中，且为模态化，则重新布局时，占据的宽度为 0
            if (this.isParentLayout) this.layoutManager.updateLayout(this, {
                width: this.isModal ? 0 : undefined
            });
        });
    }
    onPlacementChange() {
        if (this.isParentLayout) this.layoutManager.updateLayout(this);
    }
    async onMobileChange() {
        if (!this.open || this.isParentLayout || this.contained) return;
        await this.definedController.whenDefined();
        if (this.isModal) {
            (0, _scrollJs.lockScreen)(this, this.lockTarget);
            await this.getLockTargetAnimate(false, 0);
        } else {
            (0, _scrollJs.unlockScreen)(this, this.lockTarget);
            await this.getLockTargetAnimate(true, 0);
        }
    }
    async onOpenChange() {
        let panel = this.panelRef.value;
        let overlay = this.overlayRef.value;
        const isRight = this.placement === "right";
        const easingLinear = (0, _motionJs.getEasing)(this, "linear");
        const easingEmphasized = (0, _motionJs.getEasing)(this, "emphasized");
        // 在当前 drawer 位于 layout 中时，设置所有 layout-item 和 layout-main 元素的 transition 样式
        const setLayoutTransition = (duration, easing)=>{
            (0, _js.$)(this.layoutManager.getItemsAndMain()).css("transition", (0, _helperJs.isNull)(duration) ? null : `all ${duration}ms ${easing}`);
        };
        // 停止原有动画
        const stopOldAnimations = async ()=>{
            await Promise.all([
                this.isModal ? (0, _animateJs.stopAnimations)(overlay) : !this.isParentLayout ? (0, _animateJs.stopAnimations)(this.lockTarget) : Promise.resolve(),
                this.isModal ? (0, _animateJs.stopAnimations)(panel) : (0, _animateJs.stopAnimations)(this)
            ]);
        };
        // 打开
        // 要区分是否首次渲染，首次渲染时不触发事件，不执行动画；非首次渲染，触发事件，执行动画
        if (this.open) {
            const hasUpdated = this.hasUpdated;
            if (!hasUpdated) {
                await this.updateComplete;
                panel = this.panelRef.value;
                overlay = this.overlayRef.value;
            }
            if (hasUpdated) {
                const eventProceeded = this.emit("open", {
                    cancelable: true
                });
                if (!eventProceeded) return;
            }
            await this.definedController.whenDefined();
            this.style.display = "block";
            this.originalTrigger = document.activeElement;
            if (this.isModal) {
                this.modalHelper.activate();
                if (!this.contained) (0, _scrollJs.lockScreen)(this, this.lockTarget);
            }
            await stopOldAnimations();
            // 设置聚焦
            requestAnimationFrame(()=>{
                const autoFocusTarget = this.querySelector("[autofocus]");
                if (autoFocusTarget) autoFocusTarget.focus({
                    preventScroll: true
                });
                else panel.focus({
                    preventScroll: true
                });
            });
            const duration = (0, _motionJs.getDuration)(this, "long2");
            const animations = [];
            // 模态框 drawer，显示 overlay 动画
            if (this.isModal) animations.push((0, _animateJs.animateTo)(overlay, [
                {
                    opacity: 0
                },
                {
                    opacity: 1,
                    offset: 0.3
                },
                {
                    opacity: 1
                }
            ], {
                duration: hasUpdated ? duration : 0,
                easing: easingLinear
            }));
            else if (!this.isParentLayout) animations.push(this.getLockTargetAnimate(true, hasUpdated ? duration : 0));
            // 若位于 layout 中，则 layout-main 的 padding 变化需要有和 drawer 相同的动画
            // 但首次渲染不执行动画
            if (this.isParentLayout && hasUpdated) setLayoutTransition(duration, easingEmphasized);
            // drawer 显示动画
            animations.push((0, _animateJs.animateTo)(this.isModal ? panel : this, [
                {
                    transform: `translateX(${isRight ? "" : "-"}100%)`
                },
                {
                    transform: "translateX(0)"
                }
            ], {
                duration: hasUpdated ? duration : 0,
                easing: easingEmphasized
            }));
            await Promise.all(animations);
            // 若位于 layout 中，则 drawer 动画完成后，移除 layout-main 的动画
            if (this.isParentLayout && hasUpdated) setLayoutTransition(null);
            if (hasUpdated) this.emit("opened");
        } else if (this.hasUpdated) {
            // 关闭
            const eventProceeded = this.emit("close", {
                cancelable: true
            });
            if (!eventProceeded) return;
            await this.definedController.whenDefined();
            if (this.isModal) this.modalHelper.deactivate();
            await stopOldAnimations();
            const duration = (0, _motionJs.getDuration)(this, "short4");
            const animations = [];
            // 模态框 drawer，显示 overlay 动画
            if (this.isModal) animations.push((0, _animateJs.animateTo)(overlay, [
                {
                    opacity: 1
                },
                {
                    opacity: 0
                }
            ], {
                duration,
                easing: easingLinear
            }));
            else if (!this.isParentLayout) animations.push(this.getLockTargetAnimate(false, duration));
            // 若位于 layout 中，则 layout-main 的 padding 变化需要有和 drawer 相同的动画
            if (this.isParentLayout) {
                setLayoutTransition(duration, easingEmphasized);
                // 关闭动画开始时，drawer 的宽度不变。等到关闭动画结束，drawer 的宽度才变为 0
                // 为了 layout-main 的动画能在关闭动画开始时就执行，强制调用 updateLayout 更新布局
                this.layoutManager.updateLayout(this, {
                    width: 0
                });
            }
            // drawer 显示动画
            animations.push((0, _animateJs.animateTo)(this.isModal ? panel : this, [
                {
                    transform: "translateX(0)"
                },
                {
                    transform: `translateX(${isRight ? "" : "-"}100%)`
                }
            ], {
                duration,
                easing: easingEmphasized
            }));
            await Promise.all(animations);
            // 若位于 layout 中，则 drawer 动画结束后，移除 layout-main 的动画
            if (this.isParentLayout) setLayoutTransition(null);
            this.style.display = "none";
            if (this.isModal && !this.contained) (0, _scrollJs.unlockScreen)(this, this.lockTarget);
            // 抽屉导航关闭后，恢复焦点到原有的元素上
            const trigger = this.originalTrigger;
            if ((0, _helperJs.isFunction)(trigger?.focus)) setTimeout(()=>trigger.focus());
            this.emit("closed");
        }
    }
    connectedCallback() {
        super.connectedCallback();
        this.modalHelper = new (0, _modalJs.Modal)(this);
    }
    disconnectedCallback() {
        super.disconnectedCallback();
        (0, _scrollJs.unlockScreen)(this, this.lockTarget);
        this.observeResize?.unobserve();
    }
    firstUpdated(_changedProperties) {
        super.firstUpdated(_changedProperties);
        this.addEventListener("keydown", (event)=>{
            if (this.open && this.closeOnEsc && event.key === "Escape" && this.isModal) {
                event.stopPropagation();
                this.open = false;
            }
        });
    }
    render() {
        return (0, _lit.html)`${(0, _whenJs.when)(this.isModal, ()=>(0, _lit.html)`<div ${(0, _refJs.ref)(this.overlayRef)} part="overlay" class="overlay" @click="${this.onOverlayClick}"></div>`)}<slot ${(0, _refJs.ref)(this.panelRef)} part="panel" class="panel" tabindex="0"></slot>`;
    }
    onOverlayClick() {
        this.emit("overlay-click");
        if (this.closeOnOverlayClick) this.open = false;
    }
    getLockTargetAnimate(open, duration) {
        const paddingName = this.placement === "right" ? "paddingRight" : "paddingLeft";
        const panelWidth = (0, _js.$)(this.panelRef.value).innerWidth() + "px";
        return (0, _animateJs.animateTo)(this.lockTarget, [
            {
                [paddingName]: open ? 0 : panelWidth
            },
            {
                [paddingName]: open ? panelWidth : 0
            }
        ], {
            duration,
            easing: (0, _motionJs.getEasing)(this, "emphasized"),
            fill: "forwards"
        });
    }
};
NavigationDrawer.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _styleJs.style)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], NavigationDrawer.prototype, "open", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], NavigationDrawer.prototype, "modal", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter),
        attribute: "close-on-esc"
    })
], NavigationDrawer.prototype, "closeOnEsc", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter),
        attribute: "close-on-overlay-click"
    })
], NavigationDrawer.prototype, "closeOnOverlayClick", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], NavigationDrawer.prototype, "placement", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], NavigationDrawer.prototype, "contained", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], NavigationDrawer.prototype, "mobile", void 0);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("contained")
], NavigationDrawer.prototype, "onContainedChange", null);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("placement", true)
], NavigationDrawer.prototype, "onPlacementChange", null);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("mobile", true),
    (0, _watchJs.watch)("modal", true)
], NavigationDrawer.prototype, "onMobileChange", null);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("open")
], NavigationDrawer.prototype, "onOpenChange", null);
NavigationDrawer = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-navigation-drawer")
], NavigationDrawer);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/ref.js":"eKwmp","lit/directives/when.js":"5IbUr","@mdui/jq/$.js":"dZx9v","@mdui/jq/methods/css.js":"lzdJz","@mdui/jq/methods/innerWidth.js":"e8mrw","@mdui/jq/shared/helper.js":"4D489","@mdui/shared/controllers/defined.js":"9Omrp","@mdui/shared/decorators/watch.js":"20Qzb","@mdui/shared/helpers/animate.js":"abZbA","@mdui/shared/helpers/breakpoint.js":"jyFfU","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/helpers/modal.js":"jo62G","@mdui/shared/helpers/motion.js":"3ZuTY","@mdui/shared/helpers/observeResize.js":"fLGE3","@mdui/shared/helpers/scroll.js":"2m60Y","@mdui/shared/lit-styles/component-style.js":"jFNMX","../layout/layout-item-base.js":"jgZrI","./style.js":"7PeHv","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jyFfU":[function(require,module,exports) {
/**
 * 断点相关的 js 函数
 * 这些函数直接导出到 mdui 全局对象下，供应用使用。框架内部使用时，为避免循环依赖，从 @mdui/shared 包内导入
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "breakpoint", ()=>breakpoint);
var _ssrWindow = require("ssr-window");
var _js = require("@mdui/jq/$.js");
var _innerWidthJs = require("@mdui/jq/methods/innerWidth.js");
var _helperJs = require("@mdui/jq/shared/helper.js");
const breakpoint = (width)=>{
    const window = (0, _ssrWindow.getWindow)();
    const document = (0, _ssrWindow.getDocument)();
    const computedStyle = window.getComputedStyle(document.documentElement);
    // 容器的宽度
    const containerWidth = (0, _helperJs.isElement)(width) ? (0, _js.$)(width).innerWidth() : (0, _helperJs.isNumber)(width) ? width : (0, _js.$)(window).innerWidth();
    // 断点对应的宽度值
    const getBreakpointValue = (breakpoint)=>{
        const width = computedStyle.getPropertyValue(`--mdui-breakpoint-${breakpoint}`).toLowerCase();
        return parseFloat(width);
    };
    // 获取比指定断点更大的一个断点
    const getNextBreakpoint = (breakpoint)=>{
        switch(breakpoint){
            case "xs":
                return "sm";
            case "sm":
                return "md";
            case "md":
                return "lg";
            case "lg":
                return "xl";
            case "xl":
                return "xxl";
        }
    };
    return {
        /**
         * 当前宽度是否大于指定断点值
         * @param breakpoint
         */ up (breakpoint) {
            return containerWidth >= getBreakpointValue(breakpoint);
        },
        /**
         * 当前宽度是否小于指定断点值
         * @param breakpoint
         */ down (breakpoint) {
            return containerWidth < getBreakpointValue(breakpoint);
        },
        /**
         * 当前宽度是否在指定断点值内
         * @param breakpoint
         */ only (breakpoint) {
            if (breakpoint === "xxl") return this.up(breakpoint);
            else return this.up(breakpoint) && this.down(getNextBreakpoint(breakpoint));
        },
        /**
         * 当前宽度是否不在指定断点值内
         * @param breakpoint
         */ not (breakpoint) {
            return !this.only(breakpoint);
        },
        /**
         * 当前宽度是否在指定断点值之间
         * @param startBreakpoint
         * @param endBreakpoint
         * @returns
         */ between (startBreakpoint, endBreakpoint) {
            return this.up(startBreakpoint) && this.down(endBreakpoint);
        }
    };
};

},{"ssr-window":"3lyfI","@mdui/jq/$.js":"dZx9v","@mdui/jq/methods/innerWidth.js":"e8mrw","@mdui/jq/shared/helper.js":"4D489","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7PeHv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "style", ()=>style);
var _lit = require("lit");
const style = (0, _lit.css)`:host{--shape-corner:var(--mdui-shape-corner-large);--z-index:2200;display:none;position:fixed;top:0;bottom:0;left:0;z-index:1;width:22.5rem}:host([placement=right]){left:initial;right:0}:host([mobile]),:host([modal]){top:0!important;right:0;bottom:0!important;width:initial;z-index:var(--z-index)}:host([placement=right][mobile]),:host([placement=right][modal]){left:0}:host([contained]){position:absolute}.overlay{position:absolute;inset:0;z-index:inherit;background-color:rgba(var(--mdui-color-scrim),.4)}.panel{display:block;position:absolute;top:0;bottom:0;left:0;width:100%;overflow:auto;z-index:inherit;background-color:rgb(var(--mdui-color-surface));box-shadow:var(--mdui-elevation-level0)}:host([mobile]) .panel,:host([modal]) .panel{border-radius:0 var(--shape-corner) var(--shape-corner) 0;max-width:80%;width:22.5rem;background-color:rgb(var(--mdui-color-surface-container-low));box-shadow:var(--mdui-elevation-level1)}:host([placement=right]) .panel{left:initial;right:0}:host([placement=right][mobile]) .panel,:host([placement=right][modal]) .panel{border-radius:var(--shape-corner) 0 0 var(--shape-corner)}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4S3Zo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _navigationRailJs = require("./navigation-rail/navigation-rail.js");
parcelHelpers.exportAll(_navigationRailJs, exports);

},{"./navigation-rail/navigation-rail.js":"fQOaD","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fQOaD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "NavigationRail", ()=>NavigationRail);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _whenJs = require("lit/directives/when.js");
var _js = require("@mdui/jq/$.js");
var _cssJs = require("@mdui/jq/methods/css.js");
var _innerWidthJs = require("@mdui/jq/methods/innerWidth.js");
var _definedJs = require("@mdui/shared/controllers/defined.js");
var _hasSlotJs = require("@mdui/shared/controllers/has-slot.js");
var _watchJs = require("@mdui/shared/decorators/watch.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _layoutItemBaseJs = require("../layout/layout-item-base.js");
var _navigationRailStyleJs = require("./navigation-rail-style.js");
/**
 * @summary 侧边导航栏组件。需与 `<mdui-navigation-rail-item>` 组件配合使用
 *
 * ```html
 * <mdui-navigation-rail>
 * ..<mdui-navigation-rail-item icon="watch_later">Recent</mdui-navigation-rail-item>
 * ..<mdui-navigation-rail-item icon="image">Images</mdui-navigation-rail-item>
 * ..<mdui-navigation-rail-item icon="library_music">Library</mdui-navigation-rail-item>
 * </mdui-navigation-rail>
 * ```
 *
 * @event change - 值变化时触发
 *
 * @slot - `<mdui-navigation-rail-item>` 组件
 * @slot top - 顶部的元素
 * @slot bottom - 底部的元素
 *
 * @csspart top - 顶部元素的容器
 * @csspart bottom - 底部元素的容器
 * @csspart items - `<mdui-navigation-rail-item>` 组件的容器
 *
 * @cssprop --shape-corner - 组件的圆角大小。可以指定一个具体的像素值；但更推荐[引用设计令牌](/docs/2/styles/design-tokens#shape-corner)
 * @cssprop --z-index - 组件的 CSS 的 `z-index` 值
 */ let NavigationRail = class NavigationRail extends (0, _layoutItemBaseJs.LayoutItemBase) {
    constructor(){
        super(...arguments);
        /**
         * 导航栏的位置。可选值为：
         *
         * * `left`：显示在左侧
         * * `right`：显示在右侧
         */ this.placement = "left";
        /**
         * 导航栏中的 `<mdui-navigation-rail-item>` 元素的对齐方式。可选值为：
         *
         * * `start`：顶部对齐
         * * `center`：居中对齐
         * * `end`：底部对齐
         */ this.alignment = "start";
        /**
         * 默认导航栏相对于 `body` 元素显示，该参数设置为 `true` 时，导航栏将相对于它的父元素显示
         *
         * Note:
         * 设置了该属性时，必须手动在父元素上设置样式 `position: relative;`
         */ this.contained = false;
        /**
         * 是否在导航栏和页面内容之间添加分割线
         */ this.divider = false;
        // 因为 navigation-rail-item 的 value 可能会重复，所以在每个 navigation-rail-item 元素上都添加了一个唯一的 key，通过 activeKey 来记录激活状态的 key
        this.activeKey = 0;
        this.hasSlotController = new (0, _hasSlotJs.HasSlotController)(this, "top", "bottom");
        this.definedController = new (0, _definedJs.DefinedController)(this, {
            relatedElements: [
                "mdui-navigation-rail-item"
            ]
        });
        // 是否是初始状态，初始状态不触发事件，不执行动画
        this.isInitial = true;
    }
    get layoutPlacement() {
        return this.placement;
    }
    get parentTarget() {
        return this.contained || this.isParentLayout ? this.parentElement : document.body;
    }
    get isRight() {
        return this.placement === "right";
    }
    get paddingValue() {
        return [
            "fixed",
            "absolute"
        ].includes((0, _js.$)(this).css("position")) ? this.offsetWidth : undefined;
    }
    async onActiveKeyChange() {
        await this.definedController.whenDefined();
        // 根据 activeKey 读取对应 navigation-rail-item 的值
        const item = this.items.find((item)=>item.key === this.activeKey);
        this.value = item?.value;
        if (!this.isInitial) this.emit("change");
    }
    async onValueChange() {
        this.isInitial = !this.hasUpdated;
        await this.definedController.whenDefined();
        const item = this.items.find((item)=>item.value === this.value);
        this.activeKey = item?.key ?? 0;
        this.updateItems();
    }
    async onContainedChange() {
        if (this.isParentLayout) return;
        await this.definedController.whenDefined();
        (0, _js.$)(document.body).css({
            paddingLeft: this.contained || this.isRight ? null : this.paddingValue,
            paddingRight: this.contained || !this.isRight ? null : this.paddingValue
        });
        (0, _js.$)(this.parentElement).css({
            paddingLeft: this.contained && !this.isRight ? this.paddingValue : null,
            paddingRight: this.contained && this.isRight ? this.paddingValue : null
        });
    }
    async onPlacementChange() {
        await this.definedController.whenDefined();
        this.layoutManager?.updateLayout(this);
        this.items.forEach((item)=>{
            item.placement = this.placement;
        });
        if (!this.isParentLayout) (0, _js.$)(this.parentTarget).css({
            paddingLeft: this.isRight ? null : this.paddingValue,
            paddingRight: this.isRight ? this.paddingValue : null
        });
    }
    connectedCallback() {
        super.connectedCallback();
        if (!this.isParentLayout) this.definedController.whenDefined().then(()=>{
            (0, _js.$)(this.parentTarget).css({
                paddingLeft: this.isRight ? null : this.paddingValue,
                paddingRight: this.isRight ? this.paddingValue : null
            });
        });
    }
    disconnectedCallback() {
        super.disconnectedCallback();
        if (!this.isParentLayout && this.definedController.isDefined()) (0, _js.$)(this.parentTarget).css({
            paddingLeft: this.isRight ? undefined : null,
            paddingRight: this.isRight ? null : undefined
        });
    }
    render() {
        const hasTopSlot = this.hasSlotController.test("top");
        const hasBottomSlot = this.hasSlotController.test("bottom");
        return (0, _lit.html)`${(0, _whenJs.when)(hasTopSlot, ()=>(0, _lit.html)`<slot name="top" part="top" class="top"></slot>`)} <span class="top-spacer"></span><slot part="items" class="items" @slotchange="${this.onSlotChange}" @click="${this.onClick}"></slot><span class="bottom-spacer"></span> ${(0, _whenJs.when)(hasBottomSlot, ()=>(0, _lit.html)`<slot name="bottom" part="bottom" class="bottom"></slot>`)}`;
    }
    onClick(event) {
        // event.button 为 0 时，为鼠标左键点击。忽略鼠标中键和右键
        if (event.button) return;
        const target = event.target;
        const item = target.closest("mdui-navigation-rail-item");
        if (!item) return;
        this.activeKey = item.key;
        this.isInitial = false;
        this.updateItems();
    }
    updateItems() {
        this.items.forEach((item)=>{
            item.active = this.activeKey === item.key;
            item.placement = this.placement;
            item.isInitial = this.isInitial;
        });
    }
    async onSlotChange() {
        await this.definedController.whenDefined();
        this.updateItems();
    }
};
NavigationRail.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _navigationRailStyleJs.navigationRailStyle)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], NavigationRail.prototype, "value", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], NavigationRail.prototype, "placement", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], NavigationRail.prototype, "alignment", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], NavigationRail.prototype, "contained", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], NavigationRail.prototype, "divider", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], NavigationRail.prototype, "activeKey", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.queryAssignedElements)({
        selector: "mdui-navigation-rail-item",
        flatten: true
    })
], NavigationRail.prototype, "items", void 0);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("activeKey", true)
], NavigationRail.prototype, "onActiveKeyChange", null);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("value")
], NavigationRail.prototype, "onValueChange", null);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("contained", true)
], NavigationRail.prototype, "onContainedChange", null);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("placement", true)
], NavigationRail.prototype, "onPlacementChange", null);
NavigationRail = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-navigation-rail")
], NavigationRail);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/when.js":"5IbUr","@mdui/jq/$.js":"dZx9v","@mdui/jq/methods/css.js":"lzdJz","@mdui/jq/methods/innerWidth.js":"e8mrw","@mdui/shared/controllers/defined.js":"9Omrp","@mdui/shared/controllers/has-slot.js":"cARnY","@mdui/shared/decorators/watch.js":"20Qzb","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/lit-styles/component-style.js":"jFNMX","../layout/layout-item-base.js":"jgZrI","./navigation-rail-style.js":"5aapr","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5aapr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "navigationRailStyle", ()=>navigationRailStyle);
var _lit = require("lit");
const navigationRailStyle = (0, _lit.css)`:host{--shape-corner:var(--mdui-shape-corner-none);--z-index:2000;position:fixed;top:0;bottom:0;left:0;display:flex;flex-direction:column;align-items:center;border-radius:0 var(--shape-corner) var(--shape-corner) 0;z-index:var(--z-index);width:5rem;background-color:rgb(var(--mdui-color-surface));padding:.375rem .75rem}:host([contained]){position:absolute}:host([divider]){border-right:.0625rem solid rgb(var(--mdui-color-surface-variant));width:5.0625rem}:host([placement=right]){left:initial;right:0;border-radius:var(--shape-corner) 0 0 var(--shape-corner)}:host([placement=right][divider]){border-right:none;border-left:.0625rem solid rgb(var(--mdui-color-surface-variant))}.bottom,.items,.top{display:flex;flex-direction:column;align-items:center;width:100%}.top{margin-bottom:1.75rem}.bottom{margin-top:1.75rem}::slotted([slot=bottom]),::slotted([slot=top]),::slotted(mdui-navigation-rail-item){margin-top:.375rem;margin-bottom:.375rem}:host([alignment=start]) .top-spacer{flex-grow:0}:host([alignment=start]) .bottom-spacer{flex-grow:1}:host([alignment=end]) .top-spacer{flex-grow:1}:host([alignment=end]) .bottom-spacer{flex-grow:0}:host([alignment=center]){justify-content:center}:host([alignment=center]) .bottom,:host([alignment=center]) .top{position:absolute}:host([alignment=center]) .top{top:.375rem}:host([alignment=center]) .bottom{bottom:.375rem}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"49Xb4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _navigationRailItemJs = require("./navigation-rail/navigation-rail-item.js");
parcelHelpers.exportAll(_navigationRailItemJs, exports);

},{"./navigation-rail/navigation-rail-item.js":"j6EsC","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"j6EsC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "NavigationRailItem", ()=>NavigationRailItem);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _classMapJs = require("lit/directives/class-map.js");
var _refJs = require("lit/directives/ref.js");
var _classcat = require("classcat");
var _classcatDefault = parcelHelpers.interopDefault(_classcat);
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _hasSlotJs = require("@mdui/shared/controllers/has-slot.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _templateJs = require("@mdui/shared/helpers/template.js");
var _uniqueIdJs = require("@mdui/shared/helpers/uniqueId.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _anchorJs = require("@mdui/shared/mixins/anchor.js");
var _focusableJs = require("@mdui/shared/mixins/focusable.js");
var _iconJs = require("../icon.js");
var _rippleMixinJs = require("../ripple/ripple-mixin.js");
var _navigationRailItemStyleJs = require("./navigation-rail-item-style.js");
/**
 * @summary 侧边导航栏项组件。需与 `<mdui-navigation-rail>` 组件配合使用
 *
 * ```html
 * <mdui-navigation-rail>
 * ..<mdui-navigation-rail-item icon="watch_later">Recent</mdui-navigation-rail-item>
 * ..<mdui-navigation-rail-item icon="image">Images</mdui-navigation-rail-item>
 * ..<mdui-navigation-rail-item icon="library_music">Library</mdui-navigation-rail-item>
 * </mdui-navigation-rail>
 * ```
 *
 * @slot - 文本
 * @slot icon - 图标
 * @slot active-icon - 激活状态的图标
 * @slot badge - 徽标
 *
 * @event focus - 获得焦点时触发
 * @event blur - 失去焦点时触发
 *
 * @csspart container - 导航项容器
 * @csspart indicator - 指示器
 * @csspart badge - 徽标
 * @csspart icon - 图标
 * @csspart active-icon - 激活状态的图标
 * @csspart label - 文本
 *
 * @cssprop --shape-corner-indicator - 指示器的圆角大小。可以指定一个具体的像素值；但更推荐[引用设计令牌](/docs/2/styles/design-tokens#shape-corner)
 */ let NavigationRailItem = class NavigationRailItem extends (0, _anchorJs.AnchorMixin)((0, _rippleMixinJs.RippleMixin)((0, _focusableJs.FocusableMixin)((0, _mduiElementJs.MduiElement)))) {
    constructor(){
        super(...arguments);
        /**
         * 是否为激活状态，由 `<mdui-navigation-rail>` 组件控制该参数
         */ this.active = false;
        /**
         * 是否是初始状态，不显示动画。由 `<mdui-navigation-rail>` 组件控制该参数
         */ this.isInitial = true;
        /**
         * 导航栏的位置，由 `<mdui-navigation-rail>` 组件控制该参数
         */ this.placement = "left";
        // 是否禁用该元素，该组件没有禁用状态
        this.disabled = false;
        // 每一个 `<mdui-navigation-rail-item>` 元素都添加一个唯一的 key
        this.key = (0, _uniqueIdJs.uniqueId)();
        this.rippleRef = (0, _refJs.createRef)();
        this.hasSlotController = new (0, _hasSlotJs.HasSlotController)(this, "[default]", "active-icon");
    }
    get rippleElement() {
        return this.rippleRef.value;
    }
    get rippleDisabled() {
        return this.disabled;
    }
    get focusElement() {
        return this.href ? this.renderRoot?.querySelector("._a") : this;
    }
    get focusDisabled() {
        return this.disabled;
    }
    render() {
        const hasDefaultSlot = this.hasSlotController.test("[default]");
        const className = (0, _classcatDefault.default)({
            container: true,
            "has-label": hasDefaultSlot,
            "has-active-icon": this.activeIcon || this.hasSlotController.test("active-icon"),
            initial: this.isInitial
        });
        return (0, _lit.html)`${this.href ? this.renderAnchor({
            part: "container",
            className,
            content: this.renderInner(hasDefaultSlot)
        }) : (0, _lit.html)`<div part="container" class="${className}">${this.renderInner(hasDefaultSlot)}</div>`}<mdui-ripple .noRipple="${!this.active || this.noRipple}" ${(0, _refJs.ref)(this.rippleRef)}></mdui-ripple>`;
    }
    renderInner(hasDefaultSlot) {
        return (0, _lit.html)`<div part="indicator" class="indicator"><slot name="badge" part="badge" class="${(0, _classMapJs.classMap)({
            badge: true,
            "placement-right": this.placement === "right"
        })}"></slot><slot name="active-icon" part="active-icon" class="active-icon">${this.activeIcon ? (0, _lit.html)`<mdui-icon name="${this.activeIcon}"></mdui-icon>` : (0, _templateJs.nothingTemplate)}</slot><slot name="icon" part="icon" class="icon">${this.icon ? (0, _lit.html)`<mdui-icon name="${this.icon}"></mdui-icon>` : (0, _templateJs.nothingTemplate)}</slot></div>${hasDefaultSlot ? (0, _lit.html)`<slot part="label" class="label"></slot>` : (0, _lit.nothing)}`;
    }
};
NavigationRailItem.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _navigationRailItemStyleJs.navigationRailItemStyle)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], NavigationRailItem.prototype, "icon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "active-icon"
    })
], NavigationRailItem.prototype, "activeIcon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], NavigationRailItem.prototype, "value", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], NavigationRailItem.prototype, "active", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], NavigationRailItem.prototype, "isInitial", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], NavigationRailItem.prototype, "placement", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], NavigationRailItem.prototype, "disabled", void 0);
NavigationRailItem = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-navigation-rail-item")
], NavigationRailItem);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/class-map.js":"jiVKL","lit/directives/ref.js":"eKwmp","classcat":"9ww9D","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/controllers/has-slot.js":"cARnY","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/helpers/template.js":"7SHVu","@mdui/shared/helpers/uniqueId.js":"4DPTP","@mdui/shared/lit-styles/component-style.js":"jFNMX","@mdui/shared/mixins/anchor.js":"lvjeP","@mdui/shared/mixins/focusable.js":"kzhFM","../icon.js":"6YN4l","../ripple/ripple-mixin.js":"djWHz","./navigation-rail-item-style.js":"74ys1","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"74ys1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "navigationRailItemStyle", ()=>navigationRailItemStyle);
var _lit = require("lit");
const navigationRailItemStyle = (0, _lit.css)`:host{--shape-corner-indicator:var(--mdui-shape-corner-full);position:relative;z-index:0;width:100%;--mdui-comp-ripple-state-layer-color:var(--mdui-color-on-surface-variant)}.container{display:flex;flex-direction:column;align-items:center;justify-content:center;text-decoration:none;cursor:pointer;-webkit-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;height:3.5rem}.container:not(.initial){transition:padding var(--mdui-motion-duration-short4) var(--mdui-motion-easing-standard)}mdui-ripple{z-index:1;width:3.5rem;height:2rem;border-radius:var(--mdui-shape-corner-full)}.container:not(.has-label)+mdui-ripple{height:3.5rem}.indicator{position:relative;display:flex;align-items:center;justify-content:center;background-color:transparent;border-radius:var(--shape-corner-indicator);height:2rem;width:2rem}:not(.initial) .indicator{transition:background-color var(--mdui-motion-duration-short1) var(--mdui-motion-easing-standard),width var(--mdui-motion-duration-short4) var(--mdui-motion-easing-standard),height var(--mdui-motion-duration-short4) var(--mdui-motion-easing-standard)}::slotted([slot=badge]){position:absolute;transform:translate(50%,-50%)}.placement-right::slotted([slot=badge]){transform:translate(-50%,-50%)}::slotted([slot=badge][variant=small]){transform:translate(.5625rem,-.5625rem)}.placement-right::slotted([slot=badge][variant=small]){transform:translate(-.5625rem,-.5625rem)}.active-icon,.icon{color:rgb(var(--mdui-color-on-surface-variant));font-size:1.5rem}.active-icon mdui-icon,.icon mdui-icon,::slotted([slot=active-icon]),::slotted([slot=icon]){font-size:inherit}.icon{display:flex}.active-icon{display:none}.label{display:flex;align-items:center;height:1rem;color:rgb(var(--mdui-color-on-surface-variant));margin-top:.25rem;margin-bottom:.25rem;font-size:var(--mdui-typescale-label-medium-size);font-weight:var(--mdui-typescale-label-medium-weight);letter-spacing:var(--mdui-typescale-label-medium-tracking);line-height:var(--mdui-typescale-label-medium-line-height)}:not(.initial) .label{transition:opacity var(--mdui-motion-duration-short4) var(--mdui-motion-easing-linear)}:host([active]){--mdui-comp-ripple-state-layer-color:var(--mdui-color-on-surface)}:host([active]) .indicator{width:3.5rem;background-color:rgb(var(--mdui-color-secondary-container))}:host([active]) :not(.has-label) .indicator{height:3.5rem}:host([active]) .active-icon,:host([active]) .icon{color:rgb(var(--mdui-color-on-secondary-container))}:host([active]) .has-active-icon .active-icon{display:flex}:host([active]) .has-active-icon .icon{display:none}:host([active]) .label{color:rgb(var(--mdui-color-on-surface))}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cdiXB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _radioJs = require("./radio/radio.js");
parcelHelpers.exportAll(_radioJs, exports);

},{"./radio/radio.js":"7Vo8u","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7Vo8u":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Radio", ()=>Radio);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _classMapJs = require("lit/directives/class-map.js");
var _refJs = require("lit/directives/ref.js");
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _watchJs = require("@mdui/shared/decorators/watch.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _circleJs = require("@mdui/shared/icons/circle.js");
var _radioButtonUncheckedJs = require("@mdui/shared/icons/radio-button-unchecked.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _focusableJs = require("@mdui/shared/mixins/focusable.js");
var _iconJs = require("../icon.js");
var _rippleMixinJs = require("../ripple/ripple-mixin.js");
var _radioStyleJs = require("./radio-style.js");
/**
 * @summary 单选框组件。需与 `<mdui-radio-group>` 组件配合使用
 *
 * ```html
 * <mdui-radio-group value="chinese">
 * ..<mdui-radio value="chinese">Chinese</mdui-radio>
 * ..<mdui-radio value="english">English</mdui-radio>
 * </mdui-radio-group>
 * ```
 *
 * @event focus - 获得焦点时触发
 * @event blur - 失去焦点时触发
 * @event change - 选中该单选项时触发
 *
 * @slot - 文本
 * @slot unchecked-icon - 未选中状态的图标
 * @slot checked-icon - 选中状态的图标
 *
 * @csspart control - 左侧图标容器
 * @csspart unchecked-icon 未选中状态的图标
 * @csspart checked-icon 选中状态的图标
 * @csspart label - 文本
 */ let Radio = class Radio extends (0, _rippleMixinJs.RippleMixin)((0, _focusableJs.FocusableMixin)((0, _mduiElementJs.MduiElement))) {
    constructor(){
        super(...arguments);
        /**
         * 当前单选项的值
         */ this.value = "";
        /**
         * 是否禁用当前单选项
         */ this.disabled = false;
        /**
         * 当前单选项是否已选中
         */ this.checked = false;
        // 是否验证未通过。由 <mdui-radio-group> 控制该参数
        this.invalid = false;
        // 父组件中是否设置了禁用。由 <mdui-radio-group> 控制该参数
        this.groupDisabled = false;
        // 是否可聚焦。
        // 单独使用该组件时，默认可聚焦。
        // 如果放在 <mdui-radio-group> 组件中使用，则由 <mdui-radio-group> 控制该参数
        this.focusable = true;
        // 是否是初始状态，不显示动画。由 <mdui-radio-group> 组件控制该参数
        this.isInitial = true;
        this.rippleRef = (0, _refJs.createRef)();
    }
    get rippleElement() {
        return this.rippleRef.value;
    }
    get rippleDisabled() {
        return this.isDisabled();
    }
    get focusElement() {
        return this;
    }
    get focusDisabled() {
        return this.isDisabled() || !this.focusable;
    }
    onCheckedChange() {
        this.emit("change");
    }
    firstUpdated(_changedProperties) {
        super.firstUpdated(_changedProperties);
        this.addEventListener("click", ()=>{
            if (!this.isDisabled()) this.checked = true;
        });
    }
    render() {
        const className = (0, _classMapJs.classMap)({
            invalid: this.invalid,
            initial: this.isInitial
        });
        return (0, _lit.html)`<i part="control" class="${className}"><mdui-ripple ${(0, _refJs.ref)(this.rippleRef)} .noRipple="${this.noRipple}"></mdui-ripple><slot name="unchecked-icon" part="unchecked-icon" class="icon unchecked-icon">${this.uncheckedIcon ? (0, _lit.html)`<mdui-icon name="${this.uncheckedIcon}" class="i"></mdui-icon>` : (0, _lit.html)`<mdui-icon-radio-button-unchecked class="i"></mdui-icon-radio-button-unchecked>`}</slot><slot name="checked-icon" part="checked-icon" class="icon checked-icon">${this.checkedIcon ? (0, _lit.html)`<mdui-icon name="${this.checkedIcon}" class="i"></mdui-icon>` : (0, _lit.html)`<mdui-icon-circle class="i"></mdui-icon-circle>`}</slot></i><slot part="label" class="label ${className}"></slot>`;
    }
    isDisabled() {
        return this.disabled || this.groupDisabled;
    }
};
Radio.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _radioStyleJs.radioStyle)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Radio.prototype, "value", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Radio.prototype, "disabled", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Radio.prototype, "checked", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "unchecked-icon"
    })
], Radio.prototype, "uncheckedIcon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "checked-icon"
    })
], Radio.prototype, "checkedIcon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], Radio.prototype, "invalid", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter),
        attribute: "group-disabled"
    })
], Radio.prototype, "groupDisabled", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], Radio.prototype, "focusable", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], Radio.prototype, "isInitial", void 0);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("checked", true)
], Radio.prototype, "onCheckedChange", null);
Radio = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-radio")
], Radio);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/class-map.js":"jiVKL","lit/directives/ref.js":"eKwmp","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/decorators/watch.js":"20Qzb","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/icons/circle.js":"9AqsN","@mdui/shared/icons/radio-button-unchecked.js":"geWgH","@mdui/shared/lit-styles/component-style.js":"jFNMX","@mdui/shared/mixins/focusable.js":"kzhFM","../icon.js":"6YN4l","../ripple/ripple-mixin.js":"djWHz","./radio-style.js":"QbmuB","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9AqsN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "IconCircle", ()=>IconCircle);
var _tslib = require("tslib");
var _lit = require("lit");
var _customElementJs = require("lit/decorators/custom-element.js");
var _styleJs = require("./shared/style.js");
var _svgTagJs = require("./shared/svg-tag.js");
let IconCircle = class IconCircle extends (0, _lit.LitElement) {
    render() {
        return (0, _svgTagJs.svgTag)('<path d="M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2z"/>');
    }
};
IconCircle.styles = (0, _styleJs.style);
IconCircle = (0, _tslib.__decorate)([
    (0, _customElementJs.customElement)("mdui-icon-circle")
], IconCircle);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators/custom-element.js":"i1eyG","./shared/style.js":"a02xN","./shared/svg-tag.js":"4bX1Q","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"geWgH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "IconRadioButtonUnchecked", ()=>IconRadioButtonUnchecked);
var _tslib = require("tslib");
var _lit = require("lit");
var _customElementJs = require("lit/decorators/custom-element.js");
var _styleJs = require("./shared/style.js");
var _svgTagJs = require("./shared/svg-tag.js");
let IconRadioButtonUnchecked = class IconRadioButtonUnchecked extends (0, _lit.LitElement) {
    render() {
        return (0, _svgTagJs.svgTag)('<path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"/>');
    }
};
IconRadioButtonUnchecked.styles = (0, _styleJs.style);
IconRadioButtonUnchecked = (0, _tslib.__decorate)([
    (0, _customElementJs.customElement)("mdui-icon-radio-button-unchecked")
], IconRadioButtonUnchecked);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators/custom-element.js":"i1eyG","./shared/style.js":"a02xN","./shared/svg-tag.js":"4bX1Q","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"QbmuB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "radioStyle", ()=>radioStyle);
var _lit = require("lit");
const radioStyle = (0, _lit.css)`:host{position:relative;display:inline-flex;align-items:center;cursor:pointer;-webkit-tap-highlight-color:transparent;-webkit-user-select:none;user-select:none;touch-action:manipulation;zoom:1;-webkit-user-drag:none;border-radius:.125rem;font-size:var(--mdui-typescale-label-large-size);font-weight:var(--mdui-typescale-label-large-weight);letter-spacing:var(--mdui-typescale-label-large-tracking);line-height:var(--mdui-typescale-label-large-line-height)}.icon{display:flex;position:absolute;font-size:1.5rem}:not(.initial) .icon{transition-duration:var(--mdui-motion-duration-short4);transition-timing-function:var(--mdui-motion-easing-standard)}.unchecked-icon{transition-property:color;color:rgb(var(--mdui-color-on-surface-variant))}:host([focused]) .unchecked-icon,:host([hover]) .unchecked-icon,:host([pressed]) .unchecked-icon{color:rgb(var(--mdui-color-on-surface))}.checked-icon{opacity:0;transform:scale(.2);transition-property:color,opacity,transform;color:rgb(var(--mdui-color-primary))}.icon .i,::slotted([slot=checked-icon]),::slotted([slot=unchecked-icon]){color:inherit;font-size:inherit}i{position:relative;display:flex;align-items:center;justify-content:center;overflow:hidden;border-radius:50%;width:2.5rem;min-width:2.5rem;height:2.5rem;--mdui-comp-ripple-state-layer-color:var(--mdui-color-on-surface)}.label{display:flex;width:100%;padding-top:.625rem;padding-bottom:.625rem;color:rgb(var(--mdui-color-on-surface))}.label:not(.initial){transition:color var(--mdui-motion-duration-short4) var(--mdui-motion-easing-standard)}:host([checked]) i{--mdui-comp-ripple-state-layer-color:var(--mdui-color-primary)}:host([checked]) .icon{color:rgb(var(--mdui-color-primary))}:host([checked]) .checked-icon{opacity:1;transform:scale(.5)}i.invalid{--mdui-comp-ripple-state-layer-color:var(--mdui-color-error)}i.invalid .icon{color:rgb(var(--mdui-color-error))}.label.invalid{color:rgb(var(--mdui-color-error))}:host([disabled]),:host([group-disabled]){cursor:default;pointer-events:none}:host([disabled]) .icon,:host([group-disabled]) .icon{color:rgba(var(--mdui-color-on-surface),38%)}:host([disabled]) .label,:host([group-disabled]) .label{color:rgba(var(--mdui-color-on-surface),38%)}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kgsKw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _radioGroupJs = require("./radio/radio-group.js");
parcelHelpers.exportAll(_radioGroupJs, exports);

},{"./radio/radio-group.js":"ggnwo","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ggnwo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "RadioGroup", ()=>RadioGroup);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _ifDefinedJs = require("lit/directives/if-defined.js");
var _refJs = require("lit/directives/ref.js");
var _js = require("@mdui/jq/$.js");
var _closestJs = require("@mdui/jq/methods/closest.js");
var _findJs = require("@mdui/jq/methods/find.js");
var _getJs = require("@mdui/jq/methods/get.js");
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _definedJs = require("@mdui/shared/controllers/defined.js");
var _formJs = require("@mdui/shared/controllers/form.js");
var _defaultValueJs = require("@mdui/shared/decorators/default-value.js");
var _watchJs = require("@mdui/shared/decorators/watch.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _radioGroupStyleJs = require("./radio-group-style.js");
/**
 * @summary 单选框组组件。需与 `<mdui-radio>` 组件配合使用
 *
 * ```html
 * <mdui-radio-group value="chinese">
 * ..<mdui-radio value="chinese">Chinese</mdui-radio>
 * ..<mdui-radio value="english">English</mdui-radio>
 * </mdui-radio-group>
 * ```
 *
 * @event change - 选中值变化时触发
 * @event input - 选中值变化时触发
 * @event invalid - 表单字段验证未通过时触发
 *
 * @slot - `<mdui-radio>` 元素
 */ let RadioGroup = class RadioGroup extends (0, _mduiElementJs.MduiElement) {
    constructor(){
        super(...arguments);
        /**
         * 是否为禁用状态
         */ this.disabled = false;
        /**
         * 单选框名称，将与表单数据一起提交
         */ this.name = "";
        /**
         * 单选框的值，将于表单数据一起提交
         */ this.value = "";
        /**
         * 默认选中的值。在重置表单时，将重置为该默认值。该属性只能通过 JavaScript 属性设置
         */ this.defaultValue = "";
        /**
         * 提交表单时，是否必须选中其中一个单选框
         */ this.required = false;
        /**
         * 是否验证未通过
         */ this.invalid = false;
        // 是否是初始状态，初始状态不显示动画
        this.isInitial = true;
        this.inputRef = (0, _refJs.createRef)();
        this.formController = new (0, _formJs.FormController)(this);
        this.definedController = new (0, _definedJs.DefinedController)(this, {
            relatedElements: [
                "mdui-radio"
            ]
        });
    }
    /**
     * 表单验证状态对象
     */ get validity() {
        return this.inputRef.value.validity;
    }
    /**
     * 表单验证的错误提示信息
     */ get validationMessage() {
        return this.inputRef.value.validationMessage;
    }
    // 为了使 <mdui-radio> 可以不是该组件的直接子元素，这里不用 @queryAssignedElements()
    get items() {
        return (0, _js.$)(this).find("mdui-radio").get();
    }
    get itemsEnabled() {
        return (0, _js.$)(this).find("mdui-radio:not([disabled])").get();
    }
    async onValueChange() {
        this.isInitial = false;
        await this.definedController.whenDefined();
        this.emit("input");
        this.emit("change");
        this.updateItems();
        this.updateRadioFocusable();
        await this.updateComplete;
        // reset 引起的值变更，不执行验证；直接修改值引起的变更，需要进行验证
        const form = this.formController.getForm();
        if (form && (0, _formJs.formResets).get(form)?.has(this)) {
            this.invalid = false;
            (0, _formJs.formResets).get(form).delete(this);
        } else this.invalid = !this.inputRef.value.checkValidity();
    }
    async onInvalidChange() {
        await this.definedController.whenDefined();
        this.updateItems();
    }
    /**
     * 检查表单字段是否验证通过。若未通过则返回 `false`，并触发 `invalid` 事件；若验证通过，则返回 `true`
     */ checkValidity() {
        const valid = this.inputRef.value.checkValidity();
        if (!valid) this.emit("invalid", {
            bubbles: false,
            cancelable: true,
            composed: false
        });
        return valid;
    }
    /**
     * 检查表单字段是否验证通过。若未通过则返回 `false`，并触发 `invalid` 事件；若验证通过，则返回 `true`。
     *
     * 验证未通过时，还将在组件上显示未通过的提示。
     */ reportValidity() {
        this.invalid = !this.inputRef.value.reportValidity();
        if (this.invalid) {
            const eventProceeded = this.emit("invalid", {
                bubbles: false,
                cancelable: true,
                composed: false
            });
            if (!eventProceeded) {
                // 调用了 preventDefault() 时，隐藏默认的表单错误提示
                this.inputRef.value.blur();
                this.inputRef.value.focus();
            }
        }
        return !this.invalid;
    }
    /**
     * 设置自定义的错误提示文本。只要文本不为空，则表示字段验证未通过
     *
     * @param message 自定义的提示文本
     */ setCustomValidity(message) {
        this.inputRef.value.setCustomValidity(message);
        this.invalid = !this.inputRef.value.checkValidity();
    }
    render() {
        return (0, _lit.html)`<fieldset><input ${(0, _refJs.ref)(this.inputRef)} type="radio" class="input" name="${(0, _ifDefinedJs.ifDefined)(this.name)}" value="${(0, _ifDefinedJs.ifDefined)(this.value)}" .checked="${!!this.value}" .required="${this.required}" tabindex="-1" @keydown="${this.onKeyDown}"><slot @click="${this.onClick}" @keydown="${this.onKeyDown}" @slotchange="${this.onSlotChange}" @change="${this.onCheckedChange}"></slot></fieldset>`;
    }
    // 更新 mdui-radio 的 checked 后，需要更新可聚焦状态
    // 同一个 mdui-radio-group 中的多个 mdui-radio，仅有一个可聚焦
    // 若有已选中的，则已选中的可聚焦；若没有已选中的，则第一个可聚焦
    updateRadioFocusable() {
        const items = this.items;
        const itemChecked = items.find((item)=>item.checked);
        if (itemChecked) items.forEach((item)=>{
            item.focusable = item === itemChecked;
        });
        else this.itemsEnabled.forEach((item, index)=>{
            item.focusable = !index;
        });
    }
    async onClick(event) {
        await this.definedController.whenDefined();
        const target = event.target;
        const item = target.closest("mdui-radio");
        if (!item || item.disabled) return;
        this.value = item.value;
        await this.updateComplete;
        item.focus();
    }
    /**
     * 在内部的 `<mdui-radio>` 上按下按键时，在 `<mdui-radio>` 之间切换焦点
     */ async onKeyDown(event) {
        if (![
            "ArrowUp",
            "ArrowDown",
            "ArrowLeft",
            "ArrowRight",
            " "
        ].includes(event.key)) return;
        event.preventDefault();
        await this.definedController.whenDefined();
        const items = this.itemsEnabled;
        const itemChecked = items.find((item)=>item.checked) ?? items[0];
        const incr = event.key === " " ? 0 : [
            "ArrowUp",
            "ArrowLeft"
        ].includes(event.key) ? -1 : 1;
        let index = items.indexOf(itemChecked) + incr;
        if (index < 0) index = items.length - 1;
        if (index > items.length - 1) index = 0;
        this.value = items[index].value;
        await this.updateComplete;
        items[index].focus();
    }
    async onSlotChange() {
        await this.definedController.whenDefined();
        this.updateItems();
        this.updateRadioFocusable();
    }
    /**
     * slot 中的 mdui-radio 的 checked 变更时触发的事件
     */ onCheckedChange(event) {
        event.stopPropagation();
    }
    // 更新 <mdui-radio> 的状态
    updateItems() {
        this.items.forEach((item)=>{
            item.checked = item.value === this.value;
            item.invalid = this.invalid;
            item.groupDisabled = this.disabled;
            item.isInitial = this.isInitial;
        });
    }
};
RadioGroup.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _radioGroupStyleJs.radioGroupStyle)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], RadioGroup.prototype, "disabled", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], RadioGroup.prototype, "form", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], RadioGroup.prototype, "name", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], RadioGroup.prototype, "value", void 0);
(0, _tslib.__decorate)([
    (0, _defaultValueJs.defaultValue)()
], RadioGroup.prototype, "defaultValue", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], RadioGroup.prototype, "required", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], RadioGroup.prototype, "invalid", void 0);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("value", true)
], RadioGroup.prototype, "onValueChange", null);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("invalid", true),
    (0, _watchJs.watch)("disabled")
], RadioGroup.prototype, "onInvalidChange", null);
RadioGroup = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-radio-group")
], RadioGroup);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/if-defined.js":"77RTn","lit/directives/ref.js":"eKwmp","@mdui/jq/$.js":"dZx9v","@mdui/jq/methods/closest.js":"6k5sD","@mdui/jq/methods/find.js":"7eUR4","@mdui/jq/methods/get.js":"bzhq8","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/controllers/defined.js":"9Omrp","@mdui/shared/controllers/form.js":"9HuZO","@mdui/shared/decorators/default-value.js":"lGYLk","@mdui/shared/decorators/watch.js":"20Qzb","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/lit-styles/component-style.js":"jFNMX","./radio-group-style.js":"kiU7D","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kiU7D":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "radioGroupStyle", ()=>radioGroupStyle);
var _lit = require("lit");
const radioGroupStyle = (0, _lit.css)`:host{display:inline-block}fieldset{border:none;padding:0;margin:0;min-width:0}input{position:absolute;padding:0;opacity:0;pointer-events:none;width:1.25rem;height:1.25rem;margin:0 0 0 .625rem}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2CgG9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./range-slider/index.js");
parcelHelpers.exportAll(_indexJs, exports);

},{"./range-slider/index.js":"c4uxK","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"c4uxK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "RangeSlider", ()=>RangeSlider);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _classMapJs = require("lit/directives/class-map.js");
var _mapJs = require("lit/directives/map.js");
var _refJs = require("lit/directives/ref.js");
var _styleMapJs = require("lit/directives/style-map.js");
var _whenJs = require("lit/directives/when.js");
var _js = require("@mdui/jq/$.js");
var _cssJs = require("@mdui/jq/methods/css.js");
var _formJs = require("@mdui/shared/controllers/form.js");
var _defaultValueJs = require("@mdui/shared/decorators/default-value.js");
var _sliderBaseJs = require("../slider/slider-base.js");
/**
 * @summary 范围滑块组件
 *
 * ```html
 * <mdui-range-slider></mdui-range-slider>
 * ```
 *
 * @event focus - 获得焦点时触发
 * @event blur - 失去焦点时触发
 * @event change - 在值发生了变更，且失去了焦点时，将触发该事件
 * @event input - 值变更时触发
 * @event invalid - 表单字段验证未通过时触发
 *
 * @csspart track-inactive - 未激活状态的轨道
 * @csspart track-active - 已激活状态的轨道
 * @csspart handle - 操作杆
 * @csspart label - 提示文本
 * @csspart tickmark - 刻度标记
 */ let RangeSlider = class RangeSlider extends (0, _sliderBaseJs.SliderBase) {
    constructor(){
        super(...arguments);
        /**
         * 默认值。在重置表单时，将重置为该默认值。该属性只能通过 JavaScript 属性设置
         */ this.defaultValue = [];
        /**
         * 当前操作的是哪一个 handle
         */ this.currentHandle = "start";
        this.rippleStartRef = (0, _refJs.createRef)();
        this.rippleEndRef = (0, _refJs.createRef)();
        this.handleStartRef = (0, _refJs.createRef)();
        this.handleEndRef = (0, _refJs.createRef)();
        this.formController = new (0, _formJs.FormController)(this);
        this._value = [];
        this.getRippleIndex = ()=>{
            if (this.hoverHandle) return this.hoverHandle === "start" ? 0 : 1;
            return this.currentHandle === "start" ? 0 : 1;
        };
    }
    /**
     * 滑块的值，为数组格式；将于表单数据一起提交
     *
     * NOTE:
     * 该属性无法通过 HTML 属性设置初始值，如果要修改该值，只能通过修改 JavaScript 属性值实现。
     */ get value() {
        return this._value;
    }
    set value(_value) {
        const oldValue = [
            ...this._value
        ];
        this._value = [
            this.fixValue(_value[0]),
            this.fixValue(_value[1])
        ];
        this.requestUpdate("value", oldValue);
        this.updateComplete.then(()=>{
            this.updateStyle();
            // reset 引起的值变更，不执行验证；直接修改值引起的变更，需要进行验证
            const form = this.formController.getForm();
            if (form && (0, _formJs.formResets).get(form)?.has(this)) {
                this.invalid = false;
                (0, _formJs.formResets).get(form).delete(this);
            } else this.invalid = !this.inputRef.value.checkValidity();
        });
    }
    get rippleElement() {
        return [
            this.rippleStartRef.value,
            this.rippleEndRef.value
        ];
    }
    connectedCallback() {
        super.connectedCallback();
        if (!this.value.length) this.value = [
            this.min,
            this.max
        ];
        this.value[0] = this.fixValue(this.value[0]);
        this.value[1] = this.fixValue(this.value[1]);
        if (!this.defaultValue.length) this.defaultValue = [
            ...this.value
        ];
    }
    firstUpdated(changedProperties) {
        super.firstUpdated(changedProperties);
        // 在轨道上点击时，计算出点击位置在 <input type="range"> 元素上的值
        // 若该值在 this.value 的两个值中间位置的左侧，则表示操作的是左侧的值，否则操作的是右侧的值
        const getCurrentHandle = (event)=>{
            const $this = (0, _js.$)(this);
            // 计算出鼠标悬浮位置的值，<mdui-range-slider> 元素的左右两侧有内边距，计算时要去除内边距
            const paddingLeft = parseFloat($this.css("padding-left"));
            const paddingRight = parseFloat($this.css("padding-right"));
            const percent = (event.offsetX - paddingLeft) / (this.clientWidth - paddingLeft - paddingRight);
            const pointerValue = (this.max - this.min) * percent + this.min;
            // 计算 this.value 两个值中间位置的值
            const middleValue = (this.value[1] - this.value[0]) / 2 + this.value[0];
            return pointerValue > middleValue ? "end" : "start";
        };
        const onTouchStart = ()=>{
            if (!this.disabled) this.labelVisible = true;
        };
        const onTouchEnd = ()=>{
            if (!this.disabled) this.labelVisible = false;
        };
        this.addEventListener("touchstart", onTouchStart);
        this.addEventListener("mousedown", onTouchStart);
        this.addEventListener("touchend", onTouchEnd);
        this.addEventListener("mouseup", onTouchEnd);
        // 按下鼠标时，计算当前操作的是起始值还是结束值
        this.addEventListener("pointerdown", (event)=>{
            this.currentHandle = getCurrentHandle(event);
        });
        // 移动鼠标时，修改 mdui-ripple 的 hover 状态
        this.addEventListener("pointermove", (event)=>{
            const currentHandle = getCurrentHandle(event);
            if (this.hoverHandle !== currentHandle) {
                this.endHover(event);
                this.hoverHandle = currentHandle;
                this.startHover(event);
            }
        });
        this.updateStyle();
    }
    /**
     * <input /> 用于提供拖拽操作
     * <input class="invalid" /> 用于提供 html5 自带的表单错误提示
     */ render() {
        return (0, _lit.html)`<label class="${(0, _classMapJs.classMap)({
            invalid: this.invalid
        })}"><input ${(0, _refJs.ref)(this.inputRef)} type="range" step="${this.step}" min="${this.min}" max="${this.max}" ?disabled="${this.disabled}" @input="${this.onInput}" @change="${this.onChange}"><div part="track-inactive" class="track-inactive"></div><div ${(0, _refJs.ref)(this.trackActiveRef)} part="track-active" class="track-active"></div><div ${(0, _refJs.ref)(this.handleStartRef)} part="handle" class="handle start" style="${(0, _styleMapJs.styleMap)({
            "z-index": this.currentHandle === "start" ? "2" : "1"
        })}"><div class="elevation"></div><mdui-ripple ${(0, _refJs.ref)(this.rippleStartRef)} .noRipple="${this.noRipple}"></mdui-ripple>${this.renderLabel(this.value[0])}</div><div ${(0, _refJs.ref)(this.handleEndRef)} part="handle" class="handle end" style="${(0, _styleMapJs.styleMap)({
            "z-index": this.currentHandle === "end" ? "2" : "1"
        })}"><div class="elevation"></div><mdui-ripple ${(0, _refJs.ref)(this.rippleEndRef)} .noRipple="${this.noRipple}"></mdui-ripple>${this.renderLabel(this.value[1])}</div>${(0, _whenJs.when)(this.tickmarks, ()=>(0, _mapJs.map)(this.getCandidateValues(), (value)=>(0, _lit.html)`<div part="tickmark" class="tickmark ${(0, _classMapJs.classMap)({
                    active: value > this.value[0] && value < this.value[1]
                })}" style="${(0, _styleMapJs.styleMap)({
                    left: `${(value - this.min) / this.max * 100}%`,
                    display: value === this.value[0] || value === this.value[1] ? "none" : "block"
                })}"></div>`))}</label>`;
    }
    updateStyle() {
        const getPercent = (value)=>(value - this.min) / (this.max - this.min) * 100;
        const startPercent = getPercent(this.value[0]);
        const endPercent = getPercent(this.value[1]);
        this.trackActiveRef.value.style.width = `${endPercent - startPercent}%`;
        this.trackActiveRef.value.style.left = `${startPercent}%`;
        this.handleStartRef.value.style.left = `${startPercent}%`;
        this.handleEndRef.value.style.left = `${endPercent}%`;
    }
    onInput() {
        const isStart = this.currentHandle === "start";
        const value = parseFloat(this.inputRef.value.value);
        const startValue = this.value[0];
        const endValue = this.value[1];
        const doInput = ()=>{
            this.updateStyle();
        };
        if (isStart) {
            if (value <= endValue) {
                this.value = [
                    value,
                    endValue
                ];
                doInput();
            } else if (startValue !== endValue) {
                this.value = [
                    endValue,
                    endValue
                ];
                doInput();
            }
        } else {
            if (value >= startValue) {
                this.value = [
                    startValue,
                    value
                ];
                doInput();
            } else if (startValue !== endValue) {
                this.value = [
                    startValue,
                    startValue
                ];
                doInput();
            }
        }
    }
};
RangeSlider.styles = [
    (0, _sliderBaseJs.SliderBase).styles
];
(0, _tslib.__decorate)([
    (0, _defaultValueJs.defaultValue)()
], RangeSlider.prototype, "defaultValue", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], RangeSlider.prototype, "currentHandle", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Array,
        attribute: false
    })
], RangeSlider.prototype, "value", null);
RangeSlider = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-range-slider")
], RangeSlider);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/class-map.js":"jiVKL","lit/directives/map.js":"ejxgA","lit/directives/ref.js":"eKwmp","lit/directives/style-map.js":"4GQsu","lit/directives/when.js":"5IbUr","@mdui/jq/$.js":"dZx9v","@mdui/jq/methods/css.js":"lzdJz","@mdui/shared/controllers/form.js":"9HuZO","@mdui/shared/decorators/default-value.js":"lGYLk","../slider/slider-base.js":"5EtTc","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ejxgA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _mapJs = require("lit-html/directives/map.js");
parcelHelpers.exportAll(_mapJs, exports);

},{"lit-html/directives/map.js":"7r7rb","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7r7rb":[function(require,module,exports) {
/**
 * @license
 * Copyright 2021 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "map", ()=>o);
function* o(o, f) {
    if (void 0 !== o) {
        let i = 0;
        for (const t of o)yield f(t, i++);
    }
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5EtTc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SliderBase", ()=>SliderBase);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _classMapJs = require("lit/directives/class-map.js");
var _refJs = require("lit/directives/ref.js");
var _whenJs = require("lit/directives/when.js");
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _watchJs = require("@mdui/shared/decorators/watch.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _focusableJs = require("@mdui/shared/mixins/focusable.js");
var _rippleMixinJs = require("../ripple/ripple-mixin.js");
var _sliderBaseStyleJs = require("./slider-base-style.js");
class SliderBase extends (0, _rippleMixinJs.RippleMixin)((0, _focusableJs.FocusableMixin)((0, _mduiElementJs.MduiElement))) {
    constructor(){
        super(...arguments);
        /**
         * 最小允许值，默认为 `0`
         */ this.min = 0;
        /**
         * 最大允许值，默认为 `100`
         */ this.max = 100;
        /**
         * 步进间隔，默认为 `1`
         */ this.step = 1;
        /**
         * 是否添加刻度标记
         */ this.tickmarks = false;
        /**
         * 是否不显示文本提示
         */ this.nolabel = false;
        /**
         * 是否禁用
         */ this.disabled = false;
        /**
         * 滑块名称，将与表单数据一起提交
         */ this.name = "";
        /**
         * 是否验证未通过
         *
         * 该验证为根据是否通过 `setCustomValidity` 方法设置了值，来判断是否验证通过
         */ this.invalid = false;
        // 按下时，label 可见
        this.labelVisible = false;
        this.inputRef = (0, _refJs.createRef)();
        this.trackActiveRef = (0, _refJs.createRef)();
        /**
         * 用于自定义标签的显示格式
         */ this.labelFormatter = (value)=>value.toString();
    }
    /**
     * 表单验证状态对象
     */ get validity() {
        return this.inputRef.value.validity;
    }
    /**
     * 表单验证的错误提示信息
     */ get validationMessage() {
        return this.inputRef.value.validationMessage;
    }
    get rippleDisabled() {
        return this.disabled;
    }
    get focusElement() {
        return this.inputRef.value;
    }
    get focusDisabled() {
        return this.disabled;
    }
    onDisabledChange() {
        this.invalid = !this.inputRef.value.checkValidity();
    }
    /**
     * 检查表单字段是否验证通过。若未通过则返回 `false`，并触发 `invalid` 事件；若验证通过，则返回 `true`
     */ checkValidity() {
        const valid = this.inputRef.value.checkValidity();
        if (!valid) // @ts-ignore
        this.emit("invalid", {
            bubbles: false,
            cancelable: true,
            composed: false
        });
        return valid;
    }
    /**
     * 检查表单字段是否验证通过。若未通过则返回 `false`，并触发 `invalid` 事件；若验证通过，则返回 `true`。
     *
     * 验证未通过时，还将在组件上显示未通过的提示。
     */ reportValidity() {
        this.invalid = !this.inputRef.value.reportValidity();
        if (this.invalid) {
            // @ts-ignore
            const eventProceeded = this.emit("invalid", {
                bubbles: false,
                cancelable: true,
                composed: false
            });
            if (!eventProceeded) {
                // 调用了 preventDefault() 时，隐藏默认的表单错误提示
                this.blur();
                this.focus();
            }
        }
        return !this.invalid;
    }
    /**
     * 设置自定义的错误提示文本。只要文本不为空，则表示字段验证未通过
     *
     * @param message 自定义的提示文本
     */ setCustomValidity(message) {
        this.inputRef.value.setCustomValidity(message);
        this.invalid = !this.inputRef.value.checkValidity();
    }
    /**
     * value 不在 min、max 或 step 的限制范围内时，修正 value 的值
     */ fixValue(value) {
        const { min, max, step } = this;
        // 确保 value 在 min 和 max 范围内
        value = Math.min(Math.max(value, min), max);
        // 计算最接近 value 的 step 值
        const steps = Math.round((value - min) / step);
        let fixedValue = min + steps * step;
        // 如果修正后的值超出最大值，则减去一个 step
        if (fixedValue > max) fixedValue -= step;
        return fixedValue;
    }
    /**
     * 获取候选值组成的数组
     */ getCandidateValues() {
        return Array.from({
            length: this.max - this.min + 1
        }, (_, index)=>index + this.min).filter((value)=>!((value - this.min) % this.step));
    }
    /**
     * 渲染浮动标签
     */ renderLabel(value) {
        return (0, _whenJs.when)(!this.nolabel, ()=>(0, _lit.html)`<div part="label" class="label ${(0, _classMapJs.classMap)({
                "label-visible": this.labelVisible
            })}">${this.labelFormatter(value)}</div>`);
    }
    onChange() {
        // @ts-ignore
        this.emit("change");
    }
}
SliderBase.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _sliderBaseStyleJs.sliderBaseStyle)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Number,
        reflect: true
    })
], SliderBase.prototype, "min", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Number,
        reflect: true
    })
], SliderBase.prototype, "max", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Number,
        reflect: true
    })
], SliderBase.prototype, "step", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], SliderBase.prototype, "tickmarks", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], SliderBase.prototype, "nolabel", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], SliderBase.prototype, "disabled", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], SliderBase.prototype, "form", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], SliderBase.prototype, "name", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], SliderBase.prototype, "invalid", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], SliderBase.prototype, "labelVisible", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        attribute: false
    })
], SliderBase.prototype, "labelFormatter", void 0);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("disabled", true)
], SliderBase.prototype, "onDisabledChange", null);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/class-map.js":"jiVKL","lit/directives/ref.js":"eKwmp","lit/directives/when.js":"5IbUr","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/decorators/watch.js":"20Qzb","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/lit-styles/component-style.js":"jFNMX","@mdui/shared/mixins/focusable.js":"kzhFM","../ripple/ripple-mixin.js":"djWHz","./slider-base-style.js":"bqBdD","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bqBdD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "sliderBaseStyle", ()=>sliderBaseStyle);
var _lit = require("lit");
const sliderBaseStyle = (0, _lit.css)`:host{position:relative;display:block;width:100%;-webkit-tap-highlight-color:transparent;height:2.5rem;padding:0 1.25rem}label{position:relative;display:block;width:100%;height:100%}input[type=range]{position:absolute;inset:0;z-index:4;height:100%;cursor:pointer;opacity:0;-webkit-appearance:none;appearance:none;width:calc(100% + 20rem * 2 / 16);margin:0 -1.25rem;padding:0 .75rem}:host([disabled]) input[type=range]{cursor:not-allowed}.track-active,.track-inactive{position:absolute;top:50%;height:.25rem;margin-top:-.125rem}.track-inactive{left:-.125rem;right:-.125rem;border-radius:var(--mdui-shape-corner-full);background-color:rgb(var(--mdui-color-surface-container-highest))}.invalid .track-inactive{background-color:rgba(var(--mdui-color-error),.12)}:host([disabled]) .track-inactive{background-color:rgba(var(--mdui-color-on-surface),.12)}.track-active{background-color:rgb(var(--mdui-color-primary))}.invalid .track-active{background-color:rgb(var(--mdui-color-error))}:host([disabled]) .track-active{background-color:rgba(var(--mdui-color-on-surface),.38)}.handle{position:absolute;top:50%;transform:translate(-50%);cursor:pointer;z-index:2;width:2.5rem;height:2.5rem;margin-top:-1.25rem;--mdui-comp-ripple-state-layer-color:var(--mdui-color-primary)}.invalid .handle{--mdui-comp-ripple-state-layer-color:var(--mdui-color-error)}.handle .elevation,.handle::before{position:absolute;display:block;content:' ';left:.625rem;top:.625rem;width:1.25rem;height:1.25rem;border-radius:var(--mdui-shape-corner-full)}.handle .elevation{background-color:rgb(var(--mdui-color-primary));box-shadow:var(--mdui-elevation-level1)}.invalid .handle .elevation{background-color:rgb(var(--mdui-color-error))}:host([disabled]) .handle .elevation{background-color:rgba(var(--mdui-color-on-surface),.38);box-shadow:var(--mdui-elevation-level0)}.handle::before{background-color:rgb(var(--mdui-color-background))}.handle mdui-ripple{border-radius:var(--mdui-shape-corner-full)}.label{position:absolute;left:50%;transform:translateX(-50%) scale(0);transform-origin:center bottom;display:flex;align-items:center;justify-content:center;cursor:default;white-space:nowrap;-webkit-user-select:none;user-select:none;pointer-events:none;transition:transform var(--mdui-motion-duration-short2) var(--mdui-motion-easing-standard);bottom:2.5rem;min-width:1.75rem;height:1.75rem;padding:.375rem .5rem;border-radius:var(--mdui-shape-corner-full);color:rgb(var(--mdui-color-on-primary));font-size:var(--mdui-typescale-label-medium-size);font-weight:var(--mdui-typescale-label-medium-weight);letter-spacing:var(--mdui-typescale-label-medium-tracking);line-height:var(--mdui-typescale-label-medium-line-height);background-color:rgb(var(--mdui-color-primary))}.invalid .label{color:rgb(var(--mdui-color-on-error));background-color:rgb(var(--mdui-color-error))}.label::after{content:' ';position:absolute;z-index:-1;transform:rotate(45deg);width:.875rem;height:.875rem;bottom:-.125rem;background-color:rgb(var(--mdui-color-primary))}.invalid .label::after{background-color:rgb(var(--mdui-color-error))}.label-visible{transform:translateX(-50%) scale(1);transition:transform var(--mdui-motion-duration-short4) var(--mdui-motion-easing-standard)}.tickmark{position:absolute;top:50%;transform:translate(-50%);width:.125rem;height:.125rem;margin-top:-.0625rem;border-radius:var(--mdui-shape-corner-full);background-color:rgba(var(--mdui-color-on-surface-variant),.38)}.invalid .tickmark{background-color:rgba(var(--mdui-color-error),.38)}.tickmark.active{background-color:rgba(var(--mdui-color-on-primary),.38)}.invalid .tickmark.active{background-color:rgba(var(--mdui-color-on-error),.38)}:host([disabled]) .tickmark{background-color:rgba(var(--mdui-color-on-surface),.38)}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bnyiI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./ripple/index.js");
parcelHelpers.exportAll(_indexJs, exports);

},{"./ripple/index.js":"g5Cdg","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"f3vna":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _segmentedButtonJs = require("./segmented-button/segmented-button.js");
parcelHelpers.exportAll(_segmentedButtonJs, exports);

},{"./segmented-button/segmented-button.js":"8iyu9","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8iyu9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SegmentedButton", ()=>SegmentedButton);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _refJs = require("lit/directives/ref.js");
var _classcat = require("classcat");
var _classcatDefault = parcelHelpers.interopDefault(_classcat);
var _hasSlotJs = require("@mdui/shared/controllers/has-slot.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _templateJs = require("@mdui/shared/helpers/template.js");
var _uniqueIdJs = require("@mdui/shared/helpers/uniqueId.js");
var _checkJs = require("@mdui/shared/icons/check.js");
var _buttonBaseJs = require("../button/button-base.js");
var _iconJs = require("../icon.js");
var _segmentedButtonStyleJs = require("./segmented-button-style.js");
/**
 * @summary 分段按钮项组件。需与 `<mdui-segmented-button-group>` 组件配合使用
 *
 * ```html
 * <mdui-segmented-button-group>
 * ..<mdui-segmented-button>Day</mdui-segmented-button>
 * ..<mdui-segmented-button>Week</mdui-segmented-button>
 * ..<mdui-segmented-button>Month</mdui-segmented-button>
 * </mdui-segmented-button-group>
 * ```
 *
 * @event focus - 获得焦点时触发
 * @event blur - 失去焦点时触发
 * @event invalid - 表单字段验证未通过时触发
 *
 * @slot - 分段按钮项的文本
 * @slot icon - 分段按钮项的左侧图标
 * @slot selected-icon - 选中状态的左侧图标
 * @slot end-icon - 分段按钮项的右侧图标
 *
 * @csspart button - 内部的 button 或 a 元素
 * @csspart icon - 左侧的图标
 * @csspart selected-icon - 选中状态的左侧图标
 * @csspart end-icon - 右侧的图标
 * @csspart label - 文本内容
 * @csspart loading - 加载中状态的 `<mdui-circular-progress>` 元素
 */ let SegmentedButton = class SegmentedButton extends (0, _buttonBaseJs.ButtonBase) {
    constructor(){
        super(...arguments);
        /**
         * 是否选中该分段按钮项，由 <mdui-segmented-button-group> 组件控制该参数
         */ this.selected = false;
        /**
         * 是否验证未通过。由 <mdui-segmented-button-group> 控制该参数
         */ this.invalid = false;
        // 父组件中是否设置了禁用。由 <mdui-segmented-button-group> 控制该参数
        this.groupDisabled = false;
        // 每一个 segmented-button 元素都添加一个唯一的 key
        this.key = (0, _uniqueIdJs.uniqueId)();
        this.rippleRef = (0, _refJs.createRef)();
        this.hasSlotController = new (0, _hasSlotJs.HasSlotController)(this, "[default]", "icon", "end-icon");
    }
    get rippleElement() {
        return this.rippleRef.value;
    }
    get rippleDisabled() {
        return this.isDisabled() || this.loading;
    }
    get focusDisabled() {
        return this.isDisabled() || this.loading;
    }
    render() {
        const className = (0, _classcatDefault.default)({
            button: true,
            "has-icon": this.icon || this.selected || this.loading || this.hasSlotController.test("icon"),
            "has-end-icon": this.endIcon || this.hasSlotController.test("end-icon")
        });
        return (0, _lit.html)`<mdui-ripple ${(0, _refJs.ref)(this.rippleRef)} .noRipple="${this.noRipple}"></mdui-ripple>${this.isButton() ? this.renderButton({
            className,
            part: "button",
            content: this.renderInner()
        }) : this.isDisabled() || this.loading ? (0, _lit.html)`<span part="button" class="_a ${className}">${this.renderInner()}</span>` : this.renderAnchor({
            className,
            part: "button",
            content: this.renderInner()
        })}`;
    }
    isDisabled() {
        return this.disabled || this.groupDisabled;
    }
    renderIcon() {
        if (this.loading) return this.renderLoading();
        if (this.selected) return (0, _lit.html)`<slot name="selected-icon" part="selected-icon" class="selected-icon">${this.selectedIcon ? (0, _lit.html)`<mdui-icon name="${this.selectedIcon}" class="i"></mdui-icon>` : (0, _lit.html)`<mdui-icon-check class="i"></mdui-icon-check>`}</slot>`;
        return (0, _lit.html)`<slot name="icon" part="icon" class="icon">${this.icon ? (0, _lit.html)`<mdui-icon name="${this.icon}" class="i"></mdui-icon>` : (0, _templateJs.nothingTemplate)}</slot>`;
    }
    renderLabel() {
        const hasLabel = this.hasSlotController.test("[default]");
        if (!hasLabel) return 0, _templateJs.nothingTemplate;
        return (0, _lit.html)`<slot part="label" class="label"></slot>`;
    }
    renderEndIcon() {
        return (0, _lit.html)`<slot name="end-icon" part="end-icon" class="end-icon">${this.endIcon ? (0, _lit.html)`<mdui-icon name="${this.endIcon}" class="i"></mdui-icon>` : (0, _templateJs.nothingTemplate)}</slot>`;
    }
    renderInner() {
        return [
            this.renderIcon(),
            this.renderLabel(),
            this.renderEndIcon()
        ];
    }
};
SegmentedButton.styles = [
    (0, _buttonBaseJs.ButtonBase).styles,
    (0, _segmentedButtonStyleJs.segmentedButtonStyle)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], SegmentedButton.prototype, "icon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "end-icon"
    })
], SegmentedButton.prototype, "endIcon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "selected-icon"
    })
], SegmentedButton.prototype, "selectedIcon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], SegmentedButton.prototype, "selected", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], SegmentedButton.prototype, "invalid", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter),
        attribute: "group-disabled"
    })
], SegmentedButton.prototype, "groupDisabled", void 0);
SegmentedButton = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-segmented-button")
], SegmentedButton);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/ref.js":"eKwmp","classcat":"9ww9D","@mdui/shared/controllers/has-slot.js":"cARnY","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/helpers/template.js":"7SHVu","@mdui/shared/helpers/uniqueId.js":"4DPTP","@mdui/shared/icons/check.js":"aAByS","../button/button-base.js":"7z0Zx","../icon.js":"6YN4l","./segmented-button-style.js":"5nj6Q","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5nj6Q":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "segmentedButtonStyle", ()=>segmentedButtonStyle);
var _lit = require("lit");
const segmentedButtonStyle = (0, _lit.css)`:host{position:relative;display:inline-flex;flex-grow:1;flex-shrink:0;float:left;height:100%;overflow:hidden;cursor:pointer;-webkit-tap-highlight-color:transparent;border:.0625rem solid rgb(var(--mdui-color-outline))}.button{width:100%;padding:0 .75rem}:host([invalid]){color:rgb(var(--mdui-color-error));border-color:rgb(var(--mdui-color-error))}:host([invalid]) .button{background-color:rgb(var(--mdui-color-error-container))}:host([selected]){color:rgb(var(--mdui-color-on-secondary-container));background-color:rgb(var(--mdui-color-secondary-container));--mdui-comp-ripple-state-layer-color:var(
      --mdui-color-on-secondary-container
    )}:host([disabled]),:host([group-disabled]){cursor:default;pointer-events:none;color:rgba(var(--mdui-color-on-surface),38%);border-color:rgba(var(--mdui-color-on-surface),12%)}:host([loading]){cursor:default;pointer-events:none}:host(:not(.mdui-segmented-button-first)){margin-left:-.0625rem}:host(.mdui-segmented-button-first){border-radius:var(--shape-corner) 0 0 var(--shape-corner)}:host(.mdui-segmented-button-last){border-radius:0 var(--shape-corner) var(--shape-corner) 0}.end-icon,.icon,.selected-icon{display:inline-flex;font-size:1.28571429em}.end-icon .i,.icon .i,.selected-icon .i,::slotted([slot=end-icon]),::slotted([slot=icon]),::slotted([slot=selected-icon]){font-size:inherit}mdui-circular-progress{width:1.125rem;height:1.125rem}:host([disabled]) mdui-circular-progress{opacity:.38}.label{display:inline-flex}.has-icon .label{padding-left:.5rem}.has-end-icon .label{padding-right:.5rem}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"c6Xnt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _segmentedButtonGroupJs = require("./segmented-button/segmented-button-group.js");
parcelHelpers.exportAll(_segmentedButtonGroupJs, exports);

},{"./segmented-button/segmented-button-group.js":"fwwxT","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fwwxT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SegmentedButtonGroup", ()=>SegmentedButtonGroup);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _ifDefinedJs = require("lit/directives/if-defined.js");
var _mapJs = require("lit/directives/map.js");
var _refJs = require("lit/directives/ref.js");
var _whenJs = require("lit/directives/when.js");
var _js = require("@mdui/jq/$.js");
var _findJs = require("@mdui/jq/methods/find.js");
var _getJs = require("@mdui/jq/methods/get.js");
var _helperJs = require("@mdui/jq/shared/helper.js");
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _definedJs = require("@mdui/shared/controllers/defined.js");
var _formJs = require("@mdui/shared/controllers/form.js");
var _defaultValueJs = require("@mdui/shared/decorators/default-value.js");
var _watchJs = require("@mdui/shared/decorators/watch.js");
var _arrayJs = require("@mdui/shared/helpers/array.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _segmentedButtonGroupStyleJs = require("./segmented-button-group-style.js");
/**
 * @summary 分段按钮组件。需与 `<mdui-segmented-button>` 组件配合使用
 *
 * ```html
 * <mdui-segmented-button-group>
 * ..<mdui-segmented-button>Day</mdui-segmented-button>
 * ..<mdui-segmented-button>Week</mdui-segmented-button>
 * ..<mdui-segmented-button>Month</mdui-segmented-button>
 * </mdui-segmented-button-group>
 * ```
 *
 * @event change - 选中的值变更时触发
 * @event invalid - 表单字段验证未通过时触发
 *
 * @slot - `<mdui-segmented-button>` 组件
 *
 * @cssprop --shape-corner - 组件的圆角大小。可以指定一个具体的像素值；但更推荐[引用设计令牌](/docs/2/styles/design-tokens#shape-corner)
 */ let SegmentedButtonGroup = class SegmentedButtonGroup extends (0, _mduiElementJs.MduiElement) {
    constructor(){
        super(...arguments);
        /**
         * 是否填满父元素宽度
         */ this.fullWidth = false;
        /**
         * 是否为禁用状态
         */ this.disabled = false;
        /**
         * 提交表单时，是否必须选中
         */ this.required = false;
        /**
         * 提交表单时的名称，将与表单数据一起提交
         */ this.name = "";
        /**
         * 当前选中的 `<mdui-segmented-button>` 的值
         *
         * Note:
         * 该属性的 HTML 属性始终为字符串，且仅在 `selects="single"` 时可以通过 HTML 属性设置初始值
         * 该属性的 JavaScript 属性值在 `selects="single"` 时为字符串，在 `selects="multiple"` 时为字符串数组。
         * 所以，在 `selects="multiple"` 时，如果要修改该值，只能通过修改 JavaScript 属性值实现。
         */ this.value = "";
        /**
         * 默认选中的值。在重置表单时，将重置为该默认值。该属性只能通过 JavaScript 属性设置
         */ this.defaultValue = "";
        // 因为 segmented-button 的 value 可能会重复，所以在每个 segmented-button 元素上都加了一个唯一的 key 属性，通过 selectedKeys 来记录选中状态的 key
        this.selectedKeys = [];
        /**
         * 是否验证未通过
         */ this.invalid = false;
        // 是否为初始状态，初始状态不触发 change 事件
        this.isInitial = true;
        this.inputRef = (0, _refJs.createRef)();
        this.formController = new (0, _formJs.FormController)(this);
        this.definedController = new (0, _definedJs.DefinedController)(this, {
            relatedElements: [
                "mdui-segmented-button"
            ]
        });
    }
    /**
     * 表单验证状态对象
     */ get validity() {
        return this.inputRef.value.validity;
    }
    /**
     * 表单验证的错误提示信息
     */ get validationMessage() {
        return this.inputRef.value.validationMessage;
    }
    // 为了使 <mdui-segmented-button> 可以不是该组件的直接子元素，这里不用 @queryAssignedElements()
    get items() {
        return (0, _js.$)(this).find("mdui-segmented-button").get();
    }
    // 所有的子项元素（不包含已禁用的）
    get itemsEnabled() {
        return (0, _js.$)(this).find("mdui-segmented-button:not([disabled])").get();
    }
    // 是否为单选
    get isSingle() {
        return this.selects === "single";
    }
    // 是否为多选
    get isMultiple() {
        return this.selects === "multiple";
    }
    // 是否可选择
    get isSelectable() {
        return this.isSingle || this.isMultiple;
    }
    async onSelectsChange() {
        if (!this.isSelectable) // 不可选中，清空选中值
        this.setSelectedKeys([]);
        else if (this.isSingle) // 单选，只保留第一个选中的值
        this.setSelectedKeys(this.selectedKeys.slice(0, 1));
        await this.onSelectedKeysChange();
    }
    async onSelectedKeysChange() {
        await this.definedController.whenDefined();
        // 根据 selectedKeys 读取出对应 segmented-button 的 value
        const values = this.itemsEnabled.filter((item)=>this.selectedKeys.includes(item.key)).map((item)=>item.value);
        const value = this.isMultiple ? values : values[0] || "";
        this.setValue(value);
        if (!this.isInitial) this.emit("change");
    }
    async onValueChange() {
        this.isInitial = !this.hasUpdated;
        await this.definedController.whenDefined();
        // 根据 value 找出对应的 segmented-button，并把这些元素的 key 赋值给 selectedKeys
        if (!this.isSelectable) {
            this.updateItems();
            return;
        }
        const values = (this.isSingle ? [
            this.value
        ] : (0, _helperJs.isString)(this.value) ? [
            this.value
        ] : this.value).filter((i)=>i);
        if (!values.length) this.setSelectedKeys([]);
        else if (this.isSingle) {
            const firstItem = this.itemsEnabled.find((item)=>item.value === values[0]);
            this.setSelectedKeys(firstItem ? [
                firstItem.key
            ] : []);
        } else if (this.isMultiple) this.setSelectedKeys(this.itemsEnabled.filter((item)=>values.includes(item.value)).map((item)=>item.key));
        this.updateItems();
        // reset 引起的值变更，不执行验证；直接修改值引起的变更，需要进行验证
        if (!this.isInitial) {
            const form = this.formController.getForm();
            if (form && (0, _formJs.formResets).get(form)?.has(this)) {
                this.invalid = false;
                (0, _formJs.formResets).get(form).delete(this);
            } else this.invalid = !this.inputRef.value.checkValidity();
        }
    }
    async onInvalidChange() {
        await this.definedController.whenDefined();
        this.updateItems();
    }
    connectedCallback() {
        super.connectedCallback();
        this.value = this.isMultiple && (0, _helperJs.isString)(this.value) ? this.value ? [
            this.value
        ] : [] : this.value;
        this.defaultValue = this.selects === "multiple" ? [] : "";
    }
    /**
     * 检查表单字段是否验证通过。若未通过则返回 `false`，并触发 `invalid` 事件；若验证通过，则返回 `true`
     */ checkValidity() {
        const valid = this.inputRef.value.checkValidity();
        if (!valid) this.emit("invalid", {
            bubbles: false,
            cancelable: true,
            composed: false
        });
        return valid;
    }
    /**
     * 检查表单字段是否验证通过。若未通过则返回 `false`，并触发 `invalid` 事件；若验证通过，则返回 `true`。
     *
     * 验证未通过时，还将在组件上显示未通过的提示。
     */ reportValidity() {
        this.invalid = !this.inputRef.value.reportValidity();
        if (this.invalid) {
            const eventProceeded = this.emit("invalid", {
                bubbles: false,
                cancelable: true,
                composed: false
            });
            if (!eventProceeded) {
                // 调用了 preventDefault() 时，隐藏默认的表单错误提示
                this.inputRef.value.blur();
                this.inputRef.value.focus();
            }
        }
        return !this.invalid;
    }
    /**
     * 设置自定义的错误提示文本。只要文本不为空，则表示字段验证未通过
     *
     * @param message 自定义的提示文本
     */ setCustomValidity(message) {
        this.inputRef.value.setCustomValidity(message);
        this.invalid = !this.inputRef.value.checkValidity();
    }
    render() {
        return (0, _lit.html)`${(0, _whenJs.when)(this.isSelectable && this.isSingle, ()=>(0, _lit.html)`<input ${(0, _refJs.ref)(this.inputRef)} type="radio" name="${(0, _ifDefinedJs.ifDefined)(this.name)}" value="1" .disabled="${this.disabled}" .required="${this.required}" .checked="${!!this.value}" tabindex="-1" @keydown="${this.onInputKeyDown}">`)}${(0, _whenJs.when)(this.isSelectable && this.isMultiple, ()=>(0, _lit.html)`<select ${(0, _refJs.ref)(this.inputRef)} name="${(0, _ifDefinedJs.ifDefined)(this.name)}" .disabled="${this.disabled}" .required="${this.required}" multiple="multiple" tabindex="-1" @keydown="${this.onInputKeyDown}">${(0, _mapJs.map)(this.value, (value)=>(0, _lit.html)`<option selected="selected" value="${value}"></option>`)}</select>`)}<slot @slotchange="${this.onSlotChange}" @click="${this.onClick}"></slot>`;
    }
    // 切换一个元素的选中状态
    selectOne(item) {
        if (this.isMultiple) {
            // 直接修改 this.selectedKeys 无法被 watch 监听到，需要先克隆一份 this.selectedKeys
            const selectedKeys = [
                ...this.selectedKeys
            ];
            if (selectedKeys.includes(item.key)) selectedKeys.splice(selectedKeys.indexOf(item.key), 1);
            else selectedKeys.push(item.key);
            this.setSelectedKeys(selectedKeys);
        }
        if (this.isSingle) {
            if (this.selectedKeys.includes(item.key)) this.setSelectedKeys([]);
            else this.setSelectedKeys([
                item.key
            ]);
        }
        this.isInitial = false;
        this.updateItems();
    }
    async onClick(event) {
        // event.button 为 0 时，为鼠标左键点击。忽略鼠标中间和右键
        if (event.button) return;
        await this.definedController.whenDefined();
        const target = event.target;
        const item = target.closest("mdui-segmented-button");
        if (!item || item.disabled) return;
        if (this.isSelectable && item.value) this.selectOne(item);
    }
    /**
     * 在隐藏的 `<input>` 或 `<select>` 上按下按键时，切换选中状态
     * 通常为验证不通过时，默认聚焦到 `<input>` 或 `<select>` 上，此时按下按键，切换第一个元素的选中状态
     */ async onInputKeyDown(event) {
        if (![
            "Enter",
            " "
        ].includes(event.key)) return;
        event.preventDefault();
        await this.definedController.whenDefined();
        if (this.isSingle) {
            const input = event.target;
            input.checked = !input.checked;
            this.selectOne(this.itemsEnabled[0]);
            this.itemsEnabled[0].focus();
        }
        if (this.isMultiple) {
            this.selectOne(this.itemsEnabled[0]);
            this.itemsEnabled[0].focus();
        }
    }
    async onSlotChange() {
        await this.definedController.whenDefined();
        this.updateItems(true);
    }
    setSelectedKeys(selectedKeys) {
        if (!(0, _arrayJs.arraysEqualIgnoreOrder)(this.selectedKeys, selectedKeys)) this.selectedKeys = selectedKeys;
    }
    setValue(value) {
        if (this.isSingle) this.value = value;
        else if (!(0, _arrayJs.arraysEqualIgnoreOrder)(this.value, value)) this.value = value;
    }
    updateItems(slotChange = false) {
        const items = this.items;
        items.forEach((item, index)=>{
            item.invalid = this.invalid;
            item.groupDisabled = this.disabled;
            item.selected = this.selectedKeys.includes(item.key);
            if (slotChange) {
                item.classList.toggle("mdui-segmented-button-first", index === 0);
                item.classList.toggle("mdui-segmented-button-last", index === items.length - 1);
            }
        });
    }
};
SegmentedButtonGroup.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _segmentedButtonGroupStyleJs.segmentedButtonGroupStyle)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter),
        attribute: "full-width"
    })
], SegmentedButtonGroup.prototype, "fullWidth", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], SegmentedButtonGroup.prototype, "selects", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], SegmentedButtonGroup.prototype, "disabled", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], SegmentedButtonGroup.prototype, "required", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], SegmentedButtonGroup.prototype, "form", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], SegmentedButtonGroup.prototype, "name", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)()
], SegmentedButtonGroup.prototype, "value", void 0);
(0, _tslib.__decorate)([
    (0, _defaultValueJs.defaultValue)()
], SegmentedButtonGroup.prototype, "defaultValue", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], SegmentedButtonGroup.prototype, "selectedKeys", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], SegmentedButtonGroup.prototype, "invalid", void 0);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("selects", true)
], SegmentedButtonGroup.prototype, "onSelectsChange", null);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("selectedKeys", true)
], SegmentedButtonGroup.prototype, "onSelectedKeysChange", null);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("value")
], SegmentedButtonGroup.prototype, "onValueChange", null);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("invalid", true),
    (0, _watchJs.watch)("disabled")
], SegmentedButtonGroup.prototype, "onInvalidChange", null);
SegmentedButtonGroup = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-segmented-button-group")
], SegmentedButtonGroup);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/if-defined.js":"77RTn","lit/directives/map.js":"ejxgA","lit/directives/ref.js":"eKwmp","lit/directives/when.js":"5IbUr","@mdui/jq/$.js":"dZx9v","@mdui/jq/methods/find.js":"7eUR4","@mdui/jq/methods/get.js":"bzhq8","@mdui/jq/shared/helper.js":"4D489","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/controllers/defined.js":"9Omrp","@mdui/shared/controllers/form.js":"9HuZO","@mdui/shared/decorators/default-value.js":"lGYLk","@mdui/shared/decorators/watch.js":"20Qzb","@mdui/shared/helpers/array.js":"gRRlE","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/lit-styles/component-style.js":"jFNMX","./segmented-button-group-style.js":"hmoz2","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hmoz2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "segmentedButtonGroupStyle", ()=>segmentedButtonGroupStyle);
var _lit = require("lit");
const segmentedButtonGroupStyle = (0, _lit.css)`:host{--shape-corner:var(--mdui-shape-corner-full);position:relative;display:inline-flex;vertical-align:middle;height:2.5rem;font-size:var(--mdui-typescale-label-large-size);font-weight:var(--mdui-typescale-label-large-weight);letter-spacing:var(--mdui-typescale-label-large-tracking);line-height:var(--mdui-typescale-label-large-line-height);color:rgb(var(--mdui-color-on-surface));--mdui-comp-ripple-state-layer-color:var(--mdui-color-on-surface)}:host([full-width]){display:flex;flex-wrap:nowrap}input,select{position:absolute;width:100%;height:100%;padding:0;opacity:0;pointer-events:none}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"a9moU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./select/index.js");
parcelHelpers.exportAll(_indexJs, exports);

},{"./select/index.js":"9tM0B","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9tM0B":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Select", ()=>Select);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _ifDefinedJs = require("lit/directives/if-defined.js");
var _mapJs = require("lit/directives/map.js");
var _refJs = require("lit/directives/ref.js");
var _whenJs = require("lit/directives/when.js");
var _helperJs = require("@mdui/jq/shared/helper.js");
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _definedJs = require("@mdui/shared/controllers/defined.js");
var _formJs = require("@mdui/shared/controllers/form.js");
var _hasSlotJs = require("@mdui/shared/controllers/has-slot.js");
var _defaultValueJs = require("@mdui/shared/decorators/default-value.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _observeResizeJs = require("@mdui/shared/helpers/observeResize.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _focusableJs = require("@mdui/shared/mixins/focusable.js");
var _chipJs = require("../chip.js");
var _dropdownJs = require("../dropdown.js");
var _menuJs = require("../menu.js");
var _textFieldJs = require("../text-field.js");
var _styleJs = require("./style.js");
/**
 * @summary 选择框组件。需与 `<mdui-menu-item>` 组件配合使用
 *
 * ```html
 * <mdui-select>
 * ..<mdui-menu-item value="item-1">Item 1</mdui-menu-item>
 * ..<mdui-menu-item value="item-2">Item 2</mdui-menu-item>
 * </mdui-select>
 * ```
 *
 * @event focus - 获得焦点时触发
 * @event blur - 失去焦点时触发
 * @event change - 选中的值变更时触发
 * @event invalid - 表单字段验证未通过时触发
 * @event clear - 在点击由 `clearable` 属性生成的清空按钮时触发。可以通过调用 `event.preventDefault()` 阻止清空下拉框
 *
 * @slot - `<mdui-menu-item>` 元素
 * @slot icon - 左侧图标
 * @slot end-icon - 右侧图标
 * @slot error-icon - 验证失败状态的右侧图标
 * @slot prefix - 左侧文本
 * @slot suffix - 右侧文本
 * @slot clear-button - 清空按钮
 * @slot clear-icon - 清空按钮中的图标
 * @slot helper - 底部的帮助文本
 *
 * @csspart text-field - 文本框，即 [`<mdui-text-field>`](/docs/2/components/text-field) 元素
 * @csspart menu - 下拉菜单，即 [`<mdui-menu>`](/docs/2/components/menu) 元素
 */ let Select = class Select extends (0, _focusableJs.FocusableMixin)((0, _mduiElementJs.MduiElement)) {
    constructor(){
        super(...arguments);
        /**
         * 下拉框形状。可选值为：
         *
         * * `filled`：带背景色的下拉框，视觉效果较强
         * * `outlined`：带边框的下拉框，视觉效果较弱
         */ this.variant = "filled";
        /**
         * 是否支持多选
         */ this.multiple = false;
        /**
         * 下拉框名称，将与表单数据一起提交
         */ this.name = "";
        /**
         * 下拉框的值，将与表单数据一起提交。
         *
         * 若未指定 `multiple` 属性，则该值为字符串；否则，该值为字符串数组。
         * HTML 属性只能设置字符串值；如果需要设置数组值，请通过 JavaScript 设置
         */ this.value = "";
        /**
         * 默认选中的值。在重置表单时，将重置为该默认值。该属性只能通过 JavaScript 属性设置
         */ this.defaultValue = "";
        /**
         * 是否可清空下拉框
         */ this.clearable = false;
        /**
         * 下拉框的方位。可选值为：
         *
         * * `auto`：自动判断方位
         * * `bottom`：位于下方
         * * `top`：位于上方
         */ this.placement = "auto";
        /**
         * 文本是否右对齐
         */ this.endAligned = false;
        /**
         * 是否为只读
         */ this.readonly = false;
        /**
         * 是否为禁用状态
         */ this.disabled = false;
        /**
         * 提交表单时，是否必须填写该字段
         */ this.required = false;
        /**
         * 是否验证未通过
         *
         * 该验证为浏览器原生验证 API，基于 `required` 属性的验证结果
         */ this.invalid = false;
        this.menuRef = (0, _refJs.createRef)();
        this.textFieldRef = (0, _refJs.createRef)();
        this.hiddenInputRef = (0, _refJs.createRef)();
        this.formController = new (0, _formJs.FormController)(this);
        this.hasSlotController = new (0, _hasSlotJs.HasSlotController)(this, "icon", "end-icon", "error-icon", "prefix", "suffix", "clear-button", "clear-icon", "helper");
        this.definedController = new (0, _definedJs.DefinedController)(this, {
            relatedElements: [
                "mdui-menu-item"
            ]
        });
    }
    /**
     * 表单验证状态对象
     */ get validity() {
        return this.hiddenInputRef.value.validity;
    }
    /**
     * 表单验证的错误提示信息
     */ get validationMessage() {
        return this.hiddenInputRef.value.validationMessage;
    }
    get focusElement() {
        return this.textFieldRef.value;
    }
    get focusDisabled() {
        return this.disabled;
    }
    connectedCallback() {
        super.connectedCallback();
        this.value = this.multiple && (0, _helperJs.isString)(this.value) ? this.value ? [
            this.value
        ] : [] : this.value;
        this.defaultValue = this.multiple ? [] : "";
        // 首次渲染时，slot 中的 mdui-menu-item 还未渲染完成，无法读取到其中的文本值
        // 所以需要在首次更新后，再次重新渲染，此时 mdui-menu-item 已渲染完成，可以读取到文本值
        this.definedController.whenDefined().then(()=>{
            this.requestUpdate();
        });
    }
    disconnectedCallback() {
        super.disconnectedCallback();
        this.observeResize?.unobserve();
    }
    /**
     * 检查表单字段是否验证通过。若未通过则返回 `false`，并触发 `invalid` 事件；若验证通过，则返回 `true`
     */ checkValidity() {
        const valid = this.hiddenInputRef.value.checkValidity();
        if (!valid) this.emit("invalid", {
            bubbles: false,
            cancelable: true,
            composed: false
        });
        return valid;
    }
    /**
     * 检查表单字段是否验证通过。若未通过则返回 `false`，并触发 `invalid` 事件；若验证通过，则返回 `true`。
     *
     * 验证未通过时，还将在组件上显示未通过的提示。
     */ reportValidity() {
        this.invalid = !this.hiddenInputRef.value.reportValidity();
        if (this.invalid) {
            this.emit("invalid", {
                bubbles: false,
                cancelable: true,
                composed: false
            });
            this.focus();
        }
        return !this.invalid;
    }
    /**
     * 设置自定义的错误提示文本。只要文本不为空，则表示字段验证未通过
     *
     * @param message 自定义的提示文本
     */ setCustomValidity(message) {
        this.hiddenInputRef.value.setCustomValidity(message);
        this.invalid = !this.hiddenInputRef.value.checkValidity();
    }
    firstUpdated(changedProperties) {
        super.firstUpdated(changedProperties);
        this.observeResize = (0, _observeResizeJs.observeResize)(this.textFieldRef.value, ()=>this.resizeMenu());
    }
    render() {
        const hasSelection = this.multiple ? !!this.value.length : !!this.value;
        return (0, _lit.html)`${this.multiple ? (0, _lit.html)`<select ${(0, _refJs.ref)(this.hiddenInputRef)} class="hidden-input" name="${(0, _ifDefinedJs.ifDefined)(this.name)}" value="${(0, _ifDefinedJs.ifDefined)(this.value)}" .required="${this.required}" .disabled="${this.disabled}" multiple="multiple" tabindex="-1">${(0, _mapJs.map)(this.value, (value)=>(0, _lit.html)`<option selected="selected" value="${value}"></option>`)}</select>` : (0, _lit.html)`<input ${(0, _refJs.ref)(this.hiddenInputRef)} type="radio" class="hidden-input" name="${(0, _ifDefinedJs.ifDefined)(this.name)}" value="${(0, _ifDefinedJs.ifDefined)(this.value)}" .required="${this.required}" .disabled="${this.disabled}" .checked="${hasSelection}" tabindex="-1">`}<mdui-dropdown .stayOpenOnClick="${this.multiple}" .disabled="${this.readonly || this.disabled}" .placement="${this.placement === "top" ? "top-start" : this.placement === "bottom" ? "bottom-start" : "auto"}" @open="${this.onDropdownOpen}" @close="${this.onDropdownClose}"><mdui-text-field ${(0, _refJs.ref)(this.textFieldRef)} slot="trigger" part="text-field" class="text-field" readonly="readonly" .readonlyButClearable="${true}" .variant="${this.variant}" .name="${this.name}" .value="${this.multiple ? this.value.length ? " " : "" : this.getMenuItemLabelByValue(this.value)}" .label="${this.label}" .placeholder="${this.placeholder}" .helper="${this.helper}" .error="${this.hiddenInputRef.value?.validationMessage}" .clearable="${this.clearable}" .clearIcon="${this.clearIcon}" .endAligned="${this.endAligned}" .prefix="${this.prefix}" .suffix="${this.suffix}" .icon="${this.icon}" .endIcon="${this.endIcon}" .errorIcon="${this.errorIcon}" .form="${this.form}" .disabled="${this.disabled}" .required="${this.required}" .invalidStyle="${this.invalid}" @clear="${this.onClear}" @change="${(e)=>e.stopPropagation()}" @keydown="${this.onTextFieldKeyDown}">${(0, _mapJs.map)([
            "icon",
            "end-icon",
            "error-icon",
            "prefix",
            "suffix",
            "clear-button",
            "clear-icon",
            "helper"
        ], (slotName)=>this.hasSlotController.test(slotName) ? (0, _lit.html)`<slot name="${slotName}" slot="${slotName}"></slot>` : (0, _lit.nothing))} ${(0, _whenJs.when)(this.multiple && this.value.length, ()=>(0, _lit.html)`<div slot="input" class="chips">${(0, _mapJs.map)(this.value, (valueItem)=>(0, _lit.html)`<mdui-chip class="chip" variant="input" deletable tabindex="-1" @delete="${()=>this.onDeleteOneValue(valueItem)}">${this.getMenuItemLabelByValue(valueItem)}</mdui-chip>`)}</div>`)}</mdui-text-field><mdui-menu ${(0, _refJs.ref)(this.menuRef)} part="menu" .selects="${this.multiple ? "multiple" : "single"}" .value="${this.value}" @change="${this.onValueChange}"><slot></slot></mdui-menu></mdui-dropdown>`;
    }
    getMenuItemLabelByValue(valueItem) {
        if (!this.menuItems.length) return valueItem;
        return this.menuItems.find((item)=>item.value === valueItem)?.textContent || valueItem;
    }
    resizeMenu() {
        this.menuRef.value.style.width = `${this.textFieldRef.value.clientWidth}px`;
    }
    async onDropdownOpen() {
        // @ts-ignore
        this.textFieldRef.value.focusedStyle = true;
    }
    onDropdownClose() {
        // @ts-ignore
        this.textFieldRef.value.focusedStyle = false;
        // 如果焦点在 <mdui-select> 组件内的元素上，则焦点回到 <mdui-select> 上
        if (this.contains(document.activeElement) || this.contains(document.activeElement?.assignedSlot ?? null)) setTimeout(()=>{
            this.focus();
        });
    }
    async onValueChange(e) {
        const menu = e.target;
        this.value = this.multiple ? menu.value.map((v)=>v ?? "") : menu.value ?? "";
        await this.updateComplete;
        // reset 引起的值变更，不执行验证；直接修改值引起的变更，需要进行验证
        const form = this.formController.getForm();
        if (form && (0, _formJs.formResets).get(form)?.has(this)) {
            this.invalid = false;
            (0, _formJs.formResets).get(form).delete(this);
        } else this.invalid = !this.hiddenInputRef.value.checkValidity();
    }
    /**
     * multiple 为 true 时，点 chip 的删除按钮，删除其中一个值
     */ onDeleteOneValue(valueItem) {
        const value = [
            ...this.value
        ];
        if (value.includes(valueItem)) value.splice(value.indexOf(valueItem), 1);
        this.value = value;
    }
    onClear() {
        this.value = this.multiple ? [] : "";
    }
    /**
     * 焦点在 text-field 上时，按下回车键，打开下拉选项
     */ onTextFieldKeyDown(event) {
        if (event.key === "Enter") {
            event.preventDefault();
            this.textFieldRef.value.click();
        }
    }
};
Select.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _styleJs.style)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Select.prototype, "variant", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Select.prototype, "multiple", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Select.prototype, "name", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)()
], Select.prototype, "value", void 0);
(0, _tslib.__decorate)([
    (0, _defaultValueJs.defaultValue)()
], Select.prototype, "defaultValue", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Select.prototype, "label", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Select.prototype, "placeholder", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Select.prototype, "helper", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Select.prototype, "clearable", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "clear-icon"
    })
], Select.prototype, "clearIcon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Select.prototype, "placement", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter),
        attribute: "end-aligned"
    })
], Select.prototype, "endAligned", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Select.prototype, "prefix", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Select.prototype, "suffix", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Select.prototype, "icon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "end-icon"
    })
], Select.prototype, "endIcon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "error-icon"
    })
], Select.prototype, "errorIcon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Select.prototype, "form", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Select.prototype, "readonly", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Select.prototype, "disabled", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Select.prototype, "required", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], Select.prototype, "invalid", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.queryAssignedElements)({
        flatten: true,
        selector: "mdui-menu-item"
    })
], Select.prototype, "menuItems", void 0);
Select = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-select")
], Select);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/if-defined.js":"77RTn","lit/directives/map.js":"ejxgA","lit/directives/ref.js":"eKwmp","lit/directives/when.js":"5IbUr","@mdui/jq/shared/helper.js":"4D489","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/controllers/defined.js":"9Omrp","@mdui/shared/controllers/form.js":"9HuZO","@mdui/shared/controllers/has-slot.js":"cARnY","@mdui/shared/decorators/default-value.js":"lGYLk","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/helpers/observeResize.js":"fLGE3","@mdui/shared/lit-styles/component-style.js":"jFNMX","@mdui/shared/mixins/focusable.js":"kzhFM","../chip.js":"bIB3P","../dropdown.js":"buAB1","../menu.js":"khqRo","../text-field.js":"aJEWE","./style.js":"24BAJ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aJEWE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./text-field/index.js");
parcelHelpers.exportAll(_indexJs, exports);

},{"./text-field/index.js":"FbcwO","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"FbcwO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TextField", ()=>TextField);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _classMapJs = require("lit/directives/class-map.js");
var _ifDefinedJs = require("lit/directives/if-defined.js");
var _liveJs = require("lit/directives/live.js");
var _refJs = require("lit/directives/ref.js");
var _whenJs = require("lit/directives/when.js");
var _motion = require("@lit-labs/motion");
var _js = require("@mdui/jq/$.js");
var _cssJs = require("@mdui/jq/methods/css.js");
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _formJs = require("@mdui/shared/controllers/form.js");
var _hasSlotJs = require("@mdui/shared/controllers/has-slot.js");
var _defaultValueJs = require("@mdui/shared/decorators/default-value.js");
var _watchJs = require("@mdui/shared/decorators/watch.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _motionJs = require("@mdui/shared/helpers/motion.js");
var _observeResizeJs = require("@mdui/shared/helpers/observeResize.js");
var _templateJs = require("@mdui/shared/helpers/template.js");
var _cancelOutlinedJs = require("@mdui/shared/icons/cancel--outlined.js");
var _errorJs = require("@mdui/shared/icons/error.js");
var _visibilityOffJs = require("@mdui/shared/icons/visibility-off.js");
var _visibilityJs = require("@mdui/shared/icons/visibility.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _focusableJs = require("@mdui/shared/mixins/focusable.js");
var _buttonIconJs = require("../button-icon.js");
var _iconJs = require("../icon.js");
var _styleJs = require("./style.js");
/**
 * @summary 文本框组件
 *
 * ```html
 * <mdui-text-field label="Text Field"></mdui-text-field>
 * ```
 *
 * @event focus - 获得焦点时触发
 * @event blur - 失去焦点时触发
 * @event change - 在文本框的值变更，且失去焦点时触发
 * @event input - 在文本框的值变更时触发
 * @event invalid - 表单字段验证不通过时触发
 * @event clear - 在点击由 `clearable` 属性生成的清空按钮时触发。可以通过调用 `event.preventDefault()` 阻止清空文本框
 *
 * @slot icon - 左侧图标
 * @slot end-icon - 右侧图标
 * @slot error-icon - 验证失败状态的右侧图标
 * @slot prefix - 左侧文本
 * @slot suffix - 右侧文本
 * @slot clear-button - 清空按钮
 * @slot clear-icon - 清空按钮中的图标
 * @slot toggle-password-button - 显示密码状态下，密码显示切换按钮中的图标
 * @slot show-password-icon - 显示密码状态下，密码显示切换按钮中的图标
 * @slot hide-password-icon - 隐藏密码状态下，密码显示切换按钮中的图标
 * @slot helper - 底部的帮助文本
 *
 * @csspart container - 文本框容器
 * @csspart icon - 左侧图标
 * @csspart end-icon - 右侧图标
 * @csspart error-icon - 验证失败状态的右侧图标
 * @csspart prefix - 左侧文本
 * @csspart suffix - 右侧文本
 * @csspart label - 上方的标签文本
 * @csspart input - 内部的 `<input>` 或 `<textarea>` 元素
 * @csspart clear-button - 清空按钮
 * @csspart clear-icon - 清空按钮中的图标
 * @csspart toggle-password-button - 密码显示切换按钮
 * @csspart show-password-icon - 显示密码状态下，密码显示切换按钮中的图标
 * @csspart hide-password-icon - 隐藏密码状态下，密码显示切换按钮中的图标
 * @csspart supporting - 底部辅助信息容器，包括 helper、error、counter
 * @csspart helper - 底部的帮助文本
 * @csspart error - 底部的错误描述文本
 * @csspart counter - 底部右侧的字数统计
 */ let TextField = class TextField extends (0, _focusableJs.FocusableMixin)((0, _mduiElementJs.MduiElement)) {
    constructor(){
        super(...arguments);
        /**
         * 文本框形状。默认为 `filled`。可选值为：
         *
         * * `filled`：带背景色的文本框，视觉效果较强
         * * `outlined`：带边框的文本框，视觉效果较弱
         */ this.variant = "filled";
        /**
         * 文本框输入类型。默认为 `text`。可选值为：
         *
         * * `text`：默认值。文本字段
         * * `number`：只能输入数字。拥有动态键盘的设备上会显示数字键盘
         * * `password`：用于输入密码，其值会被遮盖
         * * `url`：用于输入 URL，会验证 URL 格式。在支持动态键盘的设备上有相应的键盘
         * * `email`：用于输入邮箱地址，会验证邮箱格式。在支持动态键盘的设备上有相应的键盘
         * * `search`：用于搜索框。拥有动态键盘的设备上的回车图标会变成搜索图标
         * * `tel`：用于输入电话号码。拥有动态键盘的设备上会显示电话数字键盘
         * * `hidden`：隐藏该控件，但其值仍会提交到服务器
         * * `date`：输入日期的控件（年、月、日，不包括时间）。在支持的浏览器激活时打开日期选择器或年月日的数字滚轮
         * * `datetime-local`：输入日期和时间的控件，不包括时区。在支持的浏览器激活时打开日期选择器或年月日的数字滚轮
         * * `month`：输入年和月的控件，没有时区
         * * `time`：用于输入时间的控件，不包括时区
         * * `week`：用于输入以年和周数组成的日期，不带时区
         */ this.type = "text";
        /**
         * 文本框名称，将与表单数据一起提交
         */ this.name = "";
        /**
         * 文本框的值，将与表单数据一起提交
         */ this.value = "";
        /**
         * 默认值。在重置表单时，将重置为该默认值。该属性只能通过 JavaScript 属性设置
         */ this.defaultValue = "";
        /**
         * 是否仅在获得焦点时，显示底部帮助文本
         */ this.helperOnFocus = false;
        /**
         * 是否可清空文本框
         */ this.clearable = false;
        /**
         * 文本是否右对齐
         */ this.endAligned = false;
        /**
         * 是否为只读
         */ this.readonly = false;
        /**
         * 是否为禁用状态
         */ this.disabled = false;
        /**
         * 提交表单时，是否必须填写该字段
         */ this.required = false;
        /**
         * 是否根据输入的内容自动调整文本框高度
         */ this.autosize = false;
        /**
         * 是否显示字数统计。必须指定了 `maxlength` 时，该参数才有效
         */ this.counter = false;
        /**
         * `type` 为 `password` 时，设置该属性会添加一个切换按钮，点击时可在密文和明文之间切换
         */ this.togglePassword = false;
        /**
         * 启用拼写检查
         */ this.spellcheck = false;
        /**
         * 是否验证未通过
         *
         * 该验证为浏览器原生验证 API，基于 `type`、`required`、`minlength`、`maxlength` 及 `pattern` 等属性的验证结果
         */ this.invalid = false;
        /**
         * 该属性设置为 true 时，则在样式上为 text-field 赋予 invalid 的状态。实际是否验证通过仍需根据 invalid 属性判断
         * 该属性仅供 mdui 内部使用，当前 select 组件使用了该属性
         */ this.invalidStyle = false;
        /**
         * 该属性设置为 true 时，则在样式上为 text-field 赋予聚焦状态。实际是否聚焦仍然由 focusableMixin 控制
         * 该属性仅供 mdui 内部使用，当前 select 组件使用了该属性
         */ this.focusedStyle = false;
        this.isPasswordVisible = false;
        this.hasValue = false;
        /**
         * 通过该属性传入了错误文案时，会优先显示该文案。需要配合 invalid=true 或 invalidStyle=true 使用
         * 当前仅供 select 组件使用
         */ this.error = "";
        this.inputRef = (0, _refJs.createRef)();
        this.formController = new (0, _formJs.FormController)(this);
        this.hasSlotController = new (0, _hasSlotJs.HasSlotController)(this, "icon", "end-icon", "helper", "input");
        /**
         * 该属性设为 true 时，即使设置了 readonly，仍可以显示 clearable
         * 当前仅供 select 组件使用
         */ this.readonlyButClearable = false;
    }
    /**
     * 表单验证状态对象
     */ get validity() {
        return this.inputRef.value.validity;
    }
    /**
     * 表单验证的错误提示信息
     */ get validationMessage() {
        return this.inputRef.value.validationMessage;
    }
    /**
     * 获取当前值，并转换为 `number` 类型；或设置一个 `number` 类型的值。
     * 如果值无法被转换为 `number` 类型，则会返回 `NaN`。
     */ get valueAsNumber() {
        return this.inputRef.value?.valueAsNumber ?? parseFloat(this.value);
    }
    set valueAsNumber(newValue) {
        const input = document.createElement("input");
        input.type = "number";
        input.valueAsNumber = newValue;
        this.value = input.value;
    }
    get focusElement() {
        return this.inputRef.value;
    }
    get focusDisabled() {
        return this.disabled;
    }
    /**
     * 是否显示聚焦状态样式
     */ get isFocusedStyle() {
        // @ts-ignore
        return this.focused || this.focusedStyle;
    }
    /**
     * 是否渲染为 textarea。为 false 时渲染为 input
     */ get isTextarea() {
        return this.rows && this.rows > 1 || this.autosize;
    }
    onDisabledChange() {
        // 禁用状态始终为验证通过，所以 disabled 变更时需要重新校验
        this.inputRef.value.disabled = this.disabled;
        this.invalid = !this.inputRef.value.checkValidity();
    }
    async onValueChange() {
        this.hasValue = !!this.value;
        if (this.hasUpdated) {
            await this.updateComplete;
            // reset 引起的值变更，不执行验证；直接修改值引起的变更，需要进行验证
            const form = this.formController.getForm();
            if (form && (0, _formJs.formResets).get(form)?.has(this)) {
                this.invalid = false;
                (0, _formJs.formResets).get(form).delete(this);
            } else this.invalid = !this.inputRef.value.checkValidity();
        }
    }
    onRowsChange() {
        this.setTextareaHeight();
    }
    async onMaxRowsChange() {
        if (!this.autosize) return;
        if (!this.hasUpdated) await this.updateComplete;
        // 设置最大高度，为 line-height * maxRows + padding-top + padding-bottom
        const $input = (0, _js.$)(this.inputRef.value);
        $input.css("max-height", parseFloat($input.css("line-height")) * (this.maxRows ?? 1) + parseFloat($input.css("padding-top")) + parseFloat($input.css("padding-bottom")));
    }
    async onMinRowsChange() {
        if (!this.autosize) return;
        if (!this.hasUpdated) await this.updateComplete;
        // 设置最小高度，为 line-height * minRows + padding-top + padding-bottom
        const $input = (0, _js.$)(this.inputRef.value);
        $input.css("min-height", parseFloat($input.css("line-height")) * (this.minRows ?? 1) + parseFloat($input.css("padding-top")) + parseFloat($input.css("padding-bottom")));
    }
    disconnectedCallback() {
        super.disconnectedCallback();
        this.observeResize?.unobserve();
    }
    /**
     * 选中文本框中的文本
     */ select() {
        this.inputRef.value.select();
    }
    /**
     * 选中文本框中特定范围的内容
     *
     * @param start 被选中的第一个字符的位置索引，从 `0` 开始。如果这个值比元素的 `value` 长度还大，则会被看作 `value` 最后一个位置的索引
     * @param end 被选中的最后一个字符的*下一个*位置索引。如果这个值比元素的 `value` 长度还大，则会被看作 `value` 最后一个位置的索引
     * @param direction 一个表示选择方向的字符串，可能的值有：`forward`、`backward`、`none`
     */ setSelectionRange(start, end, direction = "none") {
        this.inputRef.value.setSelectionRange(start, end, direction);
    }
    /**
     * 把文本框中特定范围的文本替换成一个新的文本
     * @param replacement 要插入的字符串
     * @param start 要替换的字符的起止位置的索引。默认为当前用户选中的字符的起始位置的索引
     * @param end 要替换的字符的结束位置的索引。默认为当前用户选中的字符的结束位置的索引
     * @param selectMode 文本被替换后，选取的状态。可选值为：
     * * `select`：选择新插入的文本
     * * `start`：将光标移动到新插入的文本的起始位置
     * * `end`：将光标移动到新插入的文本的结束位置
     * * `preserve`：默认值。尝试保留选取
     */ setRangeText(replacement, start, end, selectMode = "preserve") {
        this.inputRef.value.setRangeText(replacement, start, end, selectMode);
        if (this.value !== this.inputRef.value.value) {
            this.value = this.inputRef.value.value;
            this.setTextareaHeight();
            this.emit("input");
            this.emit("change");
        }
    }
    /**
     * 检查表单字段是否验证通过。若未通过则返回 `false`，并触发 `invalid` 事件；若验证通过，则返回 `true`
     */ checkValidity() {
        const valid = this.inputRef.value.checkValidity();
        if (!valid) this.emit("invalid", {
            bubbles: false,
            cancelable: true,
            composed: false
        });
        return valid;
    }
    /**
     * 检查表单字段是否验证通过。若未通过则返回 `false`，并触发 `invalid` 事件；若验证通过，则返回 `true`。
     *
     * 验证未通过时，还将在组件上显示未通过的提示。
     */ reportValidity() {
        this.invalid = !this.inputRef.value.reportValidity();
        if (this.invalid) {
            this.emit("invalid", {
                bubbles: false,
                cancelable: true,
                composed: false
            });
            this.focus();
        }
        return !this.invalid;
    }
    /**
     * 设置自定义的错误提示文本。只要文本不为空，则表示字段验证未通过
     *
     * @param message 自定义的提示文本
     */ setCustomValidity(message) {
        this.inputRef.value.setCustomValidity(message);
        this.invalid = !this.inputRef.value.checkValidity();
    }
    firstUpdated(_changedProperties) {
        super.firstUpdated(_changedProperties);
        this.setTextareaHeight();
        this.observeResize = (0, _observeResizeJs.observeResize)(this.inputRef.value, ()=>this.setTextareaHeight());
    }
    render() {
        const hasIcon = !!this.icon || this.hasSlotController.test("icon");
        const hasEndIcon = !!this.endIcon || this.hasSlotController.test("end-icon");
        const hasErrorIcon = this.invalid || this.invalidStyle;
        const hasHelper = !!this.helper || this.hasSlotController.test("helper");
        const hasError = hasErrorIcon && !!(this.error || this.inputRef.value.validationMessage);
        const hasCounter = this.counter && !!this.maxlength;
        // 存在 input slot 时，隐藏组件内部的 .input 元素，使用 slot 代替
        const hasInputSlot = this.hasSlotController.test("input");
        const invalidClassNameObj = {
            invalid: this.invalid,
            "invalid-style": this.invalidStyle
        };
        const className = (0, _classMapJs.classMap)({
            container: true,
            "has-value": this.hasValue,
            "has-icon": hasIcon,
            "has-end-icon": hasEndIcon,
            "has-error-icon": hasErrorIcon,
            "is-firefox": navigator.userAgent.includes("Firefox"),
            ...invalidClassNameObj
        });
        return (0, _lit.html)`<div part="container" class="${className}">${this.renderPrefix()}<div class="input-container">${this.renderLabel()} ${this.isTextarea ? this.renderTextArea(hasInputSlot) : this.renderInput(hasInputSlot)} ${(0, _whenJs.when)(hasInputSlot, ()=>(0, _lit.html)`<slot name="input" class="input"></slot>`)}</div>${this.renderClearButton()}${this.renderTogglePasswordButton()} ${this.renderSuffix(hasErrorIcon)}</div>${(0, _whenJs.when)(hasError || hasHelper || hasCounter, ()=>(0, _lit.html)`<div part="supporting" class="${(0, _classMapJs.classMap)({
                supporting: true,
                ...invalidClassNameObj
            })}">${this.renderHelper(hasError, hasHelper)} ${this.renderCounter(hasCounter)}</div>`)}`;
    }
    onChange() {
        this.value = this.inputRef.value.value;
        if (this.isTextarea) this.setTextareaHeight();
        this.emit("change");
    }
    onClear(event) {
        this.value = "";
        this.emit("clear");
        this.emit("input");
        this.emit("change");
        this.focus();
        event.stopPropagation();
    }
    onInput() {
        this.value = this.inputRef.value.value;
        if (this.isTextarea) this.setTextareaHeight();
        this.emit("input");
    }
    onInvalid(event) {
        event.preventDefault();
    }
    onKeyDown(event) {
        const hasModifier = event.metaKey || event.ctrlKey || event.shiftKey || event.altKey;
        // 聚焦状态按下回车时，提交表单。可以在 keydown 事件中使用 event.preventDefault() 来取消提交表单
        if (event.key === "Enter" && !hasModifier) setTimeout(()=>{
            if (!event.defaultPrevented) this.formController.submit();
        });
    }
    /**
     * textarea 不支持 pattern 属性，所以在 keyup 时执行验证
     */ onTextAreaKeyUp() {
        if (this.pattern) {
            const patternRegex = new RegExp(this.pattern);
            const hasError = this.value && !this.value.match(patternRegex);
            this.setCustomValidity(hasError ? "\u8BF7\u4E0E\u8BF7\u6C42\u7684\u683C\u5F0F\u5339\u914D\u3002" : "");
        }
    }
    onTogglePassword() {
        this.isPasswordVisible = !this.isPasswordVisible;
    }
    setTextareaHeight() {
        if (this.autosize) {
            this.inputRef.value.style.height = "auto";
            this.inputRef.value.style.height = `${this.inputRef.value.scrollHeight}px`;
        } else this.inputRef.value.style.height = undefined;
    }
    renderLabel() {
        return this.label ? (0, _lit.html)`<label part="label" class="label" ${(0, _motion.animate)({
            keyframeOptions: {
                duration: (0, _motionJs.getDuration)(this, "short4"),
                easing: (0, _motionJs.getEasing)(this, "standard")
            }
        })}>${this.label}</label>` : (0, _templateJs.nothingTemplate);
    }
    renderPrefix() {
        return (0, _lit.html)`<slot name="icon" part="icon" class="icon">${this.icon ? (0, _lit.html)`<mdui-icon name="${this.icon}" class="i"></mdui-icon>` : (0, _templateJs.nothingTemplate)}</slot><slot name="prefix" part="prefix" class="prefix">${this.prefix}</slot>`;
    }
    renderSuffix(hasErrorIcon) {
        return (0, _lit.html)`<slot name="suffix" part="suffix" class="suffix">${this.suffix}</slot>${hasErrorIcon ? (0, _lit.html)`<slot name="error-icon" part="error-icon" class="right-icon">${this.errorIcon ? (0, _lit.html)`<mdui-icon name="${this.errorIcon}" class="i"></mdui-icon>` : (0, _lit.html)`<mdui-icon-error class="i"></mdui-icon-error>`}</slot>` : (0, _lit.html)`<slot name="end-icon" part="end-icon" class="end-icon right-icon">${this.endIcon ? (0, _lit.html)`<mdui-icon name="${this.endIcon}" class="i"></mdui-icon>` : (0, _templateJs.nothingTemplate)}</slot>`}`;
    }
    renderClearButton() {
        const hasClearButton = this.clearable && !this.disabled && (!this.readonly || this.readonlyButClearable) && (typeof this.value === "number" || this.value.length > 0);
        return (0, _whenJs.when)(hasClearButton, ()=>(0, _lit.html)`<slot name="clear-button" part="clear-button" class="right-icon" @click="${this.onClear}"><mdui-button-icon tabindex="-1"><slot name="clear-icon" part="clear-icon">${this.clearIcon ? (0, _lit.html)`<mdui-icon name="${this.clearIcon}" class="i"></mdui-icon>` : (0, _lit.html)`<mdui-icon-cancel--outlined class="i"></mdui-icon-cancel--outlined>`}</slot></mdui-button-icon></slot>`);
    }
    renderTogglePasswordButton() {
        const hasTogglePasswordButton = this.type === "password" && this.togglePassword && !this.disabled;
        return (0, _whenJs.when)(hasTogglePasswordButton, ()=>(0, _lit.html)`<slot name="toggle-password-button" part="toggle-password-button" class="right-icon" @click="${this.onTogglePassword}"><mdui-button-icon tabindex="-1">${this.isPasswordVisible ? (0, _lit.html)`<slot name="show-password-icon" part="show-password-icon">${this.showPasswordIcon ? (0, _lit.html)`<mdui-icon name="${this.showPasswordIcon}" class="i"></mdui-icon>` : (0, _lit.html)`<mdui-icon-visibility-off class="i"></mdui-icon-visibility-off>`}</slot>` : (0, _lit.html)`<slot name="hide-password-icon" part="hide-password-icon">${this.hidePasswordIcon ? (0, _lit.html)`<mdui-icon name="${this.hidePasswordIcon}" class="i"></mdui-icon>` : (0, _lit.html)`<mdui-icon-visibility class="i"></mdui-icon-visibility>`}</slot>`}</mdui-button-icon></slot>`);
    }
    renderInput(hasInputSlot) {
        return (0, _lit.html)`<input ${(0, _refJs.ref)(this.inputRef)} part="input" class="input ${(0, _classMapJs.classMap)({
            "hide-input": hasInputSlot
        })}" type="${this.type === "password" && this.isPasswordVisible ? "text" : this.type}" name="${(0, _ifDefinedJs.ifDefined)(this.name)}" .value="${(0, _liveJs.live)(this.value)}" placeholder="${(0, _ifDefinedJs.ifDefined)(// @ts-ignore
        !this.label || this.isFocusedStyle || this.hasValue ? this.placeholder : undefined)}" ?readonly="${this.readonly}" ?disabled="${this.disabled}" ?required="${this.required}" minlength="${(0, _ifDefinedJs.ifDefined)(this.minlength)}" maxlength="${(0, _ifDefinedJs.ifDefined)(this.maxlength)}" min="${(0, _ifDefinedJs.ifDefined)(this.min)}" max="${(0, _ifDefinedJs.ifDefined)(this.max)}" step="${(0, _ifDefinedJs.ifDefined)(this.step)}" autocapitalize="${(0, _ifDefinedJs.ifDefined)(this.type === "password" ? "off" : this.autocapitalize)}" autocomplete="${(0, _ifDefinedJs.ifDefined)(this.type === "password" ? "off" : this.autocomplete)}" autocorrect="${(0, _ifDefinedJs.ifDefined)(this.type === "password" ? "off" : this.autocorrect)}" spellcheck="${(0, _ifDefinedJs.ifDefined)(this.spellcheck)}" pattern="${(0, _ifDefinedJs.ifDefined)(this.pattern)}" enterkeyhint="${(0, _ifDefinedJs.ifDefined)(this.enterkeyhint)}" inputmode="${(0, _ifDefinedJs.ifDefined)(this.inputmode)}" @change="${this.onChange}" @input="${this.onInput}" @invalid="${this.onInvalid}" @keydown="${this.onKeyDown}">`;
    }
    renderTextArea(hasInputSlot) {
        return (0, _lit.html)`<textarea ${(0, _refJs.ref)(this.inputRef)} part="input" class="input ${(0, _classMapJs.classMap)({
            "hide-input": hasInputSlot
        })}" name="${(0, _ifDefinedJs.ifDefined)(this.name)}" .value="${(0, _liveJs.live)(this.value)}" placeholder="${(0, _ifDefinedJs.ifDefined)(// @ts-ignore
        !this.label || this.isFocusedStyle || this.hasValue ? this.placeholder : undefined)}" ?readonly="${this.readonly}" ?disabled="${this.disabled}" ?required="${this.required}" minlength="${(0, _ifDefinedJs.ifDefined)(this.minlength)}" maxlength="${(0, _ifDefinedJs.ifDefined)(this.maxlength)}" rows="${this.rows ?? 1}" autocapitalize="${(0, _ifDefinedJs.ifDefined)(this.autocapitalize)}" autocorrect="${(0, _ifDefinedJs.ifDefined)(this.autocorrect)}" spellcheck="${(0, _ifDefinedJs.ifDefined)(this.spellcheck)}" enterkeyhint="${(0, _ifDefinedJs.ifDefined)(this.enterkeyhint)}" inputmode="${(0, _ifDefinedJs.ifDefined)(this.inputmode)}" @change="${this.onChange}" @input="${this.onInput}" @invalid="${this.onInvalid}" @keydown="${this.onKeyDown}" @keyup="${this.onTextAreaKeyUp}"></textarea>`;
    }
    /**
     * @param hasError 是否包含错误提示
     * @param hasHelper 是否含 helper 属性或 helper slot
     */ renderHelper(hasError, hasHelper) {
        return hasError ? (0, _lit.html)`<div part="error" class="error">${this.error || this.inputRef.value.validationMessage}</div>` : hasHelper ? (0, _lit.html)`<slot name="helper" part="helper" class="helper">${this.helper}</slot>` : (0, _lit.html)`<span></span>`;
    }
    renderCounter(hasCounter) {
        return hasCounter ? (0, _lit.html)`<div part="counter" class="counter">${this.value.length}/${this.maxlength}</div>` : (0, _templateJs.nothingTemplate);
    }
};
TextField.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _styleJs.style)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], TextField.prototype, "variant", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], TextField.prototype, "type", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], TextField.prototype, "name", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)()
], TextField.prototype, "value", void 0);
(0, _tslib.__decorate)([
    (0, _defaultValueJs.defaultValue)()
], TextField.prototype, "defaultValue", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], TextField.prototype, "label", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], TextField.prototype, "placeholder", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], TextField.prototype, "helper", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter),
        attribute: "helper-on-focus"
    })
], TextField.prototype, "helperOnFocus", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], TextField.prototype, "clearable", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "clear-icon"
    })
], TextField.prototype, "clearIcon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter),
        attribute: "end-aligned"
    })
], TextField.prototype, "endAligned", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], TextField.prototype, "prefix", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], TextField.prototype, "suffix", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], TextField.prototype, "icon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "end-icon"
    })
], TextField.prototype, "endIcon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "error-icon"
    })
], TextField.prototype, "errorIcon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], TextField.prototype, "form", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], TextField.prototype, "readonly", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], TextField.prototype, "disabled", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], TextField.prototype, "required", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Number,
        reflect: true
    })
], TextField.prototype, "rows", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], TextField.prototype, "autosize", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Number,
        reflect: true,
        attribute: "min-rows"
    })
], TextField.prototype, "minRows", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Number,
        reflect: true,
        attribute: "max-rows"
    })
], TextField.prototype, "maxRows", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Number,
        reflect: true
    })
], TextField.prototype, "minlength", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Number,
        reflect: true
    })
], TextField.prototype, "maxlength", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], TextField.prototype, "counter", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Number,
        reflect: true
    })
], TextField.prototype, "min", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Number,
        reflect: true
    })
], TextField.prototype, "max", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Number,
        reflect: true
    })
], TextField.prototype, "step", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], TextField.prototype, "pattern", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter),
        attribute: "toggle-password"
    })
], TextField.prototype, "togglePassword", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "show-password-icon"
    })
], TextField.prototype, "showPasswordIcon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "hide-password-icon"
    })
], TextField.prototype, "hidePasswordIcon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], TextField.prototype, "autocapitalize", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], TextField.prototype, "autocorrect", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], TextField.prototype, "autocomplete", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], TextField.prototype, "enterkeyhint", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], TextField.prototype, "spellcheck", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], TextField.prototype, "inputmode", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], TextField.prototype, "invalid", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], TextField.prototype, "invalidStyle", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter),
        attribute: "focused-style"
    })
], TextField.prototype, "focusedStyle", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], TextField.prototype, "isPasswordVisible", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], TextField.prototype, "hasValue", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], TextField.prototype, "error", void 0);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("disabled", true)
], TextField.prototype, "onDisabledChange", null);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("value")
], TextField.prototype, "onValueChange", null);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("rows", true)
], TextField.prototype, "onRowsChange", null);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("maxRows")
], TextField.prototype, "onMaxRowsChange", null);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("minRows")
], TextField.prototype, "onMinRowsChange", null);
TextField = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-text-field")
], TextField);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/class-map.js":"jiVKL","lit/directives/if-defined.js":"77RTn","lit/directives/live.js":"a4wmv","lit/directives/ref.js":"eKwmp","lit/directives/when.js":"5IbUr","@lit-labs/motion":"jofUZ","@mdui/jq/$.js":"dZx9v","@mdui/jq/methods/css.js":"lzdJz","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/controllers/form.js":"9HuZO","@mdui/shared/controllers/has-slot.js":"cARnY","@mdui/shared/decorators/default-value.js":"lGYLk","@mdui/shared/decorators/watch.js":"20Qzb","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/helpers/motion.js":"3ZuTY","@mdui/shared/helpers/observeResize.js":"fLGE3","@mdui/shared/helpers/template.js":"7SHVu","@mdui/shared/icons/cancel--outlined.js":"cYTtb","@mdui/shared/icons/error.js":"1ccQo","@mdui/shared/icons/visibility-off.js":"5tKC4","@mdui/shared/icons/visibility.js":"a5Juk","@mdui/shared/lit-styles/component-style.js":"jFNMX","@mdui/shared/mixins/focusable.js":"kzhFM","../button-icon.js":"c1x0d","../icon.js":"6YN4l","./style.js":"8bJBF","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jofUZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Animate", ()=>(0, _animateJs.Animate));
parcelHelpers.export(exports, "animate", ()=>(0, _animateJs.animate));
parcelHelpers.export(exports, "animationFrame", ()=>(0, _animateJs.animationFrame));
parcelHelpers.export(exports, "defaultCssProperties", ()=>(0, _animateJs.defaultCssProperties));
parcelHelpers.export(exports, "defaultKeyframeOptions", ()=>(0, _animateJs.defaultKeyframeOptions));
parcelHelpers.export(exports, "fade", ()=>(0, _animateJs.fade));
parcelHelpers.export(exports, "fadeIn", ()=>(0, _animateJs.fadeIn));
parcelHelpers.export(exports, "fadeInSlow", ()=>(0, _animateJs.fadeInSlow));
parcelHelpers.export(exports, "fadeOut", ()=>(0, _animateJs.fadeOut));
parcelHelpers.export(exports, "flyAbove", ()=>(0, _animateJs.flyAbove));
parcelHelpers.export(exports, "flyBelow", ()=>(0, _animateJs.flyBelow));
parcelHelpers.export(exports, "flyLeft", ()=>(0, _animateJs.flyLeft));
parcelHelpers.export(exports, "flyRight", ()=>(0, _animateJs.flyRight));
parcelHelpers.export(exports, "none", ()=>(0, _animateJs.none));
parcelHelpers.export(exports, "transformProps", ()=>(0, _animateJs.transformProps));
parcelHelpers.export(exports, "AnimateController", ()=>(0, _animateControllerJs.AnimateController));
parcelHelpers.export(exports, "controllerMap", ()=>(0, _animateControllerJs.controllerMap));
parcelHelpers.export(exports, "Position", ()=>(0, _positionJs.Position));
parcelHelpers.export(exports, "position", ()=>(0, _positionJs.position));
var _animateJs = require("./animate.js");
var _animateControllerJs = require("./animate-controller.js");
var _positionJs = require("./position.js");

},{"./animate.js":"ePIlY","./animate-controller.js":"7hGqK","./position.js":"7yzKj","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ePIlY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AnimateController", ()=>(0, _animateControllerJs.AnimateController));
parcelHelpers.export(exports, "Animate", ()=>x);
parcelHelpers.export(exports, "animate", ()=>F);
parcelHelpers.export(exports, "animationFrame", ()=>a);
parcelHelpers.export(exports, "defaultCssProperties", ()=>b);
parcelHelpers.export(exports, "defaultKeyframeOptions", ()=>A);
parcelHelpers.export(exports, "fade", ()=>p);
parcelHelpers.export(exports, "fadeIn", ()=>v);
parcelHelpers.export(exports, "fadeInSlow", ()=>y);
parcelHelpers.export(exports, "fadeOut", ()=>f);
parcelHelpers.export(exports, "flyAbove", ()=>l);
parcelHelpers.export(exports, "flyBelow", ()=>c);
parcelHelpers.export(exports, "flyLeft", ()=>d);
parcelHelpers.export(exports, "flyRight", ()=>u);
parcelHelpers.export(exports, "none", ()=>m);
parcelHelpers.export(exports, "transformProps", ()=>N);
var _htmlJs = require("lit/html.js");
var _directiveJs = require("lit/directive.js");
var _asyncDirectiveJs = require("lit/async-directive.js");
var _animateControllerJs = require("./animate-controller.js");
let o = 0;
const r = new Map, n = new WeakSet, a = ()=>new Promise((t)=>requestAnimationFrame(t)), c = [
    {
        transform: "translateY(100%) scale(0)",
        opacity: 0
    }
], l = [
    {
        transform: "translateY(-100%) scale(0)",
        opacity: 0
    }
], d = [
    {
        transform: "translateX(-100%) scale(0)",
        opacity: 0
    }
], u = [
    {
        transform: "translateX(100%) scale(0)",
        opacity: 0
    }
], m = [
    {}
], f = [
    {
        opacity: 0
    }
], p = f, v = [
    {
        opacity: 0
    },
    {
        opacity: 1
    }
], y = [
    {
        opacity: 0
    },
    {
        opacity: .25,
        offset: .75
    },
    {
        opacity: 1
    }
], g = (t, i)=>{
    const s = t - i;
    return 0 === s ? void 0 : s;
}, w = (t, i)=>{
    const s = t / i;
    return 1 === s ? void 0 : s;
}, N = {
    left: (t, i)=>{
        const s = g(t, i);
        return {
            value: s,
            transform: null == s || isNaN(s) ? void 0 : `translateX(${s}px)`
        };
    },
    top: (t, i)=>{
        const s = g(t, i);
        return {
            value: s,
            transform: null == s || isNaN(s) ? void 0 : `translateY(${s}px)`
        };
    },
    width: (t, i)=>{
        let s;
        0 === i && (i = 1, s = {
            width: "1px"
        });
        const e = w(t, i);
        return {
            value: e,
            overrideFrom: s,
            transform: null == e || isNaN(e) ? void 0 : `scaleX(${e})`
        };
    },
    height: (t, i)=>{
        let s;
        0 === i && (i = 1, s = {
            height: "1px"
        });
        const e = w(t, i);
        return {
            value: e,
            overrideFrom: s,
            transform: null == e || isNaN(e) ? void 0 : `scaleY(${e})`
        };
    }
}, A = {
    duration: 333,
    easing: "ease-in-out"
}, b = [
    "left",
    "top",
    "width",
    "height",
    "opacity",
    "color",
    "background"
], j = new WeakMap;
class x extends (0, _asyncDirectiveJs.AsyncDirective) {
    constructor(t){
        if (super(t), this.t = null, this.i = null, this.o = !0, this.shouldLog = !1, t.type === (0, _directiveJs.PartType).CHILD) throw Error("The `animate` directive must be used in attribute position.");
        this.createFinished();
    }
    createFinished() {
        this.resolveFinished?.(), this.finished = new Promise((t)=>{
            this.h = t;
        });
    }
    async resolveFinished() {
        this.h?.(), this.h = void 0;
    }
    render(i) {
        return 0, _htmlJs.nothing;
    }
    getController() {
        return (0, _animateControllerJs.controllerMap).get(this.l);
    }
    isDisabled() {
        return this.options.disabled || this.getController()?.disabled;
    }
    update(t, [i]) {
        const s = void 0 === this.l;
        return s && (this.l = t.options?.host, this.l.addController(this), this.element = t.element, j.set(this.element, this)), this.optionsOrCallback = i, (s || "function" != typeof i) && this.u(i), this.render(i);
    }
    u(t) {
        t = t ?? {};
        const i = this.getController();
        void 0 !== i && ((t = {
            ...i.defaultOptions,
            ...t
        }).keyframeOptions = {
            ...i.defaultOptions.keyframeOptions,
            ...t.keyframeOptions
        }), t.properties ??= b, this.options = t;
    }
    p() {
        const t = {}, i = this.element.getBoundingClientRect(), s = getComputedStyle(this.element);
        return this.options.properties.forEach((e)=>{
            const h = i[e] ?? (N[e] ? void 0 : s[e]), o = Number(h);
            t[e] = isNaN(o) ? h + "" : o;
        }), t;
    }
    m() {
        let t, i = !0;
        return this.options.guard && (t = this.options.guard(), i = ((t, i)=>{
            if (Array.isArray(t)) {
                if (Array.isArray(i) && i.length === t.length && t.every((t, s)=>t === i[s])) return !1;
            } else if (i === t) return !1;
            return !0;
        })(t, this.v)), this.o = this.l.hasUpdated && !this.isDisabled() && !this.isAnimating() && i && this.element.isConnected, this.o && (this.v = Array.isArray(t) ? Array.from(t) : t), this.o;
    }
    hostUpdate() {
        "function" == typeof this.optionsOrCallback && this.u(this.optionsOrCallback()), this.m() && (this.g = this.p(), this.t = this.t ?? this.element.parentNode, this.i = this.element.nextSibling);
    }
    async hostUpdated() {
        if (!this.o || !this.element.isConnected || this.options.skipInitial && !this.isHostRendered) return;
        let t;
        this.prepare(), await a;
        const i = this._(), s = this.A(this.options.keyframeOptions, i), e = this.p();
        if (void 0 !== this.g) {
            const { from: s, to: h } = this.O(this.g, e, i);
            this.log("measured", [
                this.g,
                e,
                s,
                h
            ]), t = this.calculateKeyframes(s, h);
        } else {
            const s = r.get(this.options.inId);
            if (s) {
                r.delete(this.options.inId);
                const { from: h, to: n } = this.O(s, e, i);
                t = this.calculateKeyframes(h, n), t = this.options.in ? [
                    {
                        ...this.options.in[0],
                        ...t[0]
                    },
                    ...this.options.in.slice(1),
                    t[1]
                ] : t, o++, t.forEach((t)=>t.zIndex = o);
            } else this.options.in && (t = [
                ...this.options.in,
                {}
            ]);
        }
        this.animate(t, s);
    }
    resetStyles() {
        void 0 !== this.j && (this.element.setAttribute("style", this.j ?? ""), this.j = void 0);
    }
    commitStyles() {
        this.j = this.element.getAttribute("style"), this.webAnimation?.commitStyles(), this.webAnimation?.cancel();
    }
    reconnected() {}
    async disconnected() {
        if (!this.o) return;
        if (void 0 !== this.options.id && r.set(this.options.id, this.g), void 0 === this.options.out) return;
        if (this.prepare(), await a(), this.t?.isConnected) {
            const t = this.i && this.i.parentNode === this.t ? this.i : null;
            if (this.t.insertBefore(this.element, t), this.options.stabilizeOut) {
                const t = this.p();
                this.log("stabilizing out");
                const i = this.g.left - t.left, s = this.g.top - t.top;
                !("static" === getComputedStyle(this.element).position) || 0 === i && 0 === s || (this.element.style.position = "relative"), 0 !== i && (this.element.style.left = i + "px"), 0 !== s && (this.element.style.top = s + "px");
            }
        }
        const t = this.A(this.options.keyframeOptions);
        await this.animate(this.options.out, t), this.element.remove();
    }
    prepare() {
        this.createFinished();
    }
    start() {
        this.options.onStart?.(this);
    }
    didFinish(t) {
        t && this.options.onComplete?.(this), this.g = void 0, this.animatingProperties = void 0, this.frames = void 0, this.resolveFinished();
    }
    _() {
        const t = [];
        for(let i = this.element.parentNode; i; i = i?.parentNode){
            const s = j.get(i);
            s && !s.isDisabled() && s && t.push(s);
        }
        return t;
    }
    get isHostRendered() {
        const t = n.has(this.l);
        return t || this.l.updateComplete.then(()=>{
            n.add(this.l);
        }), t;
    }
    A(t, i = this._()) {
        const s = {
            ...A
        };
        return i.forEach((t)=>Object.assign(s, t.options.keyframeOptions)), Object.assign(s, t), s;
    }
    O(t, i, s) {
        t = {
            ...t
        }, i = {
            ...i
        };
        const e = s.map((t)=>t.animatingProperties).filter((t)=>void 0 !== t);
        let h = 1, o = 1;
        return void 0 !== e && (e.forEach((t)=>{
            t.width && (h /= t.width), t.height && (o /= t.height);
        }), void 0 !== t.left && void 0 !== i.left && (t.left = h * t.left, i.left = h * i.left), void 0 !== t.top && void 0 !== i.top && (t.top = o * t.top, i.top = o * i.top)), {
            from: t,
            to: i
        };
    }
    calculateKeyframes(t, i, s = !1) {
        const e = {}, h = {};
        let o = !1;
        const r = {};
        for(const s in i){
            const n = t[s], a = i[s];
            if (s in N) {
                const t = N[s];
                if (void 0 === n || void 0 === a) continue;
                const i = t(n, a);
                void 0 !== i.transform && (r[s] = i.value, o = !0, e.transform = `${e.transform ?? ""} ${i.transform}`, void 0 !== i.overrideFrom && Object.assign(e, i.overrideFrom));
            } else n !== a && void 0 !== n && void 0 !== a && (o = !0, e[s] = n, h[s] = a);
        }
        return e.transformOrigin = h.transformOrigin = s ? "center center" : "top left", this.animatingProperties = r, o ? [
            e,
            h
        ] : void 0;
    }
    async animate(t, i = this.options.keyframeOptions) {
        this.start(), this.frames = t;
        let s = !1;
        if (!this.isAnimating() && !this.isDisabled() && (this.options.onFrames && (this.frames = t = this.options.onFrames(this), this.log("modified frames", t)), void 0 !== t)) {
            this.log("animate", [
                t,
                i
            ]), s = !0, this.webAnimation = this.element.animate(t, i);
            const e = this.getController();
            e?.add(this);
            try {
                await this.webAnimation.finished;
            } catch (t) {}
            e?.remove(this);
        }
        return this.didFinish(s), s;
    }
    isAnimating() {
        return "running" === this.webAnimation?.playState || this.webAnimation?.pending;
    }
    log(t, i) {
        this.shouldLog && !this.isDisabled() && console.log(t, this.options.id, i);
    }
}
const F = (0, _directiveJs.directive)(x);

},{"lit/html.js":"g2SBY","lit/directive.js":"9ojx0","lit/async-directive.js":"fVXah","./animate-controller.js":"7hGqK","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"g2SBY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _litHtml = require("lit-html");
parcelHelpers.exportAll(_litHtml, exports);

},{"lit-html":"1cmQt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9ojx0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _directiveJs = require("lit-html/directive.js");
parcelHelpers.exportAll(_directiveJs, exports);

},{"lit-html/directive.js":"9lbyV","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fVXah":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _asyncDirectiveJs = require("lit-html/async-directive.js");
parcelHelpers.exportAll(_asyncDirectiveJs, exports);

},{"lit-html/async-directive.js":"4f1Uv","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7hGqK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AnimateController", ()=>t);
parcelHelpers.export(exports, "controllerMap", ()=>i);
const i = new WeakMap;
class t {
    constructor(t, s){
        this.startPaused = !1, this.disabled = !1, this.clients = new Set, this.pendingComplete = !1, this.host = t, this.defaultOptions = s.defaultOptions || {}, this.startPaused = !!s.startPaused, this.disabled = !!s.disabled, this.onComplete = s.onComplete, i.set(this.host, this);
    }
    async add(i) {
        this.clients.add(i), this.startPaused && i.webAnimation?.pause(), this.pendingComplete = !0, await i.finished, this.pendingComplete && !this.isAnimating && (this.pendingComplete = !1, this.onComplete?.());
    }
    remove(i) {
        this.clients.delete(i);
    }
    pause() {
        this.clients.forEach((i)=>i.webAnimation?.pause());
    }
    play() {
        this.clients.forEach((i)=>i.webAnimation?.play());
    }
    cancel() {
        this.clients.forEach((i)=>i.webAnimation?.cancel()), this.clients.clear();
    }
    finish() {
        this.clients.forEach((i)=>i.webAnimation?.finish()), this.clients.clear();
    }
    togglePlay() {
        this.isPlaying ? this.pause() : this.play();
    }
    get isAnimating() {
        return this.clients.size > 0;
    }
    get isPlaying() {
        return Array.from(this.clients).some((i)=>"running" === i.webAnimation?.playState);
    }
    async finished() {
        await Promise.all(Array.from(this.clients).map((i)=>i.finished));
    }
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7yzKj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Position", ()=>e);
parcelHelpers.export(exports, "position", ()=>h);
var _htmlJs = require("lit/html.js");
var _directiveJs = require("lit/directive.js");
var _asyncDirectiveJs = require("lit/async-directive.js");
const r = [
    "top",
    "right",
    "bottom",
    "left"
];
class e extends (0, _asyncDirectiveJs.AsyncDirective) {
    constructor(t){
        if (super(t), t.type !== (0, _directiveJs.PartType).ELEMENT) throw Error("The `position` directive must be used in attribute position.");
    }
    render(i, s) {
        return 0, _htmlJs.nothing;
    }
    update(t, [i, s]) {
        return void 0 === this.l && (this.l = t.options?.host, this.l.addController(this)), this.N = t.element, this.P = i, this.S = s ?? [
            "left",
            "top",
            "width",
            "height"
        ], this.render(i, s);
    }
    hostUpdated() {
        this.C();
    }
    C() {
        const t = "function" == typeof this.P ? this.P() : this.P?.value, i = t.offsetParent;
        if (void 0 === t || !i) return;
        const s = t.getBoundingClientRect(), o = i.getBoundingClientRect();
        this.S?.forEach((t)=>{
            const i = r.includes(t) ? s[t] - o[t] : s[t];
            this.N.style[t] = i + "px";
        });
    }
}
const h = (0, _directiveJs.directive)(e);

},{"lit/html.js":"g2SBY","lit/directive.js":"9ojx0","lit/async-directive.js":"fVXah","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cYTtb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "IconCancel_Outlined", ()=>IconCancel_Outlined);
var _tslib = require("tslib");
var _lit = require("lit");
var _customElementJs = require("lit/decorators/custom-element.js");
var _styleJs = require("./shared/style.js");
var _svgTagJs = require("./shared/svg-tag.js");
let IconCancel_Outlined = class IconCancel_Outlined extends (0, _lit.LitElement) {
    render() {
        return (0, _svgTagJs.svgTag)('<path d="M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm3.59-13L12 10.59 8.41 7 7 8.41 10.59 12 7 15.59 8.41 17 12 13.41 15.59 17 17 15.59 13.41 12 17 8.41z"/>');
    }
};
IconCancel_Outlined.styles = (0, _styleJs.style);
IconCancel_Outlined = (0, _tslib.__decorate)([
    (0, _customElementJs.customElement)("mdui-icon-cancel--outlined")
], IconCancel_Outlined);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators/custom-element.js":"i1eyG","./shared/style.js":"a02xN","./shared/svg-tag.js":"4bX1Q","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1ccQo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "IconError", ()=>IconError);
var _tslib = require("tslib");
var _lit = require("lit");
var _customElementJs = require("lit/decorators/custom-element.js");
var _styleJs = require("./shared/style.js");
var _svgTagJs = require("./shared/svg-tag.js");
let IconError = class IconError extends (0, _lit.LitElement) {
    render() {
        return (0, _svgTagJs.svgTag)('<path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z"/>');
    }
};
IconError.styles = (0, _styleJs.style);
IconError = (0, _tslib.__decorate)([
    (0, _customElementJs.customElement)("mdui-icon-error")
], IconError);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators/custom-element.js":"i1eyG","./shared/style.js":"a02xN","./shared/svg-tag.js":"4bX1Q","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5tKC4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "IconVisibilityOff", ()=>IconVisibilityOff);
var _tslib = require("tslib");
var _lit = require("lit");
var _customElementJs = require("lit/decorators/custom-element.js");
var _styleJs = require("./shared/style.js");
var _svgTagJs = require("./shared/svg-tag.js");
let IconVisibilityOff = class IconVisibilityOff extends (0, _lit.LitElement) {
    render() {
        return (0, _svgTagJs.svgTag)('<path d="M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46A11.804 11.804 0 0 0 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z"/>');
    }
};
IconVisibilityOff.styles = (0, _styleJs.style);
IconVisibilityOff = (0, _tslib.__decorate)([
    (0, _customElementJs.customElement)("mdui-icon-visibility-off")
], IconVisibilityOff);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators/custom-element.js":"i1eyG","./shared/style.js":"a02xN","./shared/svg-tag.js":"4bX1Q","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"a5Juk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "IconVisibility", ()=>IconVisibility);
var _tslib = require("tslib");
var _lit = require("lit");
var _customElementJs = require("lit/decorators/custom-element.js");
var _styleJs = require("./shared/style.js");
var _svgTagJs = require("./shared/svg-tag.js");
let IconVisibility = class IconVisibility extends (0, _lit.LitElement) {
    render() {
        return (0, _svgTagJs.svgTag)('<path d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"/>');
    }
};
IconVisibility.styles = (0, _styleJs.style);
IconVisibility = (0, _tslib.__decorate)([
    (0, _customElementJs.customElement)("mdui-icon-visibility")
], IconVisibility);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators/custom-element.js":"i1eyG","./shared/style.js":"a02xN","./shared/svg-tag.js":"4bX1Q","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8bJBF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "style", ()=>style);
var _lit = require("lit");
const style = (0, _lit.css)`:host{display:inline-block;width:100%}:host([disabled]){pointer-events:none}:host([type=hidden]){display:none}.container{position:relative;display:flex;align-items:center;transition:box-shadow var(--mdui-motion-duration-short4) var(--mdui-motion-easing-standard);padding:0 1rem}.container.has-icon{padding-left:.75rem}.container.has-end-icon,.container.has-error-icon{padding-right:.75rem}:host([variant=filled]) .container{box-shadow:inset 0 -.0625rem 0 0 rgb(var(--mdui-color-on-surface-variant));background-color:rgb(var(--mdui-color-surface-container-highest));border-radius:var(--mdui-shape-corner-extra-small) var(--mdui-shape-corner-extra-small) 0 0}:host([variant=filled]) .container.invalid,:host([variant=filled]) .container.invalid-style{box-shadow:inset 0 -.0625rem 0 0 rgb(var(--mdui-color-error))}:host([variant=filled]:hover) .container{box-shadow:inset 0 -.0625rem 0 0 rgb(var(--mdui-color-on-surface))}:host([variant=filled]:hover) .container.invalid,:host([variant=filled]:hover) .container.invalid-style{box-shadow:inset 0 -.0625rem 0 0 rgb(var(--mdui-color-on-error-container))}:host([variant=filled][focused-style]) .container,:host([variant=filled][focused]) .container{box-shadow:inset 0 -.125rem 0 0 rgb(var(--mdui-color-primary))}:host([variant=filled][focused-style]) .container.invalid,:host([variant=filled][focused-style]) .container.invalid-style,:host([variant=filled][focused]) .container.invalid,:host([variant=filled][focused]) .container.invalid-style{box-shadow:inset 0 -.125rem 0 0 rgb(var(--mdui-color-error))}:host([variant=filled][disabled]) .container{box-shadow:inset 0 -.0625rem 0 0 rgba(var(--mdui-color-on-surface),38%);background-color:rgba(var(--mdui-color-on-surface),4%)}:host([variant=outlined]) .container{box-shadow:inset 0 0 0 .0625rem rgb(var(--mdui-color-outline));border-radius:var(--mdui-shape-corner-extra-small)}:host([variant=outlined]) .container.invalid,:host([variant=outlined]) .container.invalid-style{box-shadow:inset 0 0 0 .0625rem rgb(var(--mdui-color-error))}:host([variant=outlined]:hover) .container{box-shadow:inset 0 0 0 .0625rem rgb(var(--mdui-color-on-surface))}:host([variant=outlined]:hover) .container.invalid,:host([variant=outlined]:hover) .container.invalid-style{box-shadow:inset 0 0 0 .0625rem rgb(var(--mdui-color-on-error-container))}:host([variant=outlined][focused-style]) .container,:host([variant=outlined][focused]) .container{box-shadow:inset 0 0 0 .125rem rgb(var(--mdui-color-primary))}:host([variant=outlined][focused-style]) .container.invalid,:host([variant=outlined][focused-style]) .container.invalid-style,:host([variant=outlined][focused]) .container.invalid,:host([variant=outlined][focused]) .container.invalid-style{box-shadow:inset 0 0 0 .125rem rgb(var(--mdui-color-error))}:host([variant=outlined][disabled]) .container{box-shadow:inset 0 0 0 .125rem rgba(var(--mdui-color-on-surface),12%)}.icon,.prefix,.right-icon,.suffix{display:flex;-webkit-user-select:none;user-select:none;color:rgb(var(--mdui-color-on-surface-variant))}:host([disabled]) .icon,:host([disabled]) .prefix,:host([disabled]) .right-icon,:host([disabled]) .suffix{color:rgba(var(--mdui-color-on-surface),38%)}.invalid .right-icon,.invalid .suffix,.invalid-style .right-icon,.invalid-style .suffix{color:rgb(var(--mdui-color-error))}:host(:hover) .invalid .right-icon,:host(:hover) .invalid .suffix,:host(:hover) .invalid-style .right-icon,:host(:hover) .invalid-style .suffix{color:rgb(var(--mdui-color-on-error-container))}:host([focused-style]) .invalid .right-icon,:host([focused-style]) .invalid .suffix,:host([focused-style]) .invalid-style .right-icon,:host([focused-style]) .invalid-style .suffix,:host([focused]) .invalid .right-icon,:host([focused]) .invalid .suffix,:host([focused]) .invalid-style .right-icon,:host([focused]) .invalid-style .suffix{color:rgb(var(--mdui-color-error))}.icon,.right-icon{font-size:1.5rem}.icon mdui-button-icon,.right-icon mdui-button-icon,::slotted(mdui-button-icon[slot]){margin-left:-.5rem;margin-right:-.5rem}.icon .i,.right-icon .i,::slotted([slot$=icon]){font-size:inherit}.has-icon .icon{margin-right:1rem}.has-end-icon .end-icon,.right-icon:not(.end-icon){margin-left:1rem}.prefix,.suffix{display:none;font-size:var(--mdui-typescale-body-large-size);font-weight:var(--mdui-typescale-body-large-weight);letter-spacing:var(--mdui-typescale-body-large-tracking);line-height:var(--mdui-typescale-body-large-line-height)}:host([variant=filled][label]) .prefix,:host([variant=filled][label]) .suffix{padding-top:1rem}.has-value .prefix,.has-value .suffix,:host([focused-style]) .prefix,:host([focused-style]) .suffix,:host([focused]) .prefix,:host([focused]) .suffix{display:flex}.prefix{padding-right:.125rem}.suffix{padding-left:.125rem}.input-container{width:100%}.label{position:absolute;pointer-events:none;max-width:calc(100% - 1rem);display:-webkit-box;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;top:1rem;color:rgb(var(--mdui-color-on-surface-variant));font-size:var(--mdui-typescale-body-large-size);font-weight:var(--mdui-typescale-body-large-weight);letter-spacing:var(--mdui-typescale-body-large-tracking);line-height:var(--mdui-typescale-body-large-line-height)}.invalid .label,.invalid-style .label{color:rgb(var(--mdui-color-error))}:host([variant=outlined]) .label{padding:0 .25rem;margin:0 -.25rem}:host([variant=outlined]:hover) .label{color:rgb(var(--mdui-color-on-surface))}:host([variant=filled]:hover) .invalid .label,:host([variant=filled]:hover) .invalid-style .label,:host([variant=outlined]:hover) .invalid .label,:host([variant=outlined]:hover) .invalid-style .label{color:rgb(var(--mdui-color-on-error-container))}:host([variant=filled][focused-style]) .label,:host([variant=filled][focused]) .label,:host([variant=outlined][focused-style]) .label,:host([variant=outlined][focused]) .label{color:rgb(var(--mdui-color-primary))}:host([variant=filled]) .has-value .label,:host([variant=filled][focused-style]) .label,:host([variant=filled][focused]) .label,:host([variant=filled][type=date]) .label,:host([variant=filled][type=datetime-local]) .label,:host([variant=filled][type=month]) .label,:host([variant=filled][type=time]) .label,:host([variant=filled][type=week]) .label{font-size:var(--mdui-typescale-body-small-size);font-weight:var(--mdui-typescale-body-small-weight);letter-spacing:var(--mdui-typescale-body-small-tracking);line-height:var(--mdui-typescale-body-small-line-height);top:.25rem}:host([variant=outlined]) .has-value .label,:host([variant=outlined][focused-style]) .label,:host([variant=outlined][focused]) .label,:host([variant=outlined][type=date]) .label,:host([variant=outlined][type=datetime-local]) .label,:host([variant=outlined][type=month]) .label,:host([variant=outlined][type=time]) .label,:host([variant=outlined][type=week]) .label{font-size:var(--mdui-typescale-body-small-size);font-weight:var(--mdui-typescale-body-small-weight);letter-spacing:var(--mdui-typescale-body-small-tracking);line-height:var(--mdui-typescale-body-small-line-height);top:-.5rem;left:.75rem;background-color:rgb(var(--mdui-color-background))}:host([variant=filled][focused-style]) .invalid .label,:host([variant=filled][focused-style]) .invalid-style .label,:host([variant=filled][focused]) .invalid .label,:host([variant=filled][focused]) .invalid-style .label,:host([variant=outlined][focused-style]) .invalid .label,:host([variant=outlined][focused-style]) .invalid-style .label,:host([variant=outlined][focused]) .invalid .label,:host([variant=outlined][focused]) .invalid-style .label{color:rgb(var(--mdui-color-error))}:host([variant=filled][disabled]) .label,:host([variant=outlined][disabled]) .label{color:rgba(var(--mdui-color-on-surface),38%)}.input{display:flex;flex-wrap:wrap;width:100%;border:none;outline:0;background:0 0;-webkit-appearance:none;appearance:none;resize:none;cursor:inherit;font-family:inherit;padding:1rem 0;font-size:var(--mdui-typescale-body-large-size);font-weight:var(--mdui-typescale-body-large-weight);letter-spacing:var(--mdui-typescale-body-large-tracking);line-height:var(--mdui-typescale-body-large-line-height);color:rgb(var(--mdui-color-on-surface));caret-color:rgb(var(--mdui-color-primary))}.input.hide-input{opacity:0;height:0;padding:0!important;overflow:hidden}.input::placeholder{color:rgb(var(--mdui-color-on-surface-variant))}.invalid .input,.invalid-style .input{caret-color:rgb(var(--mdui-color-error))}:host([disabled]) .input{color:rgba(var(--mdui-color-on-surface),38%)}:host([end-aligned]) .input{text-align:right}:host([variant=filled]) .label+.input{padding:1.5rem 0 .5rem 0}.supporting{display:flex;justify-content:space-between;padding:.25rem 1rem;color:rgb(var(--mdui-color-on-surface-variant))}.supporting.invalid,.supporting.invalid-style{color:rgb(var(--mdui-color-error))}.helper{display:block;opacity:1;transition:opacity var(--mdui-motion-duration-short4) var(--mdui-motion-easing-linear);font-size:var(--mdui-typescale-body-small-size);font-weight:var(--mdui-typescale-body-small-weight);letter-spacing:var(--mdui-typescale-body-small-tracking);line-height:var(--mdui-typescale-body-small-line-height)}:host([disabled]) .helper{color:rgba(var(--mdui-color-on-surface),38%)}:host([helper-on-focus]) .helper{opacity:0}:host([helper-on-focus][focused-style]) .helper,:host([helper-on-focus][focused]) .helper{opacity:1}.error{font-size:var(--mdui-typescale-body-small-size);font-weight:var(--mdui-typescale-body-small-weight);letter-spacing:var(--mdui-typescale-body-small-tracking);line-height:var(--mdui-typescale-body-small-line-height)}.counter{flex-wrap:nowrap;padding-left:1rem;font-size:var(--mdui-typescale-body-small-size);font-weight:var(--mdui-typescale-body-small-weight);letter-spacing:var(--mdui-typescale-body-small-tracking);line-height:var(--mdui-typescale-body-small-line-height)}::-ms-reveal{display:none}.is-firefox .input[type=date],.is-firefox .input[type=datetime-local],.is-firefox .input[type=time]{-webkit-clip-path:inset(0 2em 0 0);clip-path:inset(0 2em 0 0)}.input[type=number]::-webkit-inner-spin-button,.input[type=number]::-webkit-outer-spin-button{-webkit-appearance:none;display:none}.input[type=number]{-moz-appearance:textfield}.input[type=search]::-webkit-search-cancel-button{-webkit-appearance:none}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"24BAJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "style", ()=>style);
var _lit = require("lit");
const style = (0, _lit.css)`:host{display:inline-block;width:100%}.hidden-input{display:none}.text-field{cursor:pointer}.chips{display:flex;flex-wrap:wrap;margin:-.5rem -.25rem;min-height:2.5rem}:host([variant=filled][label]) .chips{margin:0 -.25rem -1rem -.25rem}.chip{margin:.25rem}mdui-menu{max-width:none}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"asLdh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./slider/index.js");
parcelHelpers.exportAll(_indexJs, exports);

},{"./slider/index.js":"rH6gO","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"rH6gO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Slider", ()=>Slider);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _classMapJs = require("lit/directives/class-map.js");
var _liveJs = require("lit/directives/live.js");
var _mapJs = require("lit/directives/map.js");
var _refJs = require("lit/directives/ref.js");
var _styleMapJs = require("lit/directives/style-map.js");
var _whenJs = require("lit/directives/when.js");
var _formJs = require("@mdui/shared/controllers/form.js");
var _defaultValueJs = require("@mdui/shared/decorators/default-value.js");
var _watchJs = require("@mdui/shared/decorators/watch.js");
var _sliderBaseJs = require("./slider-base.js");
var _styleJs = require("./style.js");
/**
 * @summary 滑块组件
 *
 * ```html
 * <mdui-slider></mdui-slider>
 * ```
 *
 * @event focus - 获得焦点时触发
 * @event blur - 失去焦点时触发
 * @event change - 在值发生了变更，且失去了焦点时，将触发该事件
 * @event input - 值变更时触发
 * @event invalid - 表单字段验证未通过时触发
 *
 * @csspart track-inactive - 未激活状态的轨道
 * @csspart track-active - 已激活状态的轨道
 * @csspart handle - 操作杆
 * @csspart label 提示文本
 * @csspart tickmark - 刻度标记
 */ let Slider = class Slider extends (0, _sliderBaseJs.SliderBase) {
    constructor(){
        super(...arguments);
        /**
         * 滑块的值，将于表单数据一起提交
         */ this.value = 0;
        /**
         * 默认值。在重置表单时，将重置为该默认值。该属性只能通过 JavaScript 属性设置
         */ this.defaultValue = 0;
        this.rippleRef = (0, _refJs.createRef)();
        this.handleRef = (0, _refJs.createRef)();
        this.formController = new (0, _formJs.FormController)(this);
    }
    get rippleElement() {
        return this.rippleRef.value;
    }
    async onValueChange() {
        this.value = this.fixValue(this.value);
        // reset 引起的值变更，不执行验证；直接修改值引起的变更，需要进行验证
        const form = this.formController.getForm();
        if (form && (0, _formJs.formResets).get(form)?.has(this)) {
            this.invalid = false;
            (0, _formJs.formResets).get(form).delete(this);
        } else {
            await this.updateComplete;
            this.invalid = !this.inputRef.value.checkValidity();
        }
        this.updateStyle();
    }
    connectedCallback() {
        super.connectedCallback();
        this.value = this.fixValue(this.value);
    }
    firstUpdated(changedProperties) {
        super.firstUpdated(changedProperties);
        const onTouchStart = ()=>{
            if (!this.disabled) this.labelVisible = true;
        };
        const onTouchEnd = ()=>{
            if (!this.disabled) this.labelVisible = false;
        };
        this.addEventListener("touchstart", onTouchStart);
        this.addEventListener("mousedown", onTouchStart);
        this.addEventListener("touchend", onTouchEnd);
        this.addEventListener("mouseup", onTouchEnd);
        this.updateStyle();
    }
    /**
     * <input /> 用于提供拖拽操作
     * <input class="invalid" /> 用于提供 html5 自带的表单错误提示
     */ render() {
        return (0, _lit.html)`<label class="${(0, _classMapJs.classMap)({
            invalid: this.invalid
        })}"><input ${(0, _refJs.ref)(this.inputRef)} type="range" step="${this.step}" min="${this.min}" max="${this.max}" ?disabled="${this.disabled}" .value="${(0, _liveJs.live)(this.value.toString())}" @input="${this.onInput}" @change="${this.onChange}"><div part="track-inactive" class="track-inactive"></div><div ${(0, _refJs.ref)(this.trackActiveRef)} part="track-active" class="track-active"></div><div ${(0, _refJs.ref)(this.handleRef)} part="handle" class="handle"><div class="elevation"></div><mdui-ripple ${(0, _refJs.ref)(this.rippleRef)} .noRipple="${this.noRipple}"></mdui-ripple>${this.renderLabel(this.value)}</div>${(0, _whenJs.when)(this.tickmarks, ()=>(0, _mapJs.map)(this.getCandidateValues(), (value)=>(0, _lit.html)`<div part="tickmark" class="tickmark ${(0, _classMapJs.classMap)({
                    active: value < this.value
                })}" style="${(0, _styleMapJs.styleMap)({
                    left: `${(value - this.min) / this.max * 100}%`,
                    display: value === this.value ? "none" : "block"
                })}"></div>`))}</label>`;
    }
    updateStyle() {
        const percent = (this.value - this.min) / (this.max - this.min) * 100;
        this.trackActiveRef.value.style.width = `${percent}%`;
        this.handleRef.value.style.left = `${percent}%`;
    }
    onInput() {
        this.value = parseFloat(this.inputRef.value.value);
        this.updateStyle();
    }
};
Slider.styles = [
    (0, _sliderBaseJs.SliderBase).styles,
    (0, _styleJs.style)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Number
    })
], Slider.prototype, "value", void 0);
(0, _tslib.__decorate)([
    (0, _defaultValueJs.defaultValue)()
], Slider.prototype, "defaultValue", void 0);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("value", true)
], Slider.prototype, "onValueChange", null);
Slider = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-slider")
], Slider);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/class-map.js":"jiVKL","lit/directives/live.js":"a4wmv","lit/directives/map.js":"ejxgA","lit/directives/ref.js":"eKwmp","lit/directives/style-map.js":"4GQsu","lit/directives/when.js":"5IbUr","@mdui/shared/controllers/form.js":"9HuZO","@mdui/shared/decorators/default-value.js":"lGYLk","@mdui/shared/decorators/watch.js":"20Qzb","./slider-base.js":"5EtTc","./style.js":"kAvrk","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kAvrk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "style", ()=>style);
var _lit = require("lit");
const style = (0, _lit.css)`.track-active{left:-.125rem;border-radius:var(--mdui-shape-corner-full) 0 0 var(--mdui-shape-corner-full)}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gvluW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./snackbar/index.js");
parcelHelpers.exportAll(_indexJs, exports);

},{"./snackbar/index.js":"6knt5","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6knt5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Snackbar", ()=>Snackbar);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _whenJs = require("lit/directives/when.js");
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _watchJs = require("@mdui/shared/decorators/watch.js");
var _animateJs = require("@mdui/shared/helpers/animate.js");
var _breakpointJs = require("@mdui/shared/helpers/breakpoint.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _motionJs = require("@mdui/shared/helpers/motion.js");
var _templateJs = require("@mdui/shared/helpers/template.js");
var _clearJs = require("@mdui/shared/icons/clear.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _buttonIconJs = require("../button-icon.js");
var _buttonJs = require("../button.js");
var _iconJs = require("../icon.js");
var _styleJs = require("./style.js");
/**
 * @summary 消息条组件
 *
 * ```html
 * <mdui-snackbar>message</mdui-snackbar>
 * ```
 *
 * @event open - Snackbar 开始显示时，事件被触发。可以通过调用 `event.preventDefault()` 阻止 Snackbar 显示
 * @event opened - Snackbar 显示动画完成时，事件被触发
 * @event close - Snackbar 开始隐藏时，事件被触发。可以通过调用 `event.preventDefault()` 阻止 Snackbar 关闭
 * @event closed - Snackbar 隐藏动画完成时，事件被触发
 * @event action-click - 点击操作按钮时触发
 *
 * @slot - Snackbar 中的消息文本内容
 * @slot action - 右侧的操作按钮
 * @slot close-button - 右侧的关闭按钮。必须设置 `closeable` 属性为 `true` 才会显示该按钮
 * @slot close-icon - 右侧的关闭按钮中的图标
 *
 * @csspart message - 消息文本
 * @csspart action - 操作按钮
 * @csspart close-button - 关闭按钮
 * @csspart close-icon - 关闭按钮中的图标
 *
 * @cssprop --shape-corner - 组件的圆角大小。可以指定一个具体的像素值；但更推荐[引用设计令牌](/docs/2/styles/design-tokens#shape-corner)
 * @cssprop --z-index - 组件的 CSS 的 `z-index` 值
 */ let Snackbar = class Snackbar extends (0, _mduiElementJs.MduiElement) {
    constructor(){
        super();
        /**
         * 是否显示 Snackbar
         */ this.open = false;
        /**
         * Snackbar 出现的位置。默认为 `bottom`。可选值为：
         *
         * * `top`：位于顶部，居中对齐
         * * `top-start`：位于顶部，左对齐
         * * `top-end`：位于顶部，右对齐
         * * `bottom`：位于底部，居中对齐
         * * `bottom-start`：位于底部，左对齐
         * * `bottom-end`：位于底部，右对齐
         */ this.placement = "bottom";
        /**
         * 操作按钮是否为 loading 状态
         */ this.actionLoading = false;
        /**
         * 是否在右侧显示关闭按钮
         */ this.closeable = false;
        /**
         * 在多长时间后自动关闭（单位为毫秒）。设置为 `0` 时，不自动关闭。默认为 5 秒后自动关闭。
         */ this.autoCloseDelay = 5000;
        /**
         * 点击或触摸 Snackbar 以外的区域时是否关闭 Snackbar
         */ this.closeOnOutsideClick = false;
        this.onDocumentClick = this.onDocumentClick.bind(this);
    }
    async onOpenChange() {
        const isMobile = (0, _breakpointJs.breakpoint)().down("sm");
        const isCenteredHorizontally = [
            "top",
            "bottom"
        ].includes(this.placement);
        const easingLinear = (0, _motionJs.getEasing)(this, "linear");
        const easingEmphasizedDecelerate = (0, _motionJs.getEasing)(this, "emphasized-decelerate");
        const children = Array.from(this.renderRoot.querySelectorAll(".message, .action-group"));
        // 手机上始终使用全宽的样式，但 @media 选择器中无法使用 CSS 变量，所以使用 js 来设置样式
        const commonStyle = isMobile ? {
            left: "1rem",
            right: "1rem",
            minWidth: 0
        } : isCenteredHorizontally ? {
            left: "50%"
        } : {};
        // 打开
        // 要区分是否首次渲染，首次渲染时不触发事件，不执行动画；非首次渲染，触发事件，执行动画
        if (this.open) {
            const hasUpdated = this.hasUpdated;
            if (!hasUpdated) await this.updateComplete;
            if (hasUpdated) {
                const eventProceeded = this.emit("open", {
                    cancelable: true
                });
                if (!eventProceeded) return;
            }
            window.clearTimeout(this.closeTimeout);
            if (this.autoCloseDelay) this.closeTimeout = window.setTimeout(()=>{
                this.open = false;
            }, this.autoCloseDelay);
            this.style.display = "flex";
            await Promise.all([
                (0, _animateJs.stopAnimations)(this),
                ...children.map((child)=>(0, _animateJs.stopAnimations)(child))
            ]);
            const duration = (0, _motionJs.getDuration)(this, "medium4");
            const getOpenStyle = (ident)=>{
                const scaleY = `scaleY(${ident === "start" ? 0 : 1})`;
                if (isMobile) return {
                    transform: scaleY
                };
                else return {
                    transform: [
                        scaleY,
                        isCenteredHorizontally ? "translateX(-50%)" : ""
                    ].filter((i)=>i).join(" ")
                };
            };
            await Promise.all([
                (0, _animateJs.animateTo)(this, [
                    {
                        ...getOpenStyle("start"),
                        ...commonStyle
                    },
                    {
                        ...getOpenStyle("end"),
                        ...commonStyle
                    }
                ], {
                    duration: hasUpdated ? duration : 0,
                    easing: easingEmphasizedDecelerate,
                    fill: "forwards"
                }),
                (0, _animateJs.animateTo)(this, [
                    {
                        opacity: 0
                    },
                    {
                        opacity: 1,
                        offset: 0.5
                    },
                    {
                        opacity: 1
                    }
                ], {
                    duration: hasUpdated ? duration : 0,
                    easing: easingLinear,
                    fill: "forwards"
                }),
                ...children.map((child)=>(0, _animateJs.animateTo)(child, [
                        {
                            opacity: 0
                        },
                        {
                            opacity: 0,
                            offset: 0.2
                        },
                        {
                            opacity: 1,
                            offset: 0.8
                        },
                        {
                            opacity: 1
                        }
                    ], {
                        duration: hasUpdated ? duration : 0,
                        easing: easingLinear
                    }))
            ]);
            if (hasUpdated) this.emit("opened");
            return;
        }
        // 关闭
        if (!this.open && this.hasUpdated) {
            const eventProceeded = this.emit("close", {
                cancelable: true
            });
            if (!eventProceeded) return;
            window.clearTimeout(this.closeTimeout);
            await Promise.all([
                (0, _animateJs.stopAnimations)(this),
                ...children.map((child)=>(0, _animateJs.stopAnimations)(child))
            ]);
            const duration = (0, _motionJs.getDuration)(this, "short4");
            const getCloseStyle = (ident)=>{
                const opacity = ident === "start" ? 1 : 0;
                const styles = {
                    opacity
                };
                if (!isMobile && isCenteredHorizontally) Object.assign(styles, {
                    transform: "translateX(-50%)"
                });
                return styles;
            };
            await Promise.all([
                (0, _animateJs.animateTo)(this, [
                    {
                        ...getCloseStyle("start"),
                        ...commonStyle
                    },
                    {
                        ...getCloseStyle("end"),
                        ...commonStyle
                    }
                ], {
                    duration,
                    easing: easingLinear,
                    fill: "forwards"
                }),
                ...children.map((child)=>(0, _animateJs.animateTo)(child, [
                        {
                            opacity: 1
                        },
                        {
                            opacity: 0,
                            offset: 0.75
                        },
                        {
                            opacity: 0
                        }
                    ], {
                        duration,
                        easing: easingLinear
                    }))
            ]);
            this.style.display = "none";
            this.emit("closed");
            return;
        }
    }
    connectedCallback() {
        super.connectedCallback();
        document.addEventListener("pointerdown", this.onDocumentClick);
    }
    disconnectedCallback() {
        super.disconnectedCallback();
        document.removeEventListener("pointerdown", this.onDocumentClick);
    }
    render() {
        return (0, _lit.html)`<slot part="message" class="message"></slot><div class="action-group"><slot name="action" part="action" class="action" @click="${this.onActionClick}">${this.action ? (0, _lit.html)`<mdui-button variant="text" loading="${this.actionLoading}">${this.action}</mdui-button>` : (0, _templateJs.nothingTemplate)}</slot>${(0, _whenJs.when)(this.closeable, ()=>(0, _lit.html)`<slot name="close-button" part="close-button" class="close-button" @click="${this.onCloseClick}"><mdui-button-icon><slot name="close-icon" part="close-icon">${this.closeIcon ? (0, _lit.html)`<mdui-icon name="${this.closeIcon}" class="i"></mdui-icon>` : (0, _lit.html)`<mdui-icon-clear class="i"></mdui-icon-clear>`}</slot></mdui-button-icon></slot>`)}</div>`;
    }
    /**
     * 在 document 上点击时，根据条件判断是否要关闭 snackbar
     */ onDocumentClick(e) {
        if (!this.open || !this.closeOnOutsideClick) return;
        const target = e.target;
        if (!this.contains(target) && this !== target) this.open = false;
    }
    onActionClick(event) {
        event.stopPropagation();
        this.emit("action-click");
    }
    onCloseClick() {
        this.open = false;
    }
};
Snackbar.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _styleJs.style)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Snackbar.prototype, "open", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Snackbar.prototype, "placement", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "action"
    })
], Snackbar.prototype, "action", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter),
        attribute: "action-loading"
    })
], Snackbar.prototype, "actionLoading", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Snackbar.prototype, "closeable", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "close-icon"
    })
], Snackbar.prototype, "closeIcon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Number,
        reflect: true,
        attribute: "message-line"
    })
], Snackbar.prototype, "messageLine", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Number,
        reflect: true,
        attribute: "auto-close-delay"
    })
], Snackbar.prototype, "autoCloseDelay", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        attribute: "close-on-outside-click",
        converter: (0, _decoratorJs.booleanConverter)
    })
], Snackbar.prototype, "closeOnOutsideClick", void 0);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("open")
], Snackbar.prototype, "onOpenChange", null);
Snackbar = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-snackbar")
], Snackbar);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/when.js":"5IbUr","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/decorators/watch.js":"20Qzb","@mdui/shared/helpers/animate.js":"abZbA","@mdui/shared/helpers/breakpoint.js":"jyFfU","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/helpers/motion.js":"3ZuTY","@mdui/shared/helpers/template.js":"7SHVu","@mdui/shared/icons/clear.js":"bLHIr","@mdui/shared/lit-styles/component-style.js":"jFNMX","../button-icon.js":"c1x0d","../button.js":"jolHS","../icon.js":"6YN4l","./style.js":"gczqL","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gczqL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "style", ()=>style);
var _lit = require("lit");
const style = (0, _lit.css)`:host{--shape-corner:var(--mdui-shape-corner-extra-small);--z-index:2400;position:fixed;z-index:var(--z-index);display:none;align-items:center;flex-wrap:wrap;border-radius:var(--shape-corner);min-width:20rem;max-width:36rem;padding:.25rem 0;box-shadow:var(--mdui-elevation-level3);background-color:rgb(var(--mdui-color-inverse-surface));color:rgb(var(--mdui-color-inverse-on-surface));font-size:var(--mdui-typescale-body-medium-size);font-weight:var(--mdui-typescale-body-medium-weight);letter-spacing:var(--mdui-typescale-body-medium-tracking);line-height:var(--mdui-typescale-body-medium-line-height)}:host([placement^=top]){transform-origin:top;top:1rem}:host([placement^=bottom]){transform-origin:bottom;bottom:1rem}:host([placement=bottom-start]),:host([placement=top-start]){left:1rem}:host([placement=bottom-end]),:host([placement=top-end]){right:1rem}.message{display:block;margin:.625rem 1rem}:host([message-line='1']) .message{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}:host([message-line='2']) .message{display:-webkit-box;overflow:hidden;text-overflow:ellipsis;-webkit-box-orient:vertical;-webkit-line-clamp:2}.action-group{display:flex;align-items:center;margin-left:auto;padding-right:.5rem}.action,.close-button{display:inline-flex;align-items:center;justify-content:center}.action{color:rgb(var(--mdui-color-inverse-primary));font-size:var(--mdui-typescale-label-large-size);font-weight:var(--mdui-typescale-label-large-weight);letter-spacing:var(--mdui-typescale-label-large-tracking)}.action mdui-button,::slotted(mdui-button[slot=action][variant=outlined]),::slotted(mdui-button[slot=action][variant=text]){color:inherit;font-size:inherit;font-weight:inherit;letter-spacing:inherit;--mdui-comp-ripple-state-layer-color:var(--mdui-color-inverse-primary)}.action mdui-button::part(button){padding:0 .5rem}.close-button{margin:0 -.25rem 0 .25rem;font-size:1.5rem;color:rgb(var(--mdui-color-inverse-on-surface))}.close-button mdui-button-icon,::slotted(mdui-button-icon[slot=close-button][variant=outlined]),::slotted(mdui-button-icon[slot=close-button][variant=standard]){font-size:inherit;color:inherit;--mdui-comp-ripple-state-layer-color:var(--mdui-color-inverse-on-surface)}.close-button .i,::slotted([slot=close-icon]){font-size:inherit}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jJRzO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./switch/index.js");
parcelHelpers.exportAll(_indexJs, exports);

},{"./switch/index.js":"huf9b","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"huf9b":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Switch", ()=>Switch);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _classMapJs = require("lit/directives/class-map.js");
var _ifDefinedJs = require("lit/directives/if-defined.js");
var _liveJs = require("lit/directives/live.js");
var _refJs = require("lit/directives/ref.js");
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _formJs = require("@mdui/shared/controllers/form.js");
var _hasSlotJs = require("@mdui/shared/controllers/has-slot.js");
var _defaultValueJs = require("@mdui/shared/decorators/default-value.js");
var _watchJs = require("@mdui/shared/decorators/watch.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _templateJs = require("@mdui/shared/helpers/template.js");
var _checkJs = require("@mdui/shared/icons/check.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _focusableJs = require("@mdui/shared/mixins/focusable.js");
var _iconJs = require("../icon.js");
var _rippleMixinJs = require("../ripple/ripple-mixin.js");
var _styleJs = require("./style.js");
/**
 * @summary 开关切换组件
 *
 * ```html
 * <mdui-switch></mdui-switch>
 * ```
 *
 * @event focus - 获得焦点时触发
 * @event blur - 失去焦点时触发
 * @event change - 选中状态变更时触发
 * @event input - 选中状态变更时触发
 * @event invalid - 表单字段验证不通过时触发
 *
 * @slot unchecked-icon - 未选中状态的元素
 * @slot checked-icon - 选中状态的元素
 *
 * @csspart track - 轨道
 * @csspart thumb - 图标容器
 * @csspart unchecked-icon - 未选中状态的图标
 * @csspart checked-icon 选中状态的图标
 *
 * @cssprop --shape-corner - 组件的轨道的圆角大小。可以指定一个具体的像素值；但更推荐[引用设计令牌](/docs/2/styles/design-tokens#shape-corner)
 * @cssprop --shape-corner-thumb - 组件的图标容器的圆角大小。可以指定一个具体的像素值；但更推荐[引用设计令牌](/docs/2/styles/design-tokens#shape-corner)
 */ let Switch = class Switch extends (0, _rippleMixinJs.RippleMixin)((0, _focusableJs.FocusableMixin)((0, _mduiElementJs.MduiElement))) {
    constructor(){
        super(...arguments);
        /**
         * 是否为禁用状态
         */ this.disabled = false;
        /**
         * 是否为选中状态
         */ this.checked = false;
        /**
         * 默认选中状态。在重置表单时，将重置为该默认状态。该属性只能通过 JavaScript 属性设置
         */ this.defaultChecked = false;
        /**
         * 提交表单时，是否必须选中该开关
         */ this.required = false;
        /**
         * 开关的名称，将与表单数据一起提交
         */ this.name = "";
        /**
         * 开关的值，将于表单数据一起提交
         */ this.value = "on";
        /**
         * 是否验证未通过
         */ this.invalid = false;
        this.rippleRef = (0, _refJs.createRef)();
        this.inputRef = (0, _refJs.createRef)();
        this.formController = new (0, _formJs.FormController)(this, {
            value: (control)=>control.checked ? control.value : undefined,
            defaultValue: (control)=>control.defaultChecked,
            setValue: (control, checked)=>control.checked = checked
        });
        this.hasSlotController = new (0, _hasSlotJs.HasSlotController)(this, "unchecked-icon");
    }
    /**
     * 表单验证状态对象
     */ get validity() {
        return this.inputRef.value.validity;
    }
    /**
     * 表单验证的错误提示信息
     */ get validationMessage() {
        return this.inputRef.value.validationMessage;
    }
    get rippleElement() {
        return this.rippleRef.value;
    }
    get rippleDisabled() {
        return this.disabled;
    }
    get focusElement() {
        return this.inputRef.value;
    }
    get focusDisabled() {
        return this.disabled;
    }
    async onDisabledChange() {
        await this.updateComplete;
        this.invalid = !this.inputRef.value.checkValidity();
    }
    async onCheckedChange() {
        await this.updateComplete;
        // reset 引起的值变更，不执行验证；直接修改值引起的变更，需要进行验证
        const form = this.formController.getForm();
        if (form && (0, _formJs.formResets).get(form)?.has(this)) {
            this.invalid = false;
            (0, _formJs.formResets).get(form).delete(this);
        } else this.invalid = !this.inputRef.value.checkValidity();
    }
    /**
     * 检查表单字段是否验证通过。若未通过则返回 `false`，并触发 `invalid` 事件；若验证通过，则返回 `true`
     */ checkValidity() {
        const valid = this.inputRef.value.checkValidity();
        if (!valid) this.emit("invalid", {
            bubbles: false,
            cancelable: true,
            composed: false
        });
        return valid;
    }
    /**
     * 检查表单字段是否验证通过。若未通过则返回 `false`，并触发 `invalid` 事件；若验证通过，则返回 `true`。
     *
     * 验证未通过时，还将在组件上显示未通过的提示。
     */ reportValidity() {
        this.invalid = !this.inputRef.value.reportValidity();
        if (this.invalid) {
            const eventProceeded = this.emit("invalid", {
                bubbles: false,
                cancelable: true,
                composed: false
            });
            // 调用了 preventDefault() 时，隐藏默认的表单错误提示
            if (!eventProceeded) {
                this.blur();
                this.focus();
            }
        }
        return !this.invalid;
    }
    /**
     * 设置自定义的错误提示文本。只要文本不为空，则表示字段验证未通过
     *
     * @param message 自定义的提示文本
     */ setCustomValidity(message) {
        this.inputRef.value.setCustomValidity(message);
        this.invalid = !this.inputRef.value.checkValidity();
    }
    render() {
        return (0, _lit.html)`<label class="${(0, _classMapJs.classMap)({
            invalid: this.invalid,
            "has-unchecked-icon": this.uncheckedIcon || this.hasSlotController.test("unchecked-icon")
        })}"><input ${(0, _refJs.ref)(this.inputRef)} type="checkbox" name="${(0, _ifDefinedJs.ifDefined)(this.name)}" value="${(0, _ifDefinedJs.ifDefined)(this.value)}" .disabled="${this.disabled}" .checked="${(0, _liveJs.live)(this.checked)}" .required="${this.required}" @change="${this.onChange}"><div part="track" class="track"><div part="thumb" class="thumb"><mdui-ripple ${(0, _refJs.ref)(this.rippleRef)} .noRipple="${this.noRipple}"></mdui-ripple><slot name="checked-icon" part="checked-icon" class="checked-icon">${this.checkedIcon ? (0, _lit.html)`<mdui-icon name="${this.checkedIcon}" class="i"></mdui-icon>` : this.checkedIcon === "" ? (0, _templateJs.nothingTemplate) : (0, _lit.html)`<mdui-icon-check class="i"></mdui-icon-check>`}</slot><slot name="unchecked-icon" part="unchecked-icon" class="unchecked-icon">${this.uncheckedIcon ? (0, _lit.html)`<mdui-icon name="${this.uncheckedIcon}" class="i"></mdui-icon>` : (0, _templateJs.nothingTemplate)}</slot></div></div></label>`;
    }
    /**
     * input[type="checkbox"] 的 change 事件无法冒泡越过 shadow dom
     */ onChange() {
        this.checked = this.inputRef.value.checked;
        this.emit("change");
    }
};
Switch.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _styleJs.style)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Switch.prototype, "disabled", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Switch.prototype, "checked", void 0);
(0, _tslib.__decorate)([
    (0, _defaultValueJs.defaultValue)("checked")
], Switch.prototype, "defaultChecked", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "unchecked-icon"
    })
], Switch.prototype, "uncheckedIcon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "checked-icon"
    })
], Switch.prototype, "checkedIcon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Switch.prototype, "required", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Switch.prototype, "form", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Switch.prototype, "name", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Switch.prototype, "value", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], Switch.prototype, "invalid", void 0);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("disabled", true),
    (0, _watchJs.watch)("required", true)
], Switch.prototype, "onDisabledChange", null);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("checked", true)
], Switch.prototype, "onCheckedChange", null);
Switch = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-switch")
], Switch);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/class-map.js":"jiVKL","lit/directives/if-defined.js":"77RTn","lit/directives/live.js":"a4wmv","lit/directives/ref.js":"eKwmp","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/controllers/form.js":"9HuZO","@mdui/shared/controllers/has-slot.js":"cARnY","@mdui/shared/decorators/default-value.js":"lGYLk","@mdui/shared/decorators/watch.js":"20Qzb","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/helpers/template.js":"7SHVu","@mdui/shared/icons/check.js":"aAByS","@mdui/shared/lit-styles/component-style.js":"jFNMX","@mdui/shared/mixins/focusable.js":"kzhFM","../icon.js":"6YN4l","../ripple/ripple-mixin.js":"djWHz","./style.js":"hRgkb","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hRgkb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "style", ()=>style);
var _lit = require("lit");
const style = (0, _lit.css)`:host{--shape-corner:var(--mdui-shape-corner-full);--shape-corner-thumb:var(--mdui-shape-corner-full);position:relative;display:inline-block;cursor:pointer;-webkit-tap-highlight-color:transparent;height:2.5rem}:host([disabled]){cursor:default;pointer-events:none}label{display:inline-flex;align-items:center;width:100%;height:100%;white-space:nowrap;cursor:inherit;-webkit-user-select:none;user-select:none;touch-action:manipulation;zoom:1;-webkit-user-drag:none}.track{position:relative;display:flex;align-items:center;border-radius:var(--shape-corner);transition-property:background-color,border-width;transition-duration:var(--mdui-motion-duration-short4);transition-timing-function:var(--mdui-motion-easing-standard);height:2rem;width:3.25rem;border:.125rem solid rgb(var(--mdui-color-outline));background-color:rgb(var(--mdui-color-surface-container-highest))}:host([checked]) .track{background-color:rgb(var(--mdui-color-primary));border-width:0}.invalid .track{background-color:rgb(var(--mdui-color-error-container));border-color:rgb(var(--mdui-color-error))}:host([disabled]) .track{background-color:rgba(var(--mdui-color-surface-container-highest),.12);border-color:rgba(var(--mdui-color-on-surface),.12)}:host([disabled][checked]) .track{background-color:rgba(var(--mdui-color-on-surface),.12)}input{position:absolute;padding:0;opacity:0;pointer-events:none;width:1.25rem;height:1.25rem;margin:0 0 0 .625rem}mdui-ripple{border-radius:50%;transition-property:left,top;transition-duration:var(--mdui-motion-duration-short4);transition-timing-function:var(--mdui-motion-easing-standard);width:2.5rem;height:2.5rem}.thumb{position:absolute;display:flex;align-items:center;justify-content:center;border-radius:var(--shape-corner-thumb);transition-property:width,height,left,background-color;transition-duration:var(--mdui-motion-duration-short4);transition-timing-function:var(--mdui-motion-easing-standard);height:1rem;width:1rem;left:.375rem;background-color:rgb(var(--mdui-color-outline));--mdui-comp-ripple-state-layer-color:var(--mdui-color-on-surface)}.thumb mdui-ripple{left:-.75rem;top:-.75rem}.has-unchecked-icon .thumb{height:1.5rem;width:1.5rem;left:.125rem}.has-unchecked-icon .thumb mdui-ripple{left:-.5rem;top:-.5rem}:host([focus-visible]) .thumb,:host([hover]) .thumb,:host([pressed]) .thumb{background-color:rgb(var(--mdui-color-on-surface-variant))}:host([checked]) .thumb{height:1.5rem;width:1.5rem;left:1.5rem;background-color:rgb(var(--mdui-color-on-primary));--mdui-comp-ripple-state-layer-color:var(--mdui-color-primary)}:host([checked]) .thumb mdui-ripple{left:-.5rem;top:-.5rem}:host([pressed]) .thumb{height:1.75rem;width:1.75rem;left:0}:host([pressed]) .thumb mdui-ripple{left:-.375rem;top:-.375rem}:host([pressed][checked]) .thumb{left:1.375rem}:host([focus-visible][checked]) .thumb,:host([hover][checked]) .thumb,:host([pressed][checked]) .thumb{background-color:rgb(var(--mdui-color-primary-container))}.invalid .thumb{background-color:rgb(var(--mdui-color-error));--mdui-comp-ripple-state-layer-color:var(--mdui-color-error)}:host([focus-visible]) .invalid .thumb,:host([hover]) .invalid .thumb,:host([pressed]) .invalid .thumb{background-color:rgb(var(--mdui-color-error))}:host([disabled]) .thumb{background-color:rgba(var(--mdui-color-on-surface),.38)}:host([disabled][checked]) .thumb{background-color:rgb(var(--mdui-color-surface))}.checked-icon,.unchecked-icon{display:flex;position:absolute;transition-property:opacity,transform;font-size:1rem}.unchecked-icon{opacity:1;transform:scale(1);transition-delay:var(--mdui-motion-duration-short1);transition-duration:var(--mdui-motion-duration-short3);transition-timing-function:var(--mdui-motion-easing-linear);color:rgb(var(--mdui-color-surface-container-highest))}:host([checked]) .unchecked-icon{opacity:0;transform:scale(.92);transition-delay:0s;transition-duration:var(--mdui-motion-duration-short1)}:host([disabled]) .unchecked-icon{color:rgba(var(--mdui-color-surface-container-highest),.38)}.checked-icon{opacity:0;transform:scale(.92);transition-delay:0s;transition-duration:var(--mdui-motion-duration-short1);transition-timing-function:var(--mdui-motion-easing-linear);color:rgb(var(--mdui-color-on-primary-container))}:host([checked]) .checked-icon{opacity:1;transform:scale(1);transition-delay:var(--mdui-motion-duration-short1);transition-duration:var(--mdui-motion-duration-short3)}.invalid .checked-icon{color:rgb(var(--mdui-color-error-container))}:host([disabled]) .checked-icon{color:rgba(var(--mdui-color-on-surface),.38)}.checked-icon .i,.unchecked-icon .i,::slotted([slot=checked-icon]),::slotted([slot=unchecked-icon]){font-size:inherit;color:inherit}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"a9WHo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _tabJs = require("./tabs/tab.js");
parcelHelpers.exportAll(_tabJs, exports);

},{"./tabs/tab.js":"fiRV5","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fiRV5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Tab", ()=>Tab);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _classMapJs = require("lit/directives/class-map.js");
var _refJs = require("lit/directives/ref.js");
var _whenJs = require("lit/directives/when.js");
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _hasSlotJs = require("@mdui/shared/controllers/has-slot.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _templateJs = require("@mdui/shared/helpers/template.js");
var _uniqueIdJs = require("@mdui/shared/helpers/uniqueId.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _focusableJs = require("@mdui/shared/mixins/focusable.js");
var _iconJs = require("../icon.js");
var _rippleMixinJs = require("../ripple/ripple-mixin.js");
var _tabStyleJs = require("./tab-style.js");
/**
 * @summary 选项卡项组件。需与 `<mdui-tabs>` 和 `<mdui-tab-panel>` 组件配合使用
 *
 * ```html
 * <mdui-tabs value="tab-1">
 * ..<mdui-tab value="tab-1">Tab 1</mdui-tab>
 * ..<mdui-tab value="tab-2">Tab 2</mdui-tab>
 * ..<mdui-tab value="tab-3">Tab 3</mdui-tab>
 *
 * ..<mdui-tab-panel slot="panel" value="tab-1">Panel 1</mdui-tab-panel>
 * ..<mdui-tab-panel slot="panel" value="tab-2">Panel 2</mdui-tab-panel>
 * ..<mdui-tab-panel slot="panel" value="tab-3">Panel 3</mdui-tab-panel>
 * </mdui-tabs>
 * ```
 *
 * @event focus - 获得焦点时触发
 * @event blur - 失去焦点时触发
 *
 * @slot - 选项卡导航项的文本
 * @slot icon - 选项卡导航项中的图标
 * @slot badge - 徽标
 * @slot custom - 自定义整个选项卡导航项中的内容
 *
 * @csspart container - 导航项容器
 * @csspart icon - 导航项中的图标
 * @csspart label - 导航项的文本
 */ let Tab = class Tab extends (0, _rippleMixinJs.RippleMixin)((0, _focusableJs.FocusableMixin)((0, _mduiElementJs.MduiElement))) {
    constructor(){
        super(...arguments);
        /**
         * 是否把图标和文本水平排列
         */ this.inline = false;
        /**
         * 是否为激活状态，由 `<mdui-tabs>` 组件控制该参数
         */ this.active = false;
        /**
         * 选项卡形状。由 `<mdui-tabs>` 组件控制该参数
         */ this.variant = "primary";
        // 每一个 `<mdui-tab>` 元素都添加一个唯一的 key
        this.key = (0, _uniqueIdJs.uniqueId)();
        this.rippleRef = (0, _refJs.createRef)();
        this.hasSlotController = new (0, _hasSlotJs.HasSlotController)(this, "icon", "custom");
    }
    get rippleElement() {
        return this.rippleRef.value;
    }
    get rippleDisabled() {
        return false;
    }
    get focusElement() {
        return this;
    }
    get focusDisabled() {
        return false;
    }
    render() {
        const hasIcon = this.icon || this.hasSlotController.test("icon");
        const hasCustomSlot = this.hasSlotController.test("custom");
        const renderBadge = ()=>(0, _lit.html)`<slot name="badge"></slot>`;
        return (0, _lit.html)`<mdui-ripple ${(0, _refJs.ref)(this.rippleRef)} .noRipple="${this.noRipple}"></mdui-ripple><div part="container" class="${(0, _classMapJs.classMap)({
            container: true,
            preset: !hasCustomSlot,
            "variant-secondary": this.variant === "secondary"
        })}"><slot name="custom"><div class="icon-container">${(0, _whenJs.when)(hasIcon || this.icon, renderBadge)}<slot name="icon" part="icon" class="icon">${this.icon ? (0, _lit.html)`<mdui-icon name="${this.icon}"></mdui-icon>` : (0, _templateJs.nothingTemplate)}</slot></div><div class="label-container">${(0, _whenJs.when)(!hasIcon, renderBadge)}<slot part="label" class="label"></slot></div></slot></div>`;
    }
};
Tab.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _tabStyleJs.tabStyle)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Tab.prototype, "value", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Tab.prototype, "icon", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Tab.prototype, "inline", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Tab.prototype, "active", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], Tab.prototype, "variant", void 0);
Tab = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-tab")
], Tab);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/class-map.js":"jiVKL","lit/directives/ref.js":"eKwmp","lit/directives/when.js":"5IbUr","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/controllers/has-slot.js":"cARnY","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/helpers/template.js":"7SHVu","@mdui/shared/helpers/uniqueId.js":"4DPTP","@mdui/shared/lit-styles/component-style.js":"jFNMX","@mdui/shared/mixins/focusable.js":"kzhFM","../icon.js":"6YN4l","../ripple/ripple-mixin.js":"djWHz","./tab-style.js":"d1GQO","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"d1GQO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "tabStyle", ()=>tabStyle);
var _lit = require("lit");
const tabStyle = (0, _lit.css)`:host{position:relative;--mdui-comp-ripple-state-layer-color:var(--mdui-color-on-surface)}:host([active]){--mdui-comp-ripple-state-layer-color:var(--mdui-color-primary)}.container{display:flex;justify-content:center;align-items:center;cursor:pointer;-webkit-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;height:100%}.preset{flex-direction:column;min-height:3rem;padding:.625rem 1rem}:host([inline]) .preset{flex-direction:row}.icon-container,.label-container{position:relative;display:flex;align-items:center;justify-content:center}.icon-container ::slotted([slot=badge]){position:absolute;transform:translate(50%,-50%)}.icon-container ::slotted([slot=badge][variant=small]){transform:translate(.5625rem,-.5625rem)}.label-container ::slotted([slot=badge]){position:absolute;left:100%;bottom:100%;transform:translate(-.75rem,.625rem)}.label-container ::slotted([slot=badge][variant=small]){transform:translate(-.375rem,.375rem)}.icon,.label{display:flex;color:rgb(var(--mdui-color-on-surface-variant))}:host([focused]) .icon,:host([focused]) .label,:host([hover]) .icon,:host([hover]) .label,:host([pressed]) .icon,:host([pressed]) .label{color:rgb(var(--mdui-color-on-surface))}:host([active]) .icon,:host([active]) .label{color:rgb(var(--mdui-color-primary))}:host([active]) .variant-secondary .icon,:host([active]) .variant-secondary .label{color:rgb(var(--mdui-color-on-surface))}.icon{font-size:1.5rem}.label{font-size:var(--mdui-typescale-title-small-size);font-weight:var(--mdui-typescale-title-small-weight);letter-spacing:var(--mdui-typescale-title-small-tracking);line-height:var(--mdui-typescale-title-small-line-height)}.icon mdui-icon,::slotted([slot=icon]){font-size:inherit;color:inherit}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iqisH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _tabPanelJs = require("./tabs/tab-panel.js");
parcelHelpers.exportAll(_tabPanelJs, exports);

},{"./tabs/tab-panel.js":"dP9Ak","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dP9Ak":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TabPanel", ()=>TabPanel);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _tabPanelStyleJs = require("./tab-panel-style.js");
/**
 * @summary 选项卡面板项组件。需与 `<mdui-tabs>` 和 `<mdui-tab>` 组件配合使用
 *
 * ```html
 * <mdui-tabs value="tab-1">
 * ..<mdui-tab value="tab-1">Tab 1</mdui-tab>
 * ..<mdui-tab value="tab-2">Tab 2</mdui-tab>
 * ..<mdui-tab value="tab-3">Tab 3</mdui-tab>
 *
 * ..<mdui-tab-panel slot="panel" value="tab-1">Panel 1</mdui-tab-panel>
 * ..<mdui-tab-panel slot="panel" value="tab-2">Panel 2</mdui-tab-panel>
 * ..<mdui-tab-panel slot="panel" value="tab-3">Panel 3</mdui-tab-panel>
 * </mdui-tabs>
 * ```
 *
 * @slot - 选项卡面板内容
 */ let TabPanel = class TabPanel extends (0, _mduiElementJs.MduiElement) {
    constructor(){
        super(...arguments);
        /**
         * 是否为激活状态，由 `<mdui-tabs>` 组件控制该状态
         */ this.active = false;
    }
    render() {
        return (0, _lit.html)`<slot></slot>`;
    }
};
TabPanel.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _tabPanelStyleJs.tabPanelStyle)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], TabPanel.prototype, "value", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], TabPanel.prototype, "active", void 0);
TabPanel = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-tab-panel")
], TabPanel);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/lit-styles/component-style.js":"jFNMX","./tab-panel-style.js":"hMVD2","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hMVD2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "tabPanelStyle", ()=>tabPanelStyle);
var _lit = require("lit");
const tabPanelStyle = (0, _lit.css)`:host{display:block;overflow-y:auto;flex:1 1 auto}:host(:not([active])){display:none}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1XzX8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _tabsJs = require("./tabs/tabs.js");
parcelHelpers.exportAll(_tabsJs, exports);

},{"./tabs/tabs.js":"a3TbL","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"a3TbL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Tabs", ()=>Tabs);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _classMapJs = require("lit/directives/class-map.js");
var _refJs = require("lit/directives/ref.js");
var _js = require("@mdui/jq/$.js");
var _childrenJs = require("@mdui/jq/methods/children.js");
var _cssJs = require("@mdui/jq/methods/css.js");
var _findJs = require("@mdui/jq/methods/find.js");
var _getJs = require("@mdui/jq/methods/get.js");
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _definedJs = require("@mdui/shared/controllers/defined.js");
var _watchJs = require("@mdui/shared/decorators/watch.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _observeResizeJs = require("@mdui/shared/helpers/observeResize.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _tabsStyleJs = require("./tabs-style.js");
/**
 * @summary 选项卡组件。需与 `<mdui-tab>` 和 `<mdui-tab-panel>` 组件配合使用
 *
 * ```html
 * <mdui-tabs value="tab-1">
 * ..<mdui-tab value="tab-1">Tab 1</mdui-tab>
 * ..<mdui-tab value="tab-2">Tab 2</mdui-tab>
 * ..<mdui-tab value="tab-3">Tab 3</mdui-tab>
 *
 * ..<mdui-tab-panel slot="panel" value="tab-1">Panel 1</mdui-tab-panel>
 * ..<mdui-tab-panel slot="panel" value="tab-2">Panel 2</mdui-tab-panel>
 * ..<mdui-tab-panel slot="panel" value="tab-3">Panel 3</mdui-tab-panel>
 * </mdui-tabs>
 * ```
 *
 * @event change - 选中的值变化时触发
 *
 * @slot - `<mdui-tab>` 元素
 * @slot panel - `<mdui-tab-panel>` 元素
 *
 * @csspart container - `<mdui-tab>` 元素的容器
 * @csspart indicator - 激活状态指示器
 */ let Tabs = class Tabs extends (0, _mduiElementJs.MduiElement) {
    constructor(){
        super(...arguments);
        /**
         * 选项卡形状。可选值为：
         *
         * * `primary`：位于 `<mdui-top-app-bar>` 下方，用于切换应用的主页面时，可使用该形状的选项卡
         * * `secondary`：位于页面中，用于切换一组相关内容时，可使用该形状的选项卡
         */ this.variant = "primary";
        /**
         * 选项卡位置。默认为 `top-start`。可选值为：
         *
         * * `top-start`：位于上方，且左对齐
         * * `top`：位于上方，且居中对齐
         * * `top-end`：位于上方，且右对齐
         * * `bottom-start`：位于下方，且左对齐
         * * `bottom`：位于下方，且居中对齐
         * * `bottom-end`：位于下方，且右对齐
         * * `left-start`：位于左侧，且顶部对齐
         * * `left`：位于左侧，且居中对齐
         * * `left-end`：位于左侧，且底部对齐
         * * `right-start`：位于右侧，且顶部对齐
         * * `right`：位于右侧，且居中对齐
         * * `right-end`：位于右侧，且底部对齐
         */ this.placement = "top-start";
        /**
         * 是否填满父元素宽度
         */ this.fullWidth = false;
        // 因为 tab 的 value 可能会重复，所以在每个 tab 元素上都添加了一个唯一的 key，通过 activeKey 来记录激活状态的 key
        this.activeKey = 0;
        // 是否为初始状态，初始状态不触发 change 事件
        this.isInitial = true;
        this.containerRef = (0, _refJs.createRef)();
        this.indicatorRef = (0, _refJs.createRef)();
        this.definedController = new (0, _definedJs.DefinedController)(this, {
            relatedElements: [
                "mdui-tab",
                "mdui-tab-panel"
            ]
        });
    }
    async onActiveKeyChange() {
        await this.definedController.whenDefined();
        // 根据 activeKey 读取对应 tab 的值
        this.value = this.tabs.find((tab)=>tab.key === this.activeKey)?.value;
        this.updateActive();
        if (!this.isInitial) this.emit("change");
    }
    async onValueChange() {
        this.isInitial = !this.hasUpdated;
        await this.definedController.whenDefined();
        const tab = this.tabs.find((tab)=>tab.value === this.value);
        this.activeKey = tab?.key ?? 0;
    }
    async onIndicatorChange() {
        await this.updateComplete;
        this.updateIndicator();
    }
    disconnectedCallback() {
        super.disconnectedCallback();
        this.observeResize?.unobserve();
    }
    firstUpdated(_changedProperties) {
        super.firstUpdated(_changedProperties);
        this.observeResize = (0, _observeResizeJs.observeResize)(this.containerRef.value, ()=>this.updateIndicator());
    }
    render() {
        return (0, _lit.html)`<div ${(0, _refJs.ref)(this.containerRef)} part="container" class="container ${(0, _classMapJs.classMap)({
            initial: this.isInitial
        })}"><slot @slotchange="${this.onSlotChange}" @click="${this.onClick}"></slot><div ${(0, _refJs.ref)(this.indicatorRef)} part="indicator" class="indicator"></div></div><slot name="panel" @slotchange="${this.onSlotChange}"></slot>`;
    }
    async onSlotChange() {
        await this.definedController.whenDefined();
        this.updateActive();
    }
    async onClick(event) {
        // event.button 为 0 时，为鼠标左键点击。忽略鼠标中键和右键
        if (event.button) return;
        await this.definedController.whenDefined();
        const target = event.target;
        const tab = target.closest("mdui-tab");
        if (!tab) return;
        this.activeKey = tab.key;
        this.isInitial = false;
        this.updateActive();
    }
    updateActive() {
        this.activeTab = this.tabs.map((tab)=>{
            tab.active = this.activeKey === tab.key;
            return tab;
        }).find((tab)=>tab.active);
        this.panels.forEach((panel)=>panel.active = panel.value === this.activeTab?.value);
        this.updateIndicator();
    }
    updateIndicator() {
        const activeTab = this.activeTab;
        const $indicator = (0, _js.$)(this.indicatorRef.value);
        const isVertical = this.placement.startsWith("left") || this.placement.startsWith("right");
        // 没有激活的，不显示指示器
        if (!activeTab) {
            $indicator.css({
                transform: isVertical ? "scaleY(0)" : "scaleX(0)"
            });
            return;
        }
        const $activeTab = (0, _js.$)(activeTab);
        const offsetTop = activeTab.offsetTop;
        const offsetLeft = activeTab.offsetLeft;
        const commonStyle = isVertical ? {
            transform: "scaleY(1)",
            width: "",
            left: ""
        } : {
            transform: "scaleX(1)",
            height: "",
            top: ""
        };
        let shownStyle = {};
        if (this.variant === "primary") {
            const $customSlots = $activeTab.find(':scope > [slot="custom"]');
            const children = $customSlots.length ? $customSlots.get() : (0, _js.$)(activeTab.renderRoot).find('slot[name="custom"]').children().get();
            if (isVertical) {
                // 最上方的元素的顶部，距离容器顶部距离
                const top = Math.min(...children.map((child)=>child.offsetTop)) + offsetTop;
                // 最下方的元素的底部，距离容器顶部的距离
                const bottom = Math.max(...children.map((child)=>child.offsetTop + child.offsetHeight)) + offsetTop;
                shownStyle = {
                    top,
                    height: bottom - top
                };
            } else {
                // 最左侧的元素的左侧，距离容器左侧的距离
                const left = Math.min(...children.map((child)=>child.offsetLeft)) + offsetLeft;
                // 最右侧的元素的右侧，距离容器左侧的距离
                const right = Math.max(...children.map((child)=>child.offsetLeft + child.offsetWidth)) + offsetLeft;
                shownStyle = {
                    left,
                    width: right - left
                };
            }
        }
        if (this.variant === "secondary") shownStyle = isVertical ? {
            top: offsetTop,
            height: activeTab.offsetHeight
        } : {
            left: offsetLeft,
            width: activeTab.offsetWidth
        };
        $indicator.css({
            ...commonStyle,
            ...shownStyle
        });
    }
};
Tabs.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _tabsStyleJs.tabsStyle)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Tabs.prototype, "variant", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Tabs.prototype, "value", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Tabs.prototype, "placement", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter),
        attribute: "full-width"
    })
], Tabs.prototype, "fullWidth", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], Tabs.prototype, "activeKey", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], Tabs.prototype, "isInitial", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.queryAssignedElements)({
        selector: "mdui-tab",
        flatten: true
    })
], Tabs.prototype, "tabs", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.queryAssignedElements)({
        selector: "mdui-tab-panel",
        slot: "panel",
        flatten: true
    })
], Tabs.prototype, "panels", void 0);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("activeKey", true)
], Tabs.prototype, "onActiveKeyChange", null);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("value")
], Tabs.prototype, "onValueChange", null);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("variant", true),
    (0, _watchJs.watch)("placement", true),
    (0, _watchJs.watch)("fullWidth", true)
], Tabs.prototype, "onIndicatorChange", null);
Tabs = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-tabs")
], Tabs);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/class-map.js":"jiVKL","lit/directives/ref.js":"eKwmp","@mdui/jq/$.js":"dZx9v","@mdui/jq/methods/children.js":"ext9M","@mdui/jq/methods/css.js":"lzdJz","@mdui/jq/methods/find.js":"7eUR4","@mdui/jq/methods/get.js":"bzhq8","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/controllers/defined.js":"9Omrp","@mdui/shared/decorators/watch.js":"20Qzb","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/helpers/observeResize.js":"fLGE3","@mdui/shared/lit-styles/component-style.js":"jFNMX","./tabs-style.js":"iJ4FH","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iJ4FH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "tabsStyle", ()=>tabsStyle);
var _lit = require("lit");
const tabsStyle = (0, _lit.css)`:host{position:relative;display:flex}:host([placement^=top]){flex-direction:column}:host([placement^=bottom]){flex-direction:column-reverse}:host([placement^=left]){flex-direction:row}:host([placement^=right]){flex-direction:row-reverse}.container{position:relative;display:flex;flex:0 0 auto;overflow-x:auto;background-color:rgb(var(--mdui-color-surface))}:host([placement^=bottom]) .container,:host([placement^=top]) .container{flex-direction:row}:host([placement^=left]) .container,:host([placement^=right]) .container{flex-direction:column}:host([placement$='-start']) .container{justify-content:flex-start}:host([placement=bottom]) .container,:host([placement=left]) .container,:host([placement=right]) .container,:host([placement=top]) .container{justify-content:center}:host([placement$='-end']) .container{justify-content:flex-end}.container::after{content:' ';position:absolute;background-color:rgb(var(--mdui-color-surface-variant))}:host([placement^=bottom]) .container::after,:host([placement^=top]) .container::after{left:0;width:100%;height:.0625rem}:host([placement^=top]) .container::after{bottom:0}:host([placement^=bottom]) .container::after{top:0}:host([placement^=left]) .container::after,:host([placement^=right]) .container::after{top:0;height:100%;width:.0625rem}:host([placement^=left]) .container::after{right:0}:host([placement^=right]) .container::after{left:0}.indicator{position:absolute;z-index:1;background-color:rgb(var(--mdui-color-primary))}.container:not(.initial) .indicator{transition-duration:var(--mdui-motion-duration-medium2);transition-timing-function:var(--mdui-motion-easing-standard-decelerate)}:host([placement^=bottom]) .indicator,:host([placement^=top]) .indicator{transition-property:transform,left,width}:host([placement^=left]) .indicator,:host([placement^=right]) .indicator{transition-property:transform,top,height}:host([placement^=top]) .indicator{bottom:0}:host([placement^=bottom]) .indicator{top:0}:host([placement^=left]) .indicator{right:0}:host([placement^=right]) .indicator{left:0}:host([placement^=bottom][variant=primary]) .indicator,:host([placement^=top][variant=primary]) .indicator{height:.1875rem}:host([placement^=bottom][variant=secondary]) .indicator,:host([placement^=top][variant=secondary]) .indicator{height:.125rem}:host([placement^=left][variant=primary]) .indicator,:host([placement^=right][variant=primary]) .indicator{width:.1875rem}:host([placement^=left][variant=secondary]) .indicator,:host([placement^=right][variant=secondary]) .indicator{width:.125rem}:host([placement^=top][variant=primary]) .indicator{border-top-left-radius:.1875rem;border-top-right-radius:.1875rem}:host([placement^=bottom][variant=primary]) .indicator{border-bottom-right-radius:.1875rem;border-bottom-left-radius:.1875rem}:host([placement^=left][variant=primary]) .indicator{border-top-left-radius:.1875rem;border-bottom-left-radius:.1875rem}:host([placement^=right][variant=primary]) .indicator{border-top-right-radius:.1875rem;border-bottom-right-radius:.1875rem}:host([full-width]) ::slotted(mdui-tab){flex:1}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kDBEz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./tooltip/index.js");
parcelHelpers.exportAll(_indexJs, exports);

},{"./tooltip/index.js":"g5MWY","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"g5MWY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Tooltip", ()=>Tooltip);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _refJs = require("lit/directives/ref.js");
var _whenJs = require("lit/directives/when.js");
var _dom = require("@floating-ui/utils/dom");
var _js = require("@mdui/jq/$.js");
var _cssJs = require("@mdui/jq/methods/css.js");
var _filterJs = require("@mdui/jq/methods/filter.js");
var _heightJs = require("@mdui/jq/methods/height.js");
var _propJs = require("@mdui/jq/methods/prop.js");
var _widthJs = require("@mdui/jq/methods/width.js");
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _definedJs = require("@mdui/shared/controllers/defined.js");
var _hasSlotJs = require("@mdui/shared/controllers/has-slot.js");
var _hoverJs = require("@mdui/shared/controllers/hover.js");
var _watchJs = require("@mdui/shared/decorators/watch.js");
var _animateJs = require("@mdui/shared/helpers/animate.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _motionJs = require("@mdui/shared/helpers/motion.js");
var _observeResizeJs = require("@mdui/shared/helpers/observeResize.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _styleJs = require("./style.js");
/**
 * @summary 工具提示组件
 *
 * ```html
 * <mdui-tooltip content="tooltip content">
 * ..<mdui-button>button</mdui-button>
 * </mdui-tooltip>
 * ```
 *
 * @event open - tooltip 开始显示时，事件被触发。可以通过调用 `event.preventDefault()` 阻止 tooltip 打开
 * @event opened - tooltip 显示动画完成时，事件被触发
 * @event close - tooltip 开始隐藏时，事件被触发。可以通过调用 `event.preventDefault()` 阻止 tooltip 关闭
 * @event closed - tooltip 隐藏动画完成时，事件被触发
 *
 * @slot - tooltip 触发的目标元素，仅 `default` slot 中的第一个元素会作为目标元素
 * @slot headline - tooltip 的标题，仅 `variant="rich"` 时该 slot 才有效
 * @slot content - tooltip 的内容，可以包含 HTML。若只包含纯文本，可以使用 `content` 属性代替
 * @slot action - tooltip 底部的按钮，仅 `variant="rich"` 时该 slot 才有效
 *
 * @csspart popup - 工具提示的容器
 * @csspart headline - 标题
 * @csspart content - 正文
 * @csspart action - 操作按钮
 *
 * @cssprop --shape-corner-plain - variant="plain" 时，组件的圆角大小。可以指定一个具体的像素值；但更推荐[引用设计令牌](/docs/2/styles/design-tokens#shape-corner)
 * @cssprop --shape-corner-rich - variant="rich" 时，组件的圆角大小。可以指定一个具体的像素值；但更推荐[引用设计令牌](/docs/2/styles/design-tokens#shape-corner)
 * @cssprop --z-index - 组件的 CSS 的 `z-index` 值
 */ let Tooltip = class Tooltip extends (0, _mduiElementJs.MduiElement) {
    constructor(){
        super();
        /**
         * tooltip 的形状。默认为 `plain`。可选值为：
         *
         * * `plain`：纯文本，用于简单的单行文本
         * * `rich`：富文本，可包含标题、正文、及操作按钮
         */ this.variant = "plain";
        /**
         * tooltip 的位置。默认为 `auto`。可选值为：
         *
         * * `auto`：自动判断位置。`variant="plan"` 时，优先使用 `top`；`variant="rich"` 时，优先使用 `bottom-right`
         * * `top-left`：位于左上方
         * * `top-start`：位于上方，且左对齐
         * * `top`：位于上方，且居中对齐
         * * `top-end`：位于上方，且右对齐
         * * `top-right`：位于右上方
         * * `bottom-left`：位于左下方
         * * `bottom-start`：位于下方，且左对齐
         * * `bottom`：位于下方，且居中对齐
         * * `bottom-end`：位于下方，且右对齐
         * * `bottom-right`：位于右下方
         * * `left-start`：位于左侧，且顶部对齐
         * * `left`：位于左侧，且居中对齐
         * * `left-end`：位于左侧，且底部对齐
         * * `right-start`：位于右侧，且顶部对齐
         * * `right`：位于右侧，且居中对齐
         * * `right-end`：位于右侧，且底部对齐
         */ this.placement = "auto";
        /**
         * hover 触发显示的延时，单位为毫秒
         */ this.openDelay = 150;
        /**
         * hover 触发隐藏的延时，单位为毫秒
         */ this.closeDelay = 150;
        /**
         * 触发方式，支持传入多个值，用空格分隔。可选值为：
         *
         * * `click`：点击时触发
         * * `hover`：鼠标悬浮触发
         * * `focus`：聚焦时触发
         * * `manual`：使用了该值时，只能使用编程方式打开和关闭 tooltip，且不能再指定其他触发方式
         */ this.trigger = "hover focus";
        /**
         * 是否禁用 tooltip
         */ this.disabled = false;
        /**
         * 是否显示 tooltip
         */ this.open = false;
        this.popupRef = (0, _refJs.createRef)();
        this.hasSlotController = new (0, _hasSlotJs.HasSlotController)(this, "headline", "action");
        this.hoverController = new (0, _hoverJs.HoverController)(this, this.popupRef);
        this.definedController = new (0, _definedJs.DefinedController)(this, {
            needDomReady: true
        });
        this.onDocumentClick = this.onDocumentClick.bind(this);
        this.onWindowScroll = this.onWindowScroll.bind(this);
        this.onFocus = this.onFocus.bind(this);
        this.onBlur = this.onBlur.bind(this);
        this.onClick = this.onClick.bind(this);
        this.onKeydown = this.onKeydown.bind(this);
        this.onMouseEnter = this.onMouseEnter.bind(this);
        this.onMouseLeave = this.onMouseLeave.bind(this);
    }
    /**
     * 获取第一个非 <style> 和 content slot 的子元素，作为 tooltip 的目标元素
     */ get target() {
        return [
            ...this.children
        ].find((el)=>el.tagName.toLowerCase() !== "style" && el.getAttribute("slot") !== "content");
    }
    async onPositionChange() {
        if (this.open) {
            await this.definedController.whenDefined();
            this.updatePositioner();
        }
    }
    async onOpenChange() {
        const hasUpdated = this.hasUpdated;
        const duration = (0, _motionJs.getDuration)(this, "short4");
        const easing = (0, _motionJs.getEasing)(this, "standard");
        // 打开
        // 要区分是否首次渲染，首次渲染时不触发事件，不执行动画；非首次渲染，触发事件，执行动画
        if (this.open) {
            await this.definedController.whenDefined();
            // 先关闭页面中所有其他相同 variant 的 tooltip
            (0, _js.$)(`mdui-tooltip[variant="${this.variant}"]`).filter((_, element)=>element !== this).prop("open", false);
            if (!hasUpdated) await this.updateComplete;
            if (hasUpdated) {
                const eventProceeded = this.emit("open", {
                    cancelable: true
                });
                if (!eventProceeded) return;
            }
            await (0, _animateJs.stopAnimations)(this.popupRef.value);
            this.popupRef.value.hidden = false;
            this.updatePositioner();
            await (0, _animateJs.animateTo)(this.popupRef.value, [
                {
                    transform: "scale(0)"
                },
                {
                    transform: "scale(1)"
                }
            ], {
                duration: hasUpdated ? duration : 0,
                easing
            });
            if (hasUpdated) this.emit("opened");
            return;
        }
        // 关闭
        if (!this.open && hasUpdated) {
            const eventProceeded = this.emit("close", {
                cancelable: true
            });
            if (!eventProceeded) return;
            await (0, _animateJs.stopAnimations)(this.popupRef.value);
            await (0, _animateJs.animateTo)(this.popupRef.value, [
                {
                    transform: "scale(1)"
                },
                {
                    transform: "scale(0)"
                }
            ], {
                duration,
                easing
            });
            this.popupRef.value.hidden = true;
            this.emit("closed");
        }
    }
    connectedCallback() {
        super.connectedCallback();
        document.addEventListener("pointerdown", this.onDocumentClick);
        this.overflowAncestors = (0, _dom.getOverflowAncestors)(this.target);
        this.overflowAncestors.forEach((ancestor)=>{
            ancestor.addEventListener("scroll", this.onWindowScroll);
        });
    }
    disconnectedCallback() {
        super.disconnectedCallback();
        document.removeEventListener("pointerdown", this.onDocumentClick);
        this.overflowAncestors?.forEach((ancestor)=>{
            ancestor.removeEventListener("scroll", this.onWindowScroll);
        });
        this.observeResize?.unobserve();
    }
    firstUpdated(changedProperties) {
        super.firstUpdated(changedProperties);
        this.definedController.whenDefined().then(()=>{
            const target = this.target;
            target.addEventListener("focus", this.onFocus);
            target.addEventListener("blur", this.onBlur);
            target.addEventListener("pointerdown", this.onClick);
            target.addEventListener("keydown", this.onKeydown);
            target.addEventListener("mouseenter", this.onMouseEnter);
            target.addEventListener("mouseleave", this.onMouseLeave);
            // trigger 尺寸变化时，重新调整 tooltip 的位置
            this.observeResize = (0, _observeResizeJs.observeResize)(target, ()=>{
                this.updatePositioner();
            });
        });
    }
    render() {
        const hasHeadline = this.isRich() && (this.headline || this.hasSlotController.test("headline"));
        const hasAction = this.isRich() && this.hasSlotController.test("action");
        return (0, _lit.html)`<slot></slot><div ${(0, _refJs.ref)(this.popupRef)} part="popup" class="popup" hidden>${(0, _whenJs.when)(hasHeadline, ()=>(0, _lit.html)`<slot name="headline" part="headline" class="headline">${this.headline}</slot>`)}<slot name="content" part="content" class="content">${this.content}</slot>${(0, _whenJs.when)(hasAction, ()=>(0, _lit.html)`<slot name="action" part="action" class="action"></slot>`)}</div>`;
    }
    isRich() {
        return this.variant === "rich";
    }
    /**
     * 请求关闭 tooltip。鼠标未悬浮在 tooltip 上时，直接关闭；否则等鼠标移走再关闭
     */ requestClose() {
        if (!this.hoverController.isHover) {
            this.open = false;
            return;
        }
        this.hoverController.onMouseLeave(()=>{
            if (this.hasTrigger("hover")) // 同时使用 hover focus 时，leave 比 focus 先触发，导致 leave 后触发 focus，而显示 tooltip
            // 所以延迟执行 leave
            this.hoverTimeout = window.setTimeout(()=>{
                this.open = false;
            }, this.closeDelay || 50);
            else this.open = false;
        }, true);
    }
    hasTrigger(trigger) {
        const triggers = this.trigger.split(" ");
        return triggers.includes(trigger);
    }
    onFocus() {
        if (this.disabled || this.open || !this.hasTrigger("focus")) return;
        this.open = true;
    }
    onBlur() {
        if (this.disabled || !this.open || !this.hasTrigger("focus")) return;
        this.requestClose();
    }
    onClick(e) {
        // e.button 为 0 时，为鼠标左键点击。忽略鼠标中间和右键
        if (this.disabled || e.button || !this.hasTrigger("click")) return;
        // 支持 hover 和 focus 触发时，点击时，不关闭 tooltip
        if (this.open && (this.hasTrigger("hover") || this.hasTrigger("focus"))) return;
        this.open = !this.open;
    }
    onKeydown(e) {
        if (this.disabled || !this.open || e.key !== "Escape") return;
        e.stopPropagation();
        this.requestClose();
    }
    onMouseEnter() {
        if (this.disabled || this.open || !this.hasTrigger("hover")) return;
        if (this.openDelay) {
            window.clearTimeout(this.hoverTimeout);
            this.hoverTimeout = window.setTimeout(()=>{
                this.open = true;
            }, this.openDelay);
        } else this.open = true;
    }
    onMouseLeave() {
        window.clearTimeout(this.hoverTimeout);
        if (this.disabled || !this.open || !this.hasTrigger("hover")) return;
        // 同时使用 hover focus 时，leave 比 focus 先触发，导致 leave 后触发 focus，而显示 tooltip
        // 所以延迟执行 leave
        this.hoverTimeout = window.setTimeout(()=>{
            this.requestClose();
        }, this.closeDelay || 50);
    }
    /**
     * 在 document 上点击时，根据条件判断是否关闭 tooltip
     */ onDocumentClick(e) {
        if (this.disabled || !this.open) return;
        const path = e.composedPath();
        // 点击 tooltip 外部区域，直接关闭
        if (!path.includes(this)) this.requestClose();
    }
    onWindowScroll() {
        window.requestAnimationFrame(()=>this.updatePositioner());
    }
    updatePositioner() {
        const $popup = (0, _js.$)(this.popupRef.value);
        const targetMargin = this.isRich() ? 0 : 4; // 触发目标和 popup 之间的间距
        const popupMargin = 4; // popup 和视口之间的间距
        // 触发目标的位置和宽高
        const targetRect = this.target.getBoundingClientRect();
        const targetTop = targetRect.top;
        const targetLeft = targetRect.left;
        const targetHeight = targetRect.height;
        const targetWidth = targetRect.width;
        // popup 的宽高
        const popupHeight = this.popupRef.value.offsetHeight;
        const popupWidth = this.popupRef.value.offsetWidth;
        // popup 在 x 轴和 y 轴占据的空间
        const popupXSpace = popupWidth + targetMargin + popupMargin;
        const popupYSpace = popupHeight + targetMargin + popupMargin;
        let transformOriginX;
        let transformOriginY;
        let top;
        let left;
        let placement = this.placement;
        // 自动判断 popup 方位
        if (placement === "auto") {
            const $window = (0, _js.$)(window);
            const hasTopSpace = targetTop > popupYSpace;
            const hasBottomSpace = $window.height() - targetTop - targetHeight > popupYSpace;
            const hasLeftSpace = targetLeft > popupXSpace;
            const hasRightSpace = $window.width() - targetLeft - targetWidth > popupXSpace;
            // rich 优先级为 bottom-right > bottom-left > top-right > top-left >
            //              bottom > top > right > left
            if (this.isRich()) {
                placement = "bottom-right";
                if (hasBottomSpace && hasRightSpace) placement = "bottom-right";
                else if (hasBottomSpace && hasLeftSpace) placement = "bottom-left";
                else if (hasTopSpace && hasRightSpace) placement = "top-right";
                else if (hasTopSpace && hasLeftSpace) placement = "top-left";
                else if (hasBottomSpace) placement = "bottom";
                else if (hasTopSpace) placement = "top";
                else if (hasRightSpace) placement = "right";
                else if (hasLeftSpace) placement = "left";
            } else {
                placement = "top";
                if (hasTopSpace) placement = "top";
                else if (hasBottomSpace) placement = "bottom";
                else if (hasLeftSpace) placement = "left";
                else if (hasRightSpace) placement = "right";
            }
        }
        // 根据 placement 计算 popup 的位置和方向
        const [position, alignment] = placement.split("-");
        switch(position){
            case "top":
                transformOriginY = "bottom";
                top = targetTop - popupHeight - targetMargin;
                break;
            case "bottom":
                transformOriginY = "top";
                top = targetTop + targetHeight + targetMargin;
                break;
            default:
                transformOriginY = "center";
                switch(alignment){
                    case "start":
                        top = targetTop;
                        break;
                    case "end":
                        top = targetTop + targetHeight - popupHeight;
                        break;
                    default:
                        top = targetTop + targetHeight / 2 - popupHeight / 2;
                        break;
                }
                break;
        }
        switch(position){
            case "left":
                transformOriginX = "right";
                left = targetLeft - popupWidth - targetMargin;
                break;
            case "right":
                transformOriginX = "left";
                left = targetLeft + targetWidth + targetMargin;
                break;
            default:
                transformOriginX = "center";
                switch(alignment){
                    case "start":
                        left = targetLeft;
                        break;
                    case "end":
                        left = targetLeft + targetWidth - popupWidth;
                        break;
                    case "left":
                        transformOriginX = "right";
                        left = targetLeft - popupWidth - targetMargin;
                        break;
                    case "right":
                        transformOriginX = "left";
                        left = targetLeft + targetWidth + targetMargin;
                        break;
                    default:
                        left = targetLeft + targetWidth / 2 - popupWidth / 2;
                        break;
                }
                break;
        }
        $popup.css({
            top,
            left,
            transformOrigin: [
                transformOriginX,
                transformOriginY
            ].join(" ")
        });
    }
};
Tooltip.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _styleJs.style)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Tooltip.prototype, "variant", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Tooltip.prototype, "placement", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Number,
        reflect: true,
        attribute: "open-delay"
    })
], Tooltip.prototype, "openDelay", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Number,
        reflect: true,
        attribute: "close-delay"
    })
], Tooltip.prototype, "closeDelay", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Tooltip.prototype, "headline", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Tooltip.prototype, "content", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], Tooltip.prototype, "trigger", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Tooltip.prototype, "disabled", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], Tooltip.prototype, "open", void 0);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("placement", true),
    (0, _watchJs.watch)("content", true)
], Tooltip.prototype, "onPositionChange", null);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("open")
], Tooltip.prototype, "onOpenChange", null);
Tooltip = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-tooltip")
], Tooltip);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/ref.js":"eKwmp","lit/directives/when.js":"5IbUr","@floating-ui/utils/dom":"iv7Ca","@mdui/jq/$.js":"dZx9v","@mdui/jq/methods/css.js":"lzdJz","@mdui/jq/methods/filter.js":"kItIi","@mdui/jq/methods/height.js":"4Py39","@mdui/jq/methods/prop.js":"7XhxU","@mdui/jq/methods/width.js":"4wNQJ","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/controllers/defined.js":"9Omrp","@mdui/shared/controllers/has-slot.js":"cARnY","@mdui/shared/controllers/hover.js":"fTflo","@mdui/shared/decorators/watch.js":"20Qzb","@mdui/shared/helpers/animate.js":"abZbA","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/helpers/motion.js":"3ZuTY","@mdui/shared/helpers/observeResize.js":"fLGE3","@mdui/shared/lit-styles/component-style.js":"jFNMX","./style.js":"lrHj5","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fTflo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * 检查当前鼠标是否放在指定元素上，及进入、离开元素执行对于的回调
 */ parcelHelpers.export(exports, "HoverController", ()=>HoverController);
var _js = require("@mdui/jq/$.js");
var _offJs = require("@mdui/jq/methods/off.js");
var _onJs = require("@mdui/jq/methods/on.js");
var _uniqueIdJs = require("../helpers/uniqueId.js");
class HoverController {
    /**
     * @param host
     * @param elementRef 检查鼠标是否放在该元素上
     */ constructor(host, elementRef){
        /**
         * 当前鼠标是否放在元素上
         */ this.isHover = false;
        this.uniqueID = (0, _uniqueIdJs.uniqueId)();
        this.enterEventName = `mouseenter.${this.uniqueID}.hoverController`;
        this.leaveEventName = `mouseleave.${this.uniqueID}.hoverController`;
        this.mouseEnterItems = [];
        this.mouseLeaveItems = [];
        (this.host = host).addController(this);
        this.elementRef = elementRef;
    }
    hostConnected() {
        this.host.updateComplete.then(()=>{
            (0, _js.$)(this.elementRef.value).on(this.enterEventName, ()=>{
                this.isHover = true;
                for(let i = this.mouseEnterItems.length - 1; i >= 0; i--){
                    const item = this.mouseEnterItems[i];
                    item.callback();
                    if (item.one) this.mouseEnterItems.splice(i, 1);
                }
            }).on(this.leaveEventName, ()=>{
                this.isHover = false;
                for(let i = this.mouseLeaveItems.length - 1; i >= 0; i--){
                    const item = this.mouseLeaveItems[i];
                    item.callback();
                    if (item.one) this.mouseLeaveItems.splice(i, 1);
                }
            });
        });
    }
    hostDisconnected() {
        (0, _js.$)(this.elementRef.value).off(this.enterEventName).off(this.leaveEventName);
    }
    /**
     * 指定鼠标移入时的回调函数
     * @param callback 要执行的回调函数
     * @param one 是否仅执行一次
     */ onMouseEnter(callback, one = false) {
        this.mouseEnterItems.push({
            callback,
            one
        });
    }
    /**
     * 指定鼠标移出时的回调函数
     * @param callback 要执行的回调函数
     * @param one 是否仅执行一次
     */ onMouseLeave(callback, one = false) {
        this.mouseLeaveItems.push({
            callback,
            one
        });
    }
}

},{"@mdui/jq/$.js":"dZx9v","@mdui/jq/methods/off.js":"8xpGy","@mdui/jq/methods/on.js":"e22Mv","../helpers/uniqueId.js":"4DPTP","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lrHj5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "style", ()=>style);
var _lit = require("lit");
const style = (0, _lit.css)`:host{--shape-corner-plain:var(--mdui-shape-corner-extra-small);--shape-corner-rich:var(--mdui-shape-corner-medium);--z-index:2500;display:contents}.popup{position:fixed;display:flex;flex-direction:column;z-index:var(--z-index);border-radius:var(--shape-corner-plain);background-color:rgb(var(--mdui-color-inverse-surface));padding:0 .5rem;min-width:1.75rem;max-width:20rem}:host([variant=rich]) .popup{border-radius:var(--shape-corner-rich);background-color:rgb(var(--mdui-color-surface-container));box-shadow:var(--mdui-elevation-level2);padding:.75rem 1rem .5rem 1rem}.headline{display:flex;color:rgb(var(--mdui-color-on-surface-variant));font-size:var(--mdui-typescale-title-small-size);font-weight:var(--mdui-typescale-title-small-weight);letter-spacing:var(--mdui-typescale-title-small-tracking);line-height:var(--mdui-typescale-title-small-line-height)}.content{display:flex;padding:.25rem 0;color:rgb(var(--mdui-color-inverse-on-surface));font-size:var(--mdui-typescale-body-small-size);font-weight:var(--mdui-typescale-body-small-weight);letter-spacing:var(--mdui-typescale-body-small-tracking);line-height:var(--mdui-typescale-body-small-line-height)}:host([variant=rich]) .content{color:rgb(var(--mdui-color-on-surface-variant));font-size:var(--mdui-typescale-body-medium-size);font-weight:var(--mdui-typescale-body-medium-weight);letter-spacing:var(--mdui-typescale-body-medium-tracking);line-height:var(--mdui-typescale-body-medium-line-height)}.action{display:flex;justify-content:flex-start;padding-top:.5rem}.action ::slotted(:not(:last-child)){margin-right:.5rem}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6SBoL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _topAppBarTitleJs = require("./top-app-bar/top-app-bar-title.js");
parcelHelpers.exportAll(_topAppBarTitleJs, exports);

},{"./top-app-bar/top-app-bar-title.js":"l6km4","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"l6km4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TopAppBarTitle", ()=>TopAppBarTitle);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _classMapJs = require("lit/directives/class-map.js");
var _refJs = require("lit/directives/ref.js");
var _mduiElementJs = require("@mdui/shared/base/mdui-element.js");
var _hasSlotJs = require("@mdui/shared/controllers/has-slot.js");
var _slotJs = require("@mdui/shared/helpers/slot.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _topAppBarTitleStyleJs = require("./top-app-bar-title-style.js");
/**
 * @summary 顶部应用栏标题组件。需与 `<mdui-top-app-bar>` 组件配合使用
 *
 * ```html
 * <mdui-top-app-bar>
 * ..<mdui-button-icon icon="menu"></mdui-button-icon>
 * ..<mdui-top-app-bar-title>Title</mdui-top-app-bar-title>
 * ..<div style="flex-grow: 1"></div>
 * ..<mdui-button-icon icon="more_vert"></mdui-button-icon>
 * </mdui-top-app-bar>
 * ```
 *
 * @slot - 顶部应用栏的标题文本
 * @slot label-large - 展开状态的标题文本
 *
 * @csspart label 文本内容
 * @csspart label-large 展开状态的文本内容
 */ let TopAppBarTitle = class TopAppBarTitle extends (0, _mduiElementJs.MduiElement) {
    constructor(){
        super(...arguments);
        /**
         * 顶部应用栏形状。由 mdui-top-app-bar 组件控制该参数
         */ this.variant = "small";
        /**
         * 是否缩小成 `variant="small"` 的样式，仅在 `variant="medium"` 或 `variant="large"` 时生效。由 mdui-top-app-bar 组件控制该参数
         */ this.shrink = false;
        this.hasSlotController = new (0, _hasSlotJs.HasSlotController)(this, "label-large");
        this.labelLargeRef = (0, _refJs.createRef)();
        this.defaultSlotRef = (0, _refJs.createRef)();
    }
    render() {
        const hasLabelLargeSlot = this.hasSlotController.test("label-large");
        const className = (0, _classMapJs.classMap)({
            shrink: this.shrink,
            "variant-center-aligned": this.variant === "center-aligned",
            "variant-small": this.variant === "small",
            "variant-medium": this.variant === "medium",
            "variant-large": this.variant === "large"
        });
        return (0, _lit.html)`<slot part="label" class="label ${className}" ${(0, _refJs.ref)(this.defaultSlotRef)} @slotchange="${()=>this.onSlotChange(hasLabelLargeSlot)}"></slot>${hasLabelLargeSlot ? (0, _lit.html)`<slot name="label-large" part="label-large" class="label-large ${className}"></slot>` : (0, _lit.html)`<div ${(0, _refJs.ref)(this.labelLargeRef)} part="label-large" class="label-large ${className}"></div>`}`;
    }
    /**
     * default slot 变化时，同步到 label-large 中
     * @param hasLabelLargeSlot
     * @private
     */ onSlotChange(hasLabelLargeSlot) {
        if (!hasLabelLargeSlot) this.labelLargeRef.value.innerHTML = (0, _slotJs.getInnerHtmlFromSlot)(this.defaultSlotRef.value);
    }
};
TopAppBarTitle.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _topAppBarTitleStyleJs.topAppBarTitleStyle)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], TopAppBarTitle.prototype, "variant", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.state)()
], TopAppBarTitle.prototype, "shrink", void 0);
TopAppBarTitle = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-top-app-bar-title")
], TopAppBarTitle);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","lit/directives/class-map.js":"jiVKL","lit/directives/ref.js":"eKwmp","@mdui/shared/base/mdui-element.js":"5deJi","@mdui/shared/controllers/has-slot.js":"cARnY","@mdui/shared/helpers/slot.js":"jTuX9","@mdui/shared/lit-styles/component-style.js":"jFNMX","./top-app-bar-title-style.js":"a7dno","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jTuX9":[function(require,module,exports) {
/**
 * 获取一个 slot 中的所有内容
 * @param slot
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getInnerHtmlFromSlot", ()=>getInnerHtmlFromSlot);
parcelHelpers.export(exports, "getTextContentFromSlot", ()=>getTextContentFromSlot);
const getInnerHtmlFromSlot = (slot)=>{
    const nodes = slot.assignedNodes({
        flatten: true
    });
    let html = "";
    [
        ...nodes
    ].forEach((node)=>{
        if (node.nodeType === Node.ELEMENT_NODE) html += node.outerHTML;
        if (node.nodeType === Node.TEXT_NODE) html += node.textContent;
    });
    return html;
};
const getTextContentFromSlot = (slot)=>{
    const nodes = slot.assignedNodes({
        flatten: true
    });
    let text = "";
    [
        ...nodes
    ].forEach((node)=>{
        if (node.nodeType === Node.TEXT_NODE) text += node.textContent;
    });
    return text;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"a7dno":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "topAppBarTitleStyle", ()=>topAppBarTitleStyle);
var _lit = require("lit");
const topAppBarTitleStyle = (0, _lit.css)`:host{display:block;width:100%;flex-shrink:initial!important;overflow:hidden;color:rgb(var(--mdui-color-on-surface));font-size:var(--mdui-typescale-title-large-size);font-weight:var(--mdui-typescale-title-large-weight);letter-spacing:var(--mdui-typescale-title-large-tracking);line-height:var(--mdui-typescale-title-large-line-height);line-height:2.5rem}.label{display:block;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;opacity:1;transition:opacity var(--mdui-motion-duration-short2) var(--mdui-motion-easing-linear)}.label.variant-center-aligned{text-align:center}.label.variant-large:not(.shrink),.label.variant-medium:not(.shrink){opacity:0}.label.variant-large.shrink,.label.variant-medium.shrink{transition-delay:var(--mdui-motion-duration-short2)}.label-large{display:none;position:absolute;width:100%;left:0;margin-right:0;padding:0 1rem;transition:opacity var(--mdui-motion-duration-short2) var(--mdui-motion-easing-linear)}.label-large.variant-large,.label-large.variant-medium{display:block}.label-large.variant-medium{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;bottom:.75rem;font-size:var(--mdui-typescale-headline-small-size);font-weight:var(--mdui-typescale-headline-small-weight);letter-spacing:var(--mdui-typescale-headline-small-tracking);line-height:var(--mdui-typescale-headline-small-line-height)}.label-large.variant-large{display:-webkit-box;overflow:hidden;white-space:normal;-webkit-box-orient:vertical;-webkit-line-clamp:2;bottom:1.25rem;font-size:var(--mdui-typescale-headline-medium-size);font-weight:var(--mdui-typescale-headline-medium-weight);letter-spacing:var(--mdui-typescale-headline-medium-tracking);line-height:var(--mdui-typescale-headline-medium-line-height)}.label-large.variant-large:not(.shrink),.label-large.variant-medium:not(.shrink){opacity:1;transition-delay:var(--mdui-motion-duration-short2)}.label-large.variant-large.shrink,.label-large.variant-medium.shrink{opacity:0;z-index:-1}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4nJEA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _topAppBarJs = require("./top-app-bar/top-app-bar.js");
parcelHelpers.exportAll(_topAppBarJs, exports);

},{"./top-app-bar/top-app-bar.js":"jahGX","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jahGX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TopAppBar", ()=>TopAppBar);
var _tslib = require("tslib");
var _lit = require("lit");
var _decoratorsJs = require("lit/decorators.js");
var _watchJs = require("@mdui/shared/decorators/watch.js");
var _decoratorJs = require("@mdui/shared/helpers/decorator.js");
var _componentStyleJs = require("@mdui/shared/lit-styles/component-style.js");
var _scrollBehaviorJs = require("@mdui/shared/mixins/scrollBehavior.js");
var _layoutItemBaseJs = require("../layout/layout-item-base.js");
var _topAppBarStyleJs = require("./top-app-bar-style.js");
/**
 * @summary 顶部应用栏组件
 *
 * ```html
 * <mdui-top-app-bar>
 * ..<mdui-button-icon icon="menu"></mdui-button-icon>
 * ..<mdui-top-app-bar-title>Title</mdui-top-app-bar-title>
 * ..<div style="flex-grow: 1"></div>
 * ..<mdui-button-icon icon="more_vert"></mdui-button-icon>
 * </mdui-top-app-bar>
 * ```
 *
 * @event show - 开始显示时，事件被触发。可以通过调用 `event.preventDefault()` 阻止显示
 * @event shown - 显示动画完成时，事件被触发
 * @event hide - 开始隐藏时，事件被触发。可以通过调用 `event.preventDefault()` 阻止隐藏
 * @event hidden - 隐藏动画完成时，事件被触发
 *
 * @slot - 顶部应用栏内部的元素
 *
 * @cssprop --shape-corner - 组件的圆角大小。可以指定一个具体的像素值；但更推荐[引用设计令牌](/docs/2/styles/design-tokens#shape-corner)
 * @cssprop --z-index - 组件的 CSS 的 `z-index` 值
 */ let TopAppBar = class TopAppBar extends (0, _scrollBehaviorJs.ScrollBehaviorMixin)((0, _layoutItemBaseJs.LayoutItemBase)) {
    constructor(){
        super(...arguments);
        /**
         * 顶部应用栏形状。默认为 `small`。可选值为：
         *
         * * `center-aligned`：小型应用栏，标题居中
         * * `small`：小型应用栏
         * * `medium`：中型应用栏
         * * `large`：大型应用栏
         */ this.variant = "small";
        /**
         * 是否隐藏
         */ this.hide = false;
        /**
         * 是否缩小成 `variant="small"` 的样式，仅在 `variant="medium"` 或 `variant="large"` 时生效
         */ this.shrink = false;
        /**
         * 滚动条是否不位于顶部
         */ this.scrolling = false;
    }
    get scrollPaddingPosition() {
        return "top";
    }
    get layoutPlacement() {
        return "top";
    }
    async onVariantChange() {
        if (this.hasUpdated) // variant 变更时，重新为 scrollTargetContainer 元素添加 padding-top。避免 top-app-bar 覆盖内容
        this.addEventListener("transitionend", async ()=>{
            await this.scrollBehaviorDefinedController.whenDefined();
            this.updateContainerPadding();
        }, {
            once: true
        });
        else await this.updateComplete;
        this.titleElements.forEach((titleElement)=>{
            titleElement.variant = this.variant;
        });
    }
    async onShrinkChange() {
        if (!this.hasUpdated) await this.updateComplete;
        this.titleElements.forEach((titleElement)=>{
            titleElement.shrink = this.shrink;
        });
    }
    firstUpdated(_changedProperties) {
        super.firstUpdated(_changedProperties);
        this.addEventListener("transitionend", (e)=>{
            if (e.target === this) this.emit(this.hide ? "hidden" : "shown");
        });
    }
    render() {
        return (0, _lit.html)`<slot></slot>`;
    }
    runScrollNoThreshold(isScrollingUp, scrollTop) {
        // 向上滚动到顶部时，复原（无视 scrollThreshold 属性，否则会无法复原）
        if (this.hasScrollBehavior("shrink")) // 到距离顶部 8px 即开始复原，显得灵敏些
        {
            if (isScrollingUp && scrollTop < 8) this.shrink = false;
        }
    }
    runScrollThreshold(isScrollingUp, scrollTop) {
        // 滚动时添加阴影
        if (this.hasScrollBehavior("elevate")) this.scrolling = !!scrollTop;
        // 向下滚动时，缩小
        if (this.hasScrollBehavior("shrink")) {
            if (!isScrollingUp) this.shrink = true;
        }
        // 滚动时隐藏
        if (this.hasScrollBehavior("hide")) {
            // 向下滚动
            if (!isScrollingUp && !this.hide) {
                const eventProceeded = this.emit("hide", {
                    cancelable: true
                });
                if (eventProceeded) this.hide = true;
            }
            // 向上滚动
            if (isScrollingUp && this.hide) {
                const eventProceeded = this.emit("show", {
                    cancelable: true
                });
                if (eventProceeded) this.hide = false;
            }
        }
    }
};
TopAppBar.styles = [
    (0, _componentStyleJs.componentStyle),
    (0, _topAppBarStyleJs.topAppBarStyle)
];
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true
    })
], TopAppBar.prototype, "variant", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], TopAppBar.prototype, "hide", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], TopAppBar.prototype, "shrink", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        reflect: true,
        attribute: "scroll-behavior"
    })
], TopAppBar.prototype, "scrollBehavior", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.property)({
        type: Boolean,
        reflect: true,
        converter: (0, _decoratorJs.booleanConverter)
    })
], TopAppBar.prototype, "scrolling", void 0);
(0, _tslib.__decorate)([
    (0, _decoratorsJs.queryAssignedElements)({
        selector: "mdui-top-app-bar-title",
        flatten: true
    })
], TopAppBar.prototype, "titleElements", void 0);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("variant")
], TopAppBar.prototype, "onVariantChange", null);
(0, _tslib.__decorate)([
    (0, _watchJs.watch)("shrink")
], TopAppBar.prototype, "onShrinkChange", null);
TopAppBar = (0, _tslib.__decorate)([
    (0, _decoratorsJs.customElement)("mdui-top-app-bar")
], TopAppBar);

},{"tslib":"lRdW5","lit":"4antt","lit/decorators.js":"bCPKi","@mdui/shared/decorators/watch.js":"20Qzb","@mdui/shared/helpers/decorator.js":"6l4gk","@mdui/shared/lit-styles/component-style.js":"jFNMX","@mdui/shared/mixins/scrollBehavior.js":"lHJ5r","../layout/layout-item-base.js":"jgZrI","./top-app-bar-style.js":"wdpEy","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"wdpEy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "topAppBarStyle", ()=>topAppBarStyle);
var _lit = require("lit");
const topAppBarStyle = (0, _lit.css)`:host{--shape-corner:var(--mdui-shape-corner-none);--z-index:2000;position:fixed;top:0;right:0;left:0;display:flex;flex:0 0 auto;align-items:flex-start;justify-content:flex-start;border-bottom-left-radius:var(--shape-corner);border-bottom-right-radius:var(--shape-corner);z-index:var(--z-index);transition:top var(--mdui-motion-duration-long2) var(--mdui-motion-easing-standard),height var(--mdui-motion-duration-long2) var(--mdui-motion-easing-standard),box-shadow var(--mdui-motion-duration-short4) var(--mdui-motion-easing-linear),background-color var(--mdui-motion-duration-short4) var(--mdui-motion-easing-linear);padding:.75rem .5rem;height:4rem;background-color:rgb(var(--mdui-color-surface))}:host([scroll-target]:not([scroll-target=''])){position:absolute}:host([scroll-behavior~=shrink]){transition-duration:var(--mdui-motion-duration-short4)}:host([scrolling]){background-color:rgb(var(--mdui-color-surface-container));box-shadow:var(--mdui-elevation-level2)}::slotted(mdui-button-icon){color:rgb(var(--mdui-color-on-surface-variant));font-size:1.5rem}::slotted(mdui-button-icon:first-child){color:rgb(var(--mdui-color-on-surface))}::slotted(mdui-avatar){width:1.875rem;height:1.875rem;margin-top:.3125rem;margin-bottom:.3125rem}::slotted(*){flex-shrink:0}::slotted(:not(:last-child)){margin-right:.5rem}:host([variant=medium]){height:7rem}:host([variant=large]){height:9.5rem}:host([hide]){transition-duration:var(--mdui-motion-duration-short4);top:-4.625rem}:host([hide][variant=medium]){top:-7.625rem}:host([hide][variant=large]){top:-10.125rem}:host([shrink][variant=large]),:host([shrink][variant=medium]){transition-duration:var(--mdui-motion-duration-short4);height:4rem}`;

},{"lit":"4antt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3jvA7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "alert", ()=>alert);
var _isPromise = require("is-promise");
var _isPromiseDefault = parcelHelpers.interopDefault(_isPromise);
var _js = require("@mdui/jq/$.js");
var _onJs = require("@mdui/jq/methods/on.js");
var _helperJs = require("@mdui/jq/shared/helper.js");
var _dialogJs = require("./dialog.js");
const defaultOptions = {
    confirmText: "\u786E\u5B9A",
    onConfirm: (0, _helperJs.returnTrue)
};
const alert = (options)=>{
    const mergedOptions = Object.assign({}, defaultOptions, options);
    const properties = [
        "headline",
        "description",
        "icon",
        "closeOnEsc",
        "closeOnOverlayClick",
        "queue",
        "onOpen",
        "onOpened",
        "onClose",
        "onClosed",
        "onOverlayClick"
    ];
    return new Promise((resolve, reject)=>{
        let isResolve = false;
        const dialog = (0, _dialogJs.dialog)({
            ...Object.fromEntries(properties.filter((key)=>!(0, _helperJs.isUndefined)(mergedOptions[key])).map((key)=>[
                    key,
                    mergedOptions[key]
                ])),
            actions: [
                {
                    text: mergedOptions.confirmText,
                    onClick: (dialog)=>{
                        const clickResult = mergedOptions.onConfirm.call(dialog, dialog);
                        if ((0, _isPromiseDefault.default)(clickResult)) clickResult.then(()=>{
                            isResolve = true;
                        });
                        else if (clickResult !== false) isResolve = true;
                        return clickResult;
                    }
                }
            ]
        });
        (0, _js.$)(dialog).on("close", ()=>{
            isResolve ? resolve() : reject();
        });
    });
};

},{"is-promise":"hrWMv","@mdui/jq/$.js":"dZx9v","@mdui/jq/methods/on.js":"e22Mv","@mdui/jq/shared/helper.js":"4D489","./dialog.js":"jspWZ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hrWMv":[function(require,module,exports) {
module.exports = isPromise;
module.exports.default = isPromise;
function isPromise(obj) {
    return !!obj && (typeof obj === "object" || typeof obj === "function") && typeof obj.then === "function";
}

},{}],"jspWZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "dialog", ()=>dialog);
var _isPromise = require("is-promise");
var _isPromiseDefault = parcelHelpers.interopDefault(_isPromise);
var _js = require("@mdui/jq/$.js");
var _appendJs = require("@mdui/jq/methods/append.js");
var _appendToJs = require("@mdui/jq/methods/appendTo.js");
var _onJs = require("@mdui/jq/methods/on.js");
var _removeJs = require("@mdui/jq/methods/remove.js");
var _helperJs = require("@mdui/jq/shared/helper.js");
var _queueJs = require("@mdui/shared/helpers/queue.js");
var _buttonJs = require("../components/button.js");
var _dialogJs = require("../components/dialog.js");
const defaultAction = {
    onClick: (0, _helperJs.returnTrue)
};
const queueName = "mdui.functions.dialog.";
let currentDialog = undefined;
const dialog = (options)=>{
    const dialog = new (0, _dialogJs.Dialog)();
    const $dialog = (0, _js.$)(dialog);
    const properties = [
        "headline",
        "description",
        "icon",
        "closeOnEsc",
        "closeOnOverlayClick",
        "stackedActions"
    ];
    const callbacks = [
        "onOpen",
        "onOpened",
        "onClose",
        "onClosed",
        "onOverlayClick"
    ];
    Object.entries(options).forEach(([key, value])=>{
        // @ts-ignore
        if (properties.includes(key)) // @ts-ignore
        dialog[key] = value;
        else if (callbacks.includes(key)) {
            const eventName = (0, _helperJs.toKebabCase)(key.slice(2));
            $dialog.on(eventName, ()=>{
                value.call(dialog, dialog);
            });
        }
    });
    if (options.body) $dialog.append(options.body);
    if (options.actions) options.actions.forEach((action)=>{
        const mergedAction = Object.assign({}, defaultAction, action);
        (0, _js.$)(`<mdui-button
        slot="action"
        variant="text"
      >${mergedAction.text}</mdui-button>`).appendTo($dialog).on("click", function() {
            const clickResult = mergedAction.onClick.call(dialog, dialog);
            if ((0, _isPromiseDefault.default)(clickResult)) {
                this.loading = true;
                clickResult.then(()=>{
                    dialog.open = false;
                }).finally(()=>{
                    this.loading = false;
                });
            } else if (clickResult !== false) dialog.open = false;
        });
    });
    $dialog.appendTo("body").on("closed", ()=>{
        $dialog.remove();
        if (options.queue) {
            currentDialog = undefined;
            (0, _queueJs.dequeue)(queueName + options.queue);
        }
    });
    if (!options.queue) setTimeout(()=>{
        dialog.open = true;
    });
    else if (currentDialog) (0, _queueJs.queue)(queueName + options.queue, ()=>{
        dialog.open = true;
        currentDialog = dialog;
    });
    else {
        setTimeout(()=>{
            dialog.open = true;
        });
        currentDialog = dialog;
    }
    return dialog;
};

},{"is-promise":"hrWMv","@mdui/jq/$.js":"dZx9v","@mdui/jq/methods/append.js":"948yF","@mdui/jq/methods/appendTo.js":"gOUbd","@mdui/jq/methods/on.js":"e22Mv","@mdui/jq/methods/remove.js":"eOqqE","@mdui/jq/shared/helper.js":"4D489","@mdui/shared/helpers/queue.js":"dxEDt","../components/button.js":"jolHS","../components/dialog.js":"GiXpK","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dxEDt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "queue", ()=>queue);
/**
 * 从队列中移除第一个函数，并执行该函数
 * @param name 队列名
 */ parcelHelpers.export(exports, "dequeue", ()=>dequeue);
var _helperJs = require("@mdui/jq/shared/helper.js");
const container = {};
function queue(name, func) {
    if ((0, _helperJs.isUndefined)(container[name])) container[name] = [];
    if ((0, _helperJs.isUndefined)(func)) return container[name];
    container[name].push(func);
}
function dequeue(name) {
    if ((0, _helperJs.isUndefined)(container[name])) return;
    if (!container[name].length) return;
    const func = container[name].shift();
    func();
}

},{"@mdui/jq/shared/helper.js":"4D489","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4mZab":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "breakpoint", ()=>(0, _breakpointJs.breakpoint));
var _breakpointJs = require("@mdui/shared/helpers/breakpoint.js");

},{"@mdui/shared/helpers/breakpoint.js":"jyFfU","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hTcQ3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "confirm", ()=>confirm);
var _isPromise = require("is-promise");
var _isPromiseDefault = parcelHelpers.interopDefault(_isPromise);
var _js = require("@mdui/jq/$.js");
var _onJs = require("@mdui/jq/methods/on.js");
var _helperJs = require("@mdui/jq/shared/helper.js");
var _dialogJs = require("./dialog.js");
const defaultOptions = {
    confirmText: "\u786E\u5B9A",
    cancelText: "\u53D6\u6D88",
    onConfirm: (0, _helperJs.returnTrue),
    onCancel: (0, _helperJs.returnTrue)
};
const confirm = (options)=>{
    const mergedOptions = Object.assign({}, defaultOptions, options);
    const properties = [
        "headline",
        "description",
        "icon",
        "closeOnEsc",
        "closeOnOverlayClick",
        "stackedActions",
        "queue",
        "onOpen",
        "onOpened",
        "onClose",
        "onClosed",
        "onOverlayClick"
    ];
    return new Promise((resolve, reject)=>{
        let isResolve = false;
        const dialog = (0, _dialogJs.dialog)({
            ...Object.fromEntries(properties.filter((key)=>!(0, _helperJs.isUndefined)(mergedOptions[key])).map((key)=>[
                    key,
                    mergedOptions[key]
                ])),
            actions: [
                {
                    text: mergedOptions.cancelText,
                    onClick: (dialog)=>{
                        return mergedOptions.onCancel.call(dialog, dialog);
                    }
                },
                {
                    text: mergedOptions.confirmText,
                    onClick: (dialog)=>{
                        const clickResult = mergedOptions.onConfirm.call(dialog, dialog);
                        if ((0, _isPromiseDefault.default)(clickResult)) clickResult.then(()=>{
                            isResolve = true;
                        });
                        else if (clickResult !== false) isResolve = true;
                        return clickResult;
                    }
                }
            ]
        });
        (0, _js.$)(dialog).on("close", ()=>{
            isResolve ? resolve() : reject();
        });
    });
};

},{"is-promise":"hrWMv","@mdui/jq/$.js":"dZx9v","@mdui/jq/methods/on.js":"e22Mv","@mdui/jq/shared/helper.js":"4D489","./dialog.js":"jspWZ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3a5xs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getColorFromImage", ()=>getColorFromImage);
var _materialColorUtilities = require("@material/material-color-utilities");
var _js = require("@mdui/jq/$.js");
const getColorFromImage = async (image)=>{
    const $image = (0, _js.$)(image);
    const source = await (0, _materialColorUtilities.sourceColorFromImage)($image[0]);
    return (0, _materialColorUtilities.hexFromArgb)(source);
};

},{"@material/material-color-utilities":"8339m","@mdui/jq/$.js":"dZx9v","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8339m":[function(require,module,exports) {
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _blendJs = require("./blend/blend.js");
parcelHelpers.exportAll(_blendJs, exports);
var _contrastJs = require("./contrast/contrast.js");
parcelHelpers.exportAll(_contrastJs, exports);
var _dislikeAnalyzerJs = require("./dislike/dislike_analyzer.js");
parcelHelpers.exportAll(_dislikeAnalyzerJs, exports);
var _dynamicColorJs = require("./dynamiccolor/dynamic_color.js");
parcelHelpers.exportAll(_dynamicColorJs, exports);
var _materialDynamicColorsJs = require("./dynamiccolor/material_dynamic_colors.js");
parcelHelpers.exportAll(_materialDynamicColorsJs, exports);
var _cam16Js = require("./hct/cam16.js");
parcelHelpers.exportAll(_cam16Js, exports);
var _hctJs = require("./hct/hct.js");
parcelHelpers.exportAll(_hctJs, exports);
var _viewingConditionsJs = require("./hct/viewing_conditions.js");
parcelHelpers.exportAll(_viewingConditionsJs, exports);
var _corePaletteJs = require("./palettes/core_palette.js");
parcelHelpers.exportAll(_corePaletteJs, exports);
var _tonalPaletteJs = require("./palettes/tonal_palette.js");
parcelHelpers.exportAll(_tonalPaletteJs, exports);
var _quantizerCelebiJs = require("./quantize/quantizer_celebi.js");
parcelHelpers.exportAll(_quantizerCelebiJs, exports);
var _quantizerMapJs = require("./quantize/quantizer_map.js");
parcelHelpers.exportAll(_quantizerMapJs, exports);
var _quantizerWsmeansJs = require("./quantize/quantizer_wsmeans.js");
parcelHelpers.exportAll(_quantizerWsmeansJs, exports);
var _quantizerWuJs = require("./quantize/quantizer_wu.js");
parcelHelpers.exportAll(_quantizerWuJs, exports);
var _dynamicSchemeJs = require("./scheme/dynamic_scheme.js");
parcelHelpers.exportAll(_dynamicSchemeJs, exports);
var _schemeJs = require("./scheme/scheme.js");
parcelHelpers.exportAll(_schemeJs, exports);
var _schemeAndroidJs = require("./scheme/scheme_android.js");
parcelHelpers.exportAll(_schemeAndroidJs, exports);
var _schemeContentJs = require("./scheme/scheme_content.js");
parcelHelpers.exportAll(_schemeContentJs, exports);
var _schemeExpressiveJs = require("./scheme/scheme_expressive.js");
parcelHelpers.exportAll(_schemeExpressiveJs, exports);
var _schemeFidelityJs = require("./scheme/scheme_fidelity.js");
parcelHelpers.exportAll(_schemeFidelityJs, exports);
var _schemeMonochromeJs = require("./scheme/scheme_monochrome.js");
parcelHelpers.exportAll(_schemeMonochromeJs, exports);
var _schemeNeutralJs = require("./scheme/scheme_neutral.js");
parcelHelpers.exportAll(_schemeNeutralJs, exports);
var _schemeTonalSpotJs = require("./scheme/scheme_tonal_spot.js");
parcelHelpers.exportAll(_schemeTonalSpotJs, exports);
var _schemeVibrantJs = require("./scheme/scheme_vibrant.js");
parcelHelpers.exportAll(_schemeVibrantJs, exports);
var _scoreJs = require("./score/score.js");
parcelHelpers.exportAll(_scoreJs, exports);
var _temperatureCacheJs = require("./temperature/temperature_cache.js");
parcelHelpers.exportAll(_temperatureCacheJs, exports);
var _colorUtilsJs = require("./utils/color_utils.js");
parcelHelpers.exportAll(_colorUtilsJs, exports);
var _mathUtilsJs = require("./utils/math_utils.js");
parcelHelpers.exportAll(_mathUtilsJs, exports);
var _stringUtilsJs = require("./utils/string_utils.js");
parcelHelpers.exportAll(_stringUtilsJs, exports);
var _imageUtilsJs = require("./utils/image_utils.js");
parcelHelpers.exportAll(_imageUtilsJs, exports);
var _themeUtilsJs = require("./utils/theme_utils.js");
parcelHelpers.exportAll(_themeUtilsJs, exports);

},{"./blend/blend.js":"iugs8","./contrast/contrast.js":"d6oG9","./dislike/dislike_analyzer.js":"1E0jW","./dynamiccolor/dynamic_color.js":"euwDW","./dynamiccolor/material_dynamic_colors.js":"gdRjA","./hct/cam16.js":"h74AD","./hct/hct.js":"kZFIY","./hct/viewing_conditions.js":"fTNIb","./palettes/core_palette.js":"3U8Jr","./palettes/tonal_palette.js":"ittDp","./quantize/quantizer_celebi.js":"aIQny","./quantize/quantizer_map.js":"dnFIt","./quantize/quantizer_wsmeans.js":"iwUnH","./quantize/quantizer_wu.js":"6RhHT","./scheme/dynamic_scheme.js":"1a0jt","./scheme/scheme.js":"aHD7D","./scheme/scheme_android.js":"1xV5C","./scheme/scheme_content.js":"6JZHt","./scheme/scheme_expressive.js":"53Rs4","./scheme/scheme_fidelity.js":"ih7MR","./scheme/scheme_monochrome.js":"fE0x6","./scheme/scheme_neutral.js":"fRIKg","./scheme/scheme_tonal_spot.js":"c2QcW","./scheme/scheme_vibrant.js":"8t3zU","./score/score.js":"4Emny","./temperature/temperature_cache.js":"i0tPM","./utils/color_utils.js":"jxfKg","./utils/math_utils.js":"kq6dU","./utils/string_utils.js":"2nEvy","./utils/image_utils.js":"5AKWo","./utils/theme_utils.js":"4xOIS","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iugs8":[function(require,module,exports) {
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ // This file is automatically generated. Do not modify it.
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// material_color_utilities is designed to have a consistent API across
// platforms and modular components that can be moved around easily. Using a
// class as a namespace facilitates this.
//
// tslint:disable:class-as-namespace
/**
 * Functions for blending in HCT and CAM16.
 */ parcelHelpers.export(exports, "Blend", ()=>Blend);
var _cam16Js = require("../hct/cam16.js");
var _hctJs = require("../hct/hct.js");
var _colorUtilsJs = require("../utils/color_utils.js");
var _mathUtilsJs = require("../utils/math_utils.js");
class Blend {
    /**
     * Blend the design color's HCT hue towards the key color's HCT
     * hue, in a way that leaves the original color recognizable and
     * recognizably shifted towards the key color.
     *
     * @param designColor ARGB representation of an arbitrary color.
     * @param sourceColor ARGB representation of the main theme color.
     * @return The design color with a hue shifted towards the
     * system's color, a slightly warmer/cooler variant of the design
     * color's hue.
     */ static harmonize(designColor, sourceColor) {
        const fromHct = (0, _hctJs.Hct).fromInt(designColor);
        const toHct = (0, _hctJs.Hct).fromInt(sourceColor);
        const differenceDegrees = _mathUtilsJs.differenceDegrees(fromHct.hue, toHct.hue);
        const rotationDegrees = Math.min(differenceDegrees * 0.5, 15.0);
        const outputHue = _mathUtilsJs.sanitizeDegreesDouble(fromHct.hue + rotationDegrees * _mathUtilsJs.rotationDirection(fromHct.hue, toHct.hue));
        return (0, _hctJs.Hct).from(outputHue, fromHct.chroma, fromHct.tone).toInt();
    }
    /**
     * Blends hue from one color into another. The chroma and tone of
     * the original color are maintained.
     *
     * @param from ARGB representation of color
     * @param to ARGB representation of color
     * @param amount how much blending to perform; 0.0 >= and <= 1.0
     * @return from, with a hue blended towards to. Chroma and tone
     * are constant.
     */ static hctHue(from, to, amount) {
        const ucs = Blend.cam16Ucs(from, to, amount);
        const ucsCam = (0, _cam16Js.Cam16).fromInt(ucs);
        const fromCam = (0, _cam16Js.Cam16).fromInt(from);
        const blended = (0, _hctJs.Hct).from(ucsCam.hue, fromCam.chroma, _colorUtilsJs.lstarFromArgb(from));
        return blended.toInt();
    }
    /**
     * Blend in CAM16-UCS space.
     *
     * @param from ARGB representation of color
     * @param to ARGB representation of color
     * @param amount how much blending to perform; 0.0 >= and <= 1.0
     * @return from, blended towards to. Hue, chroma, and tone will
     * change.
     */ static cam16Ucs(from, to, amount) {
        const fromCam = (0, _cam16Js.Cam16).fromInt(from);
        const toCam = (0, _cam16Js.Cam16).fromInt(to);
        const fromJ = fromCam.jstar;
        const fromA = fromCam.astar;
        const fromB = fromCam.bstar;
        const toJ = toCam.jstar;
        const toA = toCam.astar;
        const toB = toCam.bstar;
        const jstar = fromJ + (toJ - fromJ) * amount;
        const astar = fromA + (toA - fromA) * amount;
        const bstar = fromB + (toB - fromB) * amount;
        return (0, _cam16Js.Cam16).fromUcs(jstar, astar, bstar).toInt();
    }
}

},{"../hct/cam16.js":"h74AD","../hct/hct.js":"kZFIY","../utils/color_utils.js":"jxfKg","../utils/math_utils.js":"kq6dU","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"h74AD":[function(require,module,exports) {
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * CAM16, a color appearance model. Colors are not just defined by their hex
 * code, but rather, a hex code and viewing conditions.
 *
 * CAM16 instances also have coordinates in the CAM16-UCS space, called J*, a*,
 * b*, or jstar, astar, bstar in code. CAM16-UCS is included in the CAM16
 * specification, and should be used when measuring distances between colors.
 *
 * In traditional color spaces, a color can be identified solely by the
 * observer's measurement of the color. Color appearance models such as CAM16
 * also use information about the environment where the color was
 * observed, known as the viewing conditions.
 *
 * For example, white under the traditional assumption of a midday sun white
 * point is accurately measured as a slightly chromatic blue by CAM16. (roughly,
 * hue 203, chroma 3, lightness 100)
 */ parcelHelpers.export(exports, "Cam16", ()=>Cam16);
var _colorUtilsJs = require("../utils/color_utils.js");
var _mathUtilsJs = require("../utils/math_utils.js");
var _viewingConditionsJs = require("./viewing_conditions.js");
class Cam16 {
    /**
     * All of the CAM16 dimensions can be calculated from 3 of the dimensions, in
     * the following combinations:
     *      -  {j or q} and {c, m, or s} and hue
     *      - jstar, astar, bstar
     * Prefer using a static method that constructs from 3 of those dimensions.
     * This constructor is intended for those methods to use to return all
     * possible dimensions.
     *
     * @param hue
     * @param chroma informally, colorfulness / color intensity. like saturation
     *     in HSL, except perceptually accurate.
     * @param j lightness
     * @param q brightness; ratio of lightness to white point's lightness
     * @param m colorfulness
     * @param s saturation; ratio of chroma to white point's chroma
     * @param jstar CAM16-UCS J coordinate
     * @param astar CAM16-UCS a coordinate
     * @param bstar CAM16-UCS b coordinate
     */ constructor(hue, chroma, j, q, m, s, jstar, astar, bstar){
        this.hue = hue;
        this.chroma = chroma;
        this.j = j;
        this.q = q;
        this.m = m;
        this.s = s;
        this.jstar = jstar;
        this.astar = astar;
        this.bstar = bstar;
    }
    /**
     * CAM16 instances also have coordinates in the CAM16-UCS space, called J*,
     * a*, b*, or jstar, astar, bstar in code. CAM16-UCS is included in the CAM16
     * specification, and is used to measure distances between colors.
     */ distance(other) {
        const dJ = this.jstar - other.jstar;
        const dA = this.astar - other.astar;
        const dB = this.bstar - other.bstar;
        const dEPrime = Math.sqrt(dJ * dJ + dA * dA + dB * dB);
        const dE = 1.41 * Math.pow(dEPrime, 0.63);
        return dE;
    }
    /**
     * @param argb ARGB representation of a color.
     * @return CAM16 color, assuming the color was viewed in default viewing
     *     conditions.
     */ static fromInt(argb) {
        return Cam16.fromIntInViewingConditions(argb, (0, _viewingConditionsJs.ViewingConditions).DEFAULT);
    }
    /**
     * @param argb ARGB representation of a color.
     * @param viewingConditions Information about the environment where the color
     *     was observed.
     * @return CAM16 color.
     */ static fromIntInViewingConditions(argb, viewingConditions) {
        const red = (argb & 0x00ff0000) >> 16;
        const green = (argb & 0x0000ff00) >> 8;
        const blue = argb & 0x000000ff;
        const redL = _colorUtilsJs.linearized(red);
        const greenL = _colorUtilsJs.linearized(green);
        const blueL = _colorUtilsJs.linearized(blue);
        const x = 0.41233895 * redL + 0.35762064 * greenL + 0.18051042 * blueL;
        const y = 0.2126 * redL + 0.7152 * greenL + 0.0722 * blueL;
        const z = 0.01932141 * redL + 0.11916382 * greenL + 0.95034478 * blueL;
        const rC = 0.401288 * x + 0.650173 * y - 0.051461 * z;
        const gC = -0.250268 * x + 1.204414 * y + 0.045854 * z;
        const bC = -0.002079 * x + 0.048952 * y + 0.953127 * z;
        const rD = viewingConditions.rgbD[0] * rC;
        const gD = viewingConditions.rgbD[1] * gC;
        const bD = viewingConditions.rgbD[2] * bC;
        const rAF = Math.pow(viewingConditions.fl * Math.abs(rD) / 100.0, 0.42);
        const gAF = Math.pow(viewingConditions.fl * Math.abs(gD) / 100.0, 0.42);
        const bAF = Math.pow(viewingConditions.fl * Math.abs(bD) / 100.0, 0.42);
        const rA = _mathUtilsJs.signum(rD) * 400.0 * rAF / (rAF + 27.13);
        const gA = _mathUtilsJs.signum(gD) * 400.0 * gAF / (gAF + 27.13);
        const bA = _mathUtilsJs.signum(bD) * 400.0 * bAF / (bAF + 27.13);
        const a = (11.0 * rA + -12 * gA + bA) / 11.0;
        const b = (rA + gA - 2.0 * bA) / 9.0;
        const u = (20.0 * rA + 20.0 * gA + 21.0 * bA) / 20.0;
        const p2 = (40.0 * rA + 20.0 * gA + bA) / 20.0;
        const atan2 = Math.atan2(b, a);
        const atanDegrees = atan2 * 180.0 / Math.PI;
        const hue = atanDegrees < 0 ? atanDegrees + 360.0 : atanDegrees >= 360 ? atanDegrees - 360.0 : atanDegrees;
        const hueRadians = hue * Math.PI / 180.0;
        const ac = p2 * viewingConditions.nbb;
        const j = 100.0 * Math.pow(ac / viewingConditions.aw, viewingConditions.c * viewingConditions.z);
        const q = 4.0 / viewingConditions.c * Math.sqrt(j / 100.0) * (viewingConditions.aw + 4.0) * viewingConditions.fLRoot;
        const huePrime = hue < 20.14 ? hue + 360 : hue;
        const eHue = 0.25 * (Math.cos(huePrime * Math.PI / 180.0 + 2.0) + 3.8);
        const p1 = 50000.0 / 13.0 * eHue * viewingConditions.nc * viewingConditions.ncb;
        const t = p1 * Math.sqrt(a * a + b * b) / (u + 0.305);
        const alpha = Math.pow(t, 0.9) * Math.pow(1.64 - Math.pow(0.29, viewingConditions.n), 0.73);
        const c = alpha * Math.sqrt(j / 100.0);
        const m = c * viewingConditions.fLRoot;
        const s = 50.0 * Math.sqrt(alpha * viewingConditions.c / (viewingConditions.aw + 4.0));
        const jstar = (1.0 + 100.0 * 0.007) * j / (1.0 + 0.007 * j);
        const mstar = 1.0 / 0.0228 * Math.log(1.0 + 0.0228 * m);
        const astar = mstar * Math.cos(hueRadians);
        const bstar = mstar * Math.sin(hueRadians);
        return new Cam16(hue, c, j, q, m, s, jstar, astar, bstar);
    }
    /**
     * @param j CAM16 lightness
     * @param c CAM16 chroma
     * @param h CAM16 hue
     */ static fromJch(j, c, h) {
        return Cam16.fromJchInViewingConditions(j, c, h, (0, _viewingConditionsJs.ViewingConditions).DEFAULT);
    }
    /**
     * @param j CAM16 lightness
     * @param c CAM16 chroma
     * @param h CAM16 hue
     * @param viewingConditions Information about the environment where the color
     *     was observed.
     */ static fromJchInViewingConditions(j, c, h, viewingConditions) {
        const q = 4.0 / viewingConditions.c * Math.sqrt(j / 100.0) * (viewingConditions.aw + 4.0) * viewingConditions.fLRoot;
        const m = c * viewingConditions.fLRoot;
        const alpha = c / Math.sqrt(j / 100.0);
        const s = 50.0 * Math.sqrt(alpha * viewingConditions.c / (viewingConditions.aw + 4.0));
        const hueRadians = h * Math.PI / 180.0;
        const jstar = (1.0 + 100.0 * 0.007) * j / (1.0 + 0.007 * j);
        const mstar = 1.0 / 0.0228 * Math.log(1.0 + 0.0228 * m);
        const astar = mstar * Math.cos(hueRadians);
        const bstar = mstar * Math.sin(hueRadians);
        return new Cam16(h, c, j, q, m, s, jstar, astar, bstar);
    }
    /**
     * @param jstar CAM16-UCS lightness.
     * @param astar CAM16-UCS a dimension. Like a* in L*a*b*, it is a Cartesian
     *     coordinate on the Y axis.
     * @param bstar CAM16-UCS b dimension. Like a* in L*a*b*, it is a Cartesian
     *     coordinate on the X axis.
     */ static fromUcs(jstar, astar, bstar) {
        return Cam16.fromUcsInViewingConditions(jstar, astar, bstar, (0, _viewingConditionsJs.ViewingConditions).DEFAULT);
    }
    /**
     * @param jstar CAM16-UCS lightness.
     * @param astar CAM16-UCS a dimension. Like a* in L*a*b*, it is a Cartesian
     *     coordinate on the Y axis.
     * @param bstar CAM16-UCS b dimension. Like a* in L*a*b*, it is a Cartesian
     *     coordinate on the X axis.
     * @param viewingConditions Information about the environment where the color
     *     was observed.
     */ static fromUcsInViewingConditions(jstar, astar, bstar, viewingConditions) {
        const a = astar;
        const b = bstar;
        const m = Math.sqrt(a * a + b * b);
        const M = (Math.exp(m * 0.0228) - 1.0) / 0.0228;
        const c = M / viewingConditions.fLRoot;
        let h = Math.atan2(b, a) * (180.0 / Math.PI);
        if (h < 0.0) h += 360.0;
        const j = jstar / (1 - (jstar - 100) * 0.007);
        return Cam16.fromJchInViewingConditions(j, c, h, viewingConditions);
    }
    /**
     *  @return ARGB representation of color, assuming the color was viewed in
     *     default viewing conditions, which are near-identical to the default
     *     viewing conditions for sRGB.
     */ toInt() {
        return this.viewed((0, _viewingConditionsJs.ViewingConditions).DEFAULT);
    }
    /**
     * @param viewingConditions Information about the environment where the color
     *     will be viewed.
     * @return ARGB representation of color
     */ viewed(viewingConditions) {
        const alpha = this.chroma === 0.0 || this.j === 0.0 ? 0.0 : this.chroma / Math.sqrt(this.j / 100.0);
        const t = Math.pow(alpha / Math.pow(1.64 - Math.pow(0.29, viewingConditions.n), 0.73), 1.0 / 0.9);
        const hRad = this.hue * Math.PI / 180.0;
        const eHue = 0.25 * (Math.cos(hRad + 2.0) + 3.8);
        const ac = viewingConditions.aw * Math.pow(this.j / 100.0, 1.0 / viewingConditions.c / viewingConditions.z);
        const p1 = eHue * (50000.0 / 13.0) * viewingConditions.nc * viewingConditions.ncb;
        const p2 = ac / viewingConditions.nbb;
        const hSin = Math.sin(hRad);
        const hCos = Math.cos(hRad);
        const gamma = 23.0 * (p2 + 0.305) * t / (23.0 * p1 + 11.0 * t * hCos + 108.0 * t * hSin);
        const a = gamma * hCos;
        const b = gamma * hSin;
        const rA = (460.0 * p2 + 451.0 * a + 288.0 * b) / 1403.0;
        const gA = (460.0 * p2 - 891.0 * a - 261.0 * b) / 1403.0;
        const bA = (460.0 * p2 - 220.0 * a - 6300.0 * b) / 1403.0;
        const rCBase = Math.max(0, 27.13 * Math.abs(rA) / (400.0 - Math.abs(rA)));
        const rC = _mathUtilsJs.signum(rA) * (100.0 / viewingConditions.fl) * Math.pow(rCBase, 1.0 / 0.42);
        const gCBase = Math.max(0, 27.13 * Math.abs(gA) / (400.0 - Math.abs(gA)));
        const gC = _mathUtilsJs.signum(gA) * (100.0 / viewingConditions.fl) * Math.pow(gCBase, 1.0 / 0.42);
        const bCBase = Math.max(0, 27.13 * Math.abs(bA) / (400.0 - Math.abs(bA)));
        const bC = _mathUtilsJs.signum(bA) * (100.0 / viewingConditions.fl) * Math.pow(bCBase, 1.0 / 0.42);
        const rF = rC / viewingConditions.rgbD[0];
        const gF = gC / viewingConditions.rgbD[1];
        const bF = bC / viewingConditions.rgbD[2];
        const x = 1.86206786 * rF - 1.01125463 * gF + 0.14918677 * bF;
        const y = 0.38752654 * rF + 0.62144744 * gF - 0.00897398 * bF;
        const z = -0.0158415 * rF - 0.03412294 * gF + 1.04996444 * bF;
        const argb = _colorUtilsJs.argbFromXyz(x, y, z);
        return argb;
    }
    /// Given color expressed in XYZ and viewed in [viewingConditions], convert to
    /// CAM16.
    static fromXyzInViewingConditions(x, y, z, viewingConditions) {
        // Transform XYZ to 'cone'/'rgb' responses
        const rC = 0.401288 * x + 0.650173 * y - 0.051461 * z;
        const gC = -0.250268 * x + 1.204414 * y + 0.045854 * z;
        const bC = -0.002079 * x + 0.048952 * y + 0.953127 * z;
        // Discount illuminant
        const rD = viewingConditions.rgbD[0] * rC;
        const gD = viewingConditions.rgbD[1] * gC;
        const bD = viewingConditions.rgbD[2] * bC;
        // chromatic adaptation
        const rAF = Math.pow(viewingConditions.fl * Math.abs(rD) / 100.0, 0.42);
        const gAF = Math.pow(viewingConditions.fl * Math.abs(gD) / 100.0, 0.42);
        const bAF = Math.pow(viewingConditions.fl * Math.abs(bD) / 100.0, 0.42);
        const rA = _mathUtilsJs.signum(rD) * 400.0 * rAF / (rAF + 27.13);
        const gA = _mathUtilsJs.signum(gD) * 400.0 * gAF / (gAF + 27.13);
        const bA = _mathUtilsJs.signum(bD) * 400.0 * bAF / (bAF + 27.13);
        // redness-greenness
        const a = (11.0 * rA + -12 * gA + bA) / 11.0;
        // yellowness-blueness
        const b = (rA + gA - 2.0 * bA) / 9.0;
        // auxiliary components
        const u = (20.0 * rA + 20.0 * gA + 21.0 * bA) / 20.0;
        const p2 = (40.0 * rA + 20.0 * gA + bA) / 20.0;
        // hue
        const atan2 = Math.atan2(b, a);
        const atanDegrees = atan2 * 180.0 / Math.PI;
        const hue = atanDegrees < 0 ? atanDegrees + 360.0 : atanDegrees >= 360 ? atanDegrees - 360 : atanDegrees;
        const hueRadians = hue * Math.PI / 180.0;
        // achromatic response to color
        const ac = p2 * viewingConditions.nbb;
        // CAM16 lightness and brightness
        const J = 100.0 * Math.pow(ac / viewingConditions.aw, viewingConditions.c * viewingConditions.z);
        const Q = 4.0 / viewingConditions.c * Math.sqrt(J / 100.0) * (viewingConditions.aw + 4.0) * viewingConditions.fLRoot;
        const huePrime = hue < 20.14 ? hue + 360 : hue;
        const eHue = 0.25 * (Math.cos(huePrime * Math.PI / 180.0 + 2.0) + 3.8);
        const p1 = 50000.0 / 13.0 * eHue * viewingConditions.nc * viewingConditions.ncb;
        const t = p1 * Math.sqrt(a * a + b * b) / (u + 0.305);
        const alpha = Math.pow(t, 0.9) * Math.pow(1.64 - Math.pow(0.29, viewingConditions.n), 0.73);
        // CAM16 chroma, colorfulness, chroma
        const C = alpha * Math.sqrt(J / 100.0);
        const M = C * viewingConditions.fLRoot;
        const s = 50.0 * Math.sqrt(alpha * viewingConditions.c / (viewingConditions.aw + 4.0));
        // CAM16-UCS components
        const jstar = (1.0 + 100.0 * 0.007) * J / (1.0 + 0.007 * J);
        const mstar = Math.log(1.0 + 0.0228 * M) / 0.0228;
        const astar = mstar * Math.cos(hueRadians);
        const bstar = mstar * Math.sin(hueRadians);
        return new Cam16(hue, C, J, Q, M, s, jstar, astar, bstar);
    }
    /// XYZ representation of CAM16 seen in [viewingConditions].
    xyzInViewingConditions(viewingConditions) {
        const alpha = this.chroma === 0.0 || this.j === 0.0 ? 0.0 : this.chroma / Math.sqrt(this.j / 100.0);
        const t = Math.pow(alpha / Math.pow(1.64 - Math.pow(0.29, viewingConditions.n), 0.73), 1.0 / 0.9);
        const hRad = this.hue * Math.PI / 180.0;
        const eHue = 0.25 * (Math.cos(hRad + 2.0) + 3.8);
        const ac = viewingConditions.aw * Math.pow(this.j / 100.0, 1.0 / viewingConditions.c / viewingConditions.z);
        const p1 = eHue * (50000.0 / 13.0) * viewingConditions.nc * viewingConditions.ncb;
        const p2 = ac / viewingConditions.nbb;
        const hSin = Math.sin(hRad);
        const hCos = Math.cos(hRad);
        const gamma = 23.0 * (p2 + 0.305) * t / (23.0 * p1 + 11 * t * hCos + 108.0 * t * hSin);
        const a = gamma * hCos;
        const b = gamma * hSin;
        const rA = (460.0 * p2 + 451.0 * a + 288.0 * b) / 1403.0;
        const gA = (460.0 * p2 - 891.0 * a - 261.0 * b) / 1403.0;
        const bA = (460.0 * p2 - 220.0 * a - 6300.0 * b) / 1403.0;
        const rCBase = Math.max(0, 27.13 * Math.abs(rA) / (400.0 - Math.abs(rA)));
        const rC = _mathUtilsJs.signum(rA) * (100.0 / viewingConditions.fl) * Math.pow(rCBase, 1.0 / 0.42);
        const gCBase = Math.max(0, 27.13 * Math.abs(gA) / (400.0 - Math.abs(gA)));
        const gC = _mathUtilsJs.signum(gA) * (100.0 / viewingConditions.fl) * Math.pow(gCBase, 1.0 / 0.42);
        const bCBase = Math.max(0, 27.13 * Math.abs(bA) / (400.0 - Math.abs(bA)));
        const bC = _mathUtilsJs.signum(bA) * (100.0 / viewingConditions.fl) * Math.pow(bCBase, 1.0 / 0.42);
        const rF = rC / viewingConditions.rgbD[0];
        const gF = gC / viewingConditions.rgbD[1];
        const bF = bC / viewingConditions.rgbD[2];
        const x = 1.86206786 * rF - 1.01125463 * gF + 0.14918677 * bF;
        const y = 0.38752654 * rF + 0.62144744 * gF - 0.00897398 * bF;
        const z = -0.0158415 * rF - 0.03412294 * gF + 1.04996444 * bF;
        return [
            x,
            y,
            z
        ];
    }
}

},{"../utils/color_utils.js":"jxfKg","../utils/math_utils.js":"kq6dU","./viewing_conditions.js":"fTNIb","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jxfKg":[function(require,module,exports) {
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ // This file is automatically generated. Do not modify it.
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Converts a color from RGB components to ARGB format.
 */ parcelHelpers.export(exports, "argbFromRgb", ()=>argbFromRgb);
/**
 * Converts a color from linear RGB components to ARGB format.
 */ parcelHelpers.export(exports, "argbFromLinrgb", ()=>argbFromLinrgb);
/**
 * Returns the alpha component of a color in ARGB format.
 */ parcelHelpers.export(exports, "alphaFromArgb", ()=>alphaFromArgb);
/**
 * Returns the red component of a color in ARGB format.
 */ parcelHelpers.export(exports, "redFromArgb", ()=>redFromArgb);
/**
 * Returns the green component of a color in ARGB format.
 */ parcelHelpers.export(exports, "greenFromArgb", ()=>greenFromArgb);
/**
 * Returns the blue component of a color in ARGB format.
 */ parcelHelpers.export(exports, "blueFromArgb", ()=>blueFromArgb);
/**
 * Returns whether a color in ARGB format is opaque.
 */ parcelHelpers.export(exports, "isOpaque", ()=>isOpaque);
/**
 * Converts a color from ARGB to XYZ.
 */ parcelHelpers.export(exports, "argbFromXyz", ()=>argbFromXyz);
/**
 * Converts a color from XYZ to ARGB.
 */ parcelHelpers.export(exports, "xyzFromArgb", ()=>xyzFromArgb);
/**
 * Converts a color represented in Lab color space into an ARGB
 * integer.
 */ parcelHelpers.export(exports, "argbFromLab", ()=>argbFromLab);
/**
 * Converts a color from ARGB representation to L*a*b*
 * representation.
 *
 * @param argb the ARGB representation of a color
 * @return a Lab object representing the color
 */ parcelHelpers.export(exports, "labFromArgb", ()=>labFromArgb);
/**
 * Converts an L* value to an ARGB representation.
 *
 * @param lstar L* in L*a*b*
 * @return ARGB representation of grayscale color with lightness
 * matching L*
 */ parcelHelpers.export(exports, "argbFromLstar", ()=>argbFromLstar);
/**
 * Computes the L* value of a color in ARGB representation.
 *
 * @param argb ARGB representation of a color
 * @return L*, from L*a*b*, coordinate of the color
 */ parcelHelpers.export(exports, "lstarFromArgb", ()=>lstarFromArgb);
/**
 * Converts an L* value to a Y value.
 *
 * L* in L*a*b* and Y in XYZ measure the same quantity, luminance.
 *
 * L* measures perceptual luminance, a linear scale. Y in XYZ
 * measures relative luminance, a logarithmic scale.
 *
 * @param lstar L* in L*a*b*
 * @return Y in XYZ
 */ parcelHelpers.export(exports, "yFromLstar", ()=>yFromLstar);
/**
 * Converts a Y value to an L* value.
 *
 * L* in L*a*b* and Y in XYZ measure the same quantity, luminance.
 *
 * L* measures perceptual luminance, a linear scale. Y in XYZ
 * measures relative luminance, a logarithmic scale.
 *
 * @param y Y in XYZ
 * @return L* in L*a*b*
 */ parcelHelpers.export(exports, "lstarFromY", ()=>lstarFromY);
/**
 * Linearizes an RGB component.
 *
 * @param rgbComponent 0 <= rgb_component <= 255, represents R/G/B
 * channel
 * @return 0.0 <= output <= 100.0, color channel converted to
 * linear RGB space
 */ parcelHelpers.export(exports, "linearized", ()=>linearized);
/**
 * Delinearizes an RGB component.
 *
 * @param rgbComponent 0.0 <= rgb_component <= 100.0, represents
 * linear R/G/B channel
 * @return 0 <= output <= 255, color channel converted to regular
 * RGB space
 */ parcelHelpers.export(exports, "delinearized", ()=>delinearized);
/**
 * Returns the standard white point; white on a sunny day.
 *
 * @return The white point
 */ parcelHelpers.export(exports, "whitePointD65", ()=>whitePointD65);
/**
 * Return RGBA from a given int32 color
 *
 * @param argb ARGB representation of a int32 color.
 * @return RGBA representation of a int32 color.
 */ parcelHelpers.export(exports, "rgbaFromArgb", ()=>rgbaFromArgb);
/**
 * Return int32 color from a given RGBA component
 *
 * @param rgba RGBA representation of a int32 color.
 * @returns ARGB representation of a int32 color.
 */ parcelHelpers.export(exports, "argbFromRgba", ()=>argbFromRgba);
var _mathUtilsJs = require("./math_utils.js");
/**
 * Color science utilities.
 *
 * Utility methods for color science constants and color space
 * conversions that aren't HCT or CAM16.
 */ const SRGB_TO_XYZ = [
    [
        0.41233895,
        0.35762064,
        0.18051042
    ],
    [
        0.2126,
        0.7152,
        0.0722
    ],
    [
        0.01932141,
        0.11916382,
        0.95034478
    ]
];
const XYZ_TO_SRGB = [
    [
        3.2413774792388685,
        -1.5376652402851851,
        -0.49885366846268053
    ],
    [
        -0.9691452513005321,
        1.8758853451067872,
        0.04156585616912061
    ],
    [
        0.05562093689691305,
        -0.20395524564742123,
        1.0571799111220335
    ]
];
const WHITE_POINT_D65 = [
    95.047,
    100.0,
    108.883
];
function argbFromRgb(red, green, blue) {
    return (-16777216 | (red & 255) << 16 | (green & 255) << 8 | blue & 255) >>> 0;
}
function argbFromLinrgb(linrgb) {
    const r = delinearized(linrgb[0]);
    const g = delinearized(linrgb[1]);
    const b = delinearized(linrgb[2]);
    return argbFromRgb(r, g, b);
}
function alphaFromArgb(argb) {
    return argb >> 24 & 255;
}
function redFromArgb(argb) {
    return argb >> 16 & 255;
}
function greenFromArgb(argb) {
    return argb >> 8 & 255;
}
function blueFromArgb(argb) {
    return argb & 255;
}
function isOpaque(argb) {
    return alphaFromArgb(argb) >= 255;
}
function argbFromXyz(x, y, z) {
    const matrix = XYZ_TO_SRGB;
    const linearR = matrix[0][0] * x + matrix[0][1] * y + matrix[0][2] * z;
    const linearG = matrix[1][0] * x + matrix[1][1] * y + matrix[1][2] * z;
    const linearB = matrix[2][0] * x + matrix[2][1] * y + matrix[2][2] * z;
    const r = delinearized(linearR);
    const g = delinearized(linearG);
    const b = delinearized(linearB);
    return argbFromRgb(r, g, b);
}
function xyzFromArgb(argb) {
    const r = linearized(redFromArgb(argb));
    const g = linearized(greenFromArgb(argb));
    const b = linearized(blueFromArgb(argb));
    return _mathUtilsJs.matrixMultiply([
        r,
        g,
        b
    ], SRGB_TO_XYZ);
}
function argbFromLab(l, a, b) {
    const whitePoint = WHITE_POINT_D65;
    const fy = (l + 16.0) / 116.0;
    const fx = a / 500.0 + fy;
    const fz = fy - b / 200.0;
    const xNormalized = labInvf(fx);
    const yNormalized = labInvf(fy);
    const zNormalized = labInvf(fz);
    const x = xNormalized * whitePoint[0];
    const y = yNormalized * whitePoint[1];
    const z = zNormalized * whitePoint[2];
    return argbFromXyz(x, y, z);
}
function labFromArgb(argb) {
    const linearR = linearized(redFromArgb(argb));
    const linearG = linearized(greenFromArgb(argb));
    const linearB = linearized(blueFromArgb(argb));
    const matrix = SRGB_TO_XYZ;
    const x = matrix[0][0] * linearR + matrix[0][1] * linearG + matrix[0][2] * linearB;
    const y = matrix[1][0] * linearR + matrix[1][1] * linearG + matrix[1][2] * linearB;
    const z = matrix[2][0] * linearR + matrix[2][1] * linearG + matrix[2][2] * linearB;
    const whitePoint = WHITE_POINT_D65;
    const xNormalized = x / whitePoint[0];
    const yNormalized = y / whitePoint[1];
    const zNormalized = z / whitePoint[2];
    const fx = labF(xNormalized);
    const fy = labF(yNormalized);
    const fz = labF(zNormalized);
    const l = 116.0 * fy - 16;
    const a = 500.0 * (fx - fy);
    const b = 200.0 * (fy - fz);
    return [
        l,
        a,
        b
    ];
}
function argbFromLstar(lstar) {
    const y = yFromLstar(lstar);
    const component = delinearized(y);
    return argbFromRgb(component, component, component);
}
function lstarFromArgb(argb) {
    const y = xyzFromArgb(argb)[1];
    return 116.0 * labF(y / 100.0) - 16.0;
}
function yFromLstar(lstar) {
    return 100.0 * labInvf((lstar + 16.0) / 116.0);
}
function lstarFromY(y) {
    return labF(y / 100.0) * 116.0 - 16.0;
}
function linearized(rgbComponent) {
    const normalized = rgbComponent / 255.0;
    if (normalized <= 0.040449936) return normalized / 12.92 * 100.0;
    else return Math.pow((normalized + 0.055) / 1.055, 2.4) * 100.0;
}
function delinearized(rgbComponent) {
    const normalized = rgbComponent / 100.0;
    let delinearized = 0.0;
    if (normalized <= 0.0031308) delinearized = normalized * 12.92;
    else delinearized = 1.055 * Math.pow(normalized, 1.0 / 2.4) - 0.055;
    return _mathUtilsJs.clampInt(0, 255, Math.round(delinearized * 255.0));
}
function whitePointD65() {
    return WHITE_POINT_D65;
}
function rgbaFromArgb(argb) {
    const r = redFromArgb(argb);
    const g = greenFromArgb(argb);
    const b = blueFromArgb(argb);
    const a = alphaFromArgb(argb);
    return {
        r,
        g,
        b,
        a
    };
}
function argbFromRgba({ r, g, b, a }) {
    const rValue = clampComponent(r);
    const gValue = clampComponent(g);
    const bValue = clampComponent(b);
    const aValue = clampComponent(a);
    return aValue << 24 | rValue << 16 | gValue << 8 | bValue;
}
function clampComponent(value) {
    if (value < 0) return 0;
    if (value > 255) return 255;
    return value;
}
function labF(t) {
    const e = 216.0 / 24389.0;
    const kappa = 24389.0 / 27.0;
    if (t > e) return Math.pow(t, 1.0 / 3.0);
    else return (kappa * t + 16) / 116;
}
function labInvf(ft) {
    const e = 216.0 / 24389.0;
    const kappa = 24389.0 / 27.0;
    const ft3 = ft * ft * ft;
    if (ft3 > e) return ft3;
    else return (116 * ft - 16) / kappa;
}

},{"./math_utils.js":"kq6dU","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kq6dU":[function(require,module,exports) {
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ // This file is automatically generated. Do not modify it.
/**
 * Utility methods for mathematical operations.
 */ /**
 * The signum function.
 *
 * @return 1 if num > 0, -1 if num < 0, and 0 if num = 0
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "signum", ()=>signum);
/**
 * The linear interpolation function.
 *
 * @return start if amount = 0 and stop if amount = 1
 */ parcelHelpers.export(exports, "lerp", ()=>lerp);
/**
 * Clamps an integer between two integers.
 *
 * @return input when min <= input <= max, and either min or max
 * otherwise.
 */ parcelHelpers.export(exports, "clampInt", ()=>clampInt);
/**
 * Clamps an integer between two floating-point numbers.
 *
 * @return input when min <= input <= max, and either min or max
 * otherwise.
 */ parcelHelpers.export(exports, "clampDouble", ()=>clampDouble);
/**
 * Sanitizes a degree measure as an integer.
 *
 * @return a degree measure between 0 (inclusive) and 360
 * (exclusive).
 */ parcelHelpers.export(exports, "sanitizeDegreesInt", ()=>sanitizeDegreesInt);
/**
 * Sanitizes a degree measure as a floating-point number.
 *
 * @return a degree measure between 0.0 (inclusive) and 360.0
 * (exclusive).
 */ parcelHelpers.export(exports, "sanitizeDegreesDouble", ()=>sanitizeDegreesDouble);
/**
 * Sign of direction change needed to travel from one angle to
 * another.
 *
 * For angles that are 180 degrees apart from each other, both
 * directions have the same travel distance, so either direction is
 * shortest. The value 1.0 is returned in this case.
 *
 * @param from The angle travel starts from, in degrees.
 * @param to The angle travel ends at, in degrees.
 * @return -1 if decreasing from leads to the shortest travel
 * distance, 1 if increasing from leads to the shortest travel
 * distance.
 */ parcelHelpers.export(exports, "rotationDirection", ()=>rotationDirection);
/**
 * Distance of two points on a circle, represented using degrees.
 */ parcelHelpers.export(exports, "differenceDegrees", ()=>differenceDegrees);
/**
 * Multiplies a 1x3 row vector with a 3x3 matrix.
 */ parcelHelpers.export(exports, "matrixMultiply", ()=>matrixMultiply);
function signum(num) {
    if (num < 0) return -1;
    else if (num === 0) return 0;
    else return 1;
}
function lerp(start, stop, amount) {
    return (1.0 - amount) * start + amount * stop;
}
function clampInt(min, max, input) {
    if (input < min) return min;
    else if (input > max) return max;
    return input;
}
function clampDouble(min, max, input) {
    if (input < min) return min;
    else if (input > max) return max;
    return input;
}
function sanitizeDegreesInt(degrees) {
    degrees = degrees % 360;
    if (degrees < 0) degrees = degrees + 360;
    return degrees;
}
function sanitizeDegreesDouble(degrees) {
    degrees = degrees % 360.0;
    if (degrees < 0) degrees = degrees + 360.0;
    return degrees;
}
function rotationDirection(from, to) {
    const increasingDifference = sanitizeDegreesDouble(to - from);
    return increasingDifference <= 180.0 ? 1.0 : -1;
}
function differenceDegrees(a, b) {
    return 180.0 - Math.abs(Math.abs(a - b) - 180.0);
}
function matrixMultiply(row, matrix) {
    const a = row[0] * matrix[0][0] + row[1] * matrix[0][1] + row[2] * matrix[0][2];
    const b = row[0] * matrix[1][0] + row[1] * matrix[1][1] + row[2] * matrix[1][2];
    const c = row[0] * matrix[2][0] + row[1] * matrix[2][1] + row[2] * matrix[2][2];
    return [
        a,
        b,
        c
    ];
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fTNIb":[function(require,module,exports) {
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * In traditional color spaces, a color can be identified solely by the
 * observer's measurement of the color. Color appearance models such as CAM16
 * also use information about the environment where the color was
 * observed, known as the viewing conditions.
 *
 * For example, white under the traditional assumption of a midday sun white
 * point is accurately measured as a slightly chromatic blue by CAM16. (roughly,
 * hue 203, chroma 3, lightness 100)
 *
 * This class caches intermediate values of the CAM16 conversion process that
 * depend only on viewing conditions, enabling speed ups.
 */ parcelHelpers.export(exports, "ViewingConditions", ()=>ViewingConditions);
var _colorUtilsJs = require("../utils/color_utils.js");
var _mathUtilsJs = require("../utils/math_utils.js");
class ViewingConditions {
    /**
     * Create ViewingConditions from a simple, physically relevant, set of
     * parameters.
     *
     * @param whitePoint White point, measured in the XYZ color space.
     *     default = D65, or sunny day afternoon
     * @param adaptingLuminance The luminance of the adapting field. Informally,
     *     how bright it is in the room where the color is viewed. Can be
     *     calculated from lux by multiplying lux by 0.0586. default = 11.72,
     *     or 200 lux.
     * @param backgroundLstar The lightness of the area surrounding the color.
     *     measured by L* in L*a*b*. default = 50.0
     * @param surround A general description of the lighting surrounding the
     *     color. 0 is pitch dark, like watching a movie in a theater. 1.0 is a
     *     dimly light room, like watching TV at home at night. 2.0 means there
     *     is no difference between the lighting on the color and around it.
     *     default = 2.0
     * @param discountingIlluminant Whether the eye accounts for the tint of the
     *     ambient lighting, such as knowing an apple is still red in green light.
     *     default = false, the eye does not perform this process on
     *       self-luminous objects like displays.
     */ static make(whitePoint = _colorUtilsJs.whitePointD65(), adaptingLuminance = 200.0 / Math.PI * _colorUtilsJs.yFromLstar(50.0) / 100.0, backgroundLstar = 50.0, surround = 2.0, discountingIlluminant = false) {
        const xyz = whitePoint;
        const rW = xyz[0] * 0.401288 + xyz[1] * 0.650173 + xyz[2] * -0.051461;
        const gW = xyz[0] * -0.250268 + xyz[1] * 1.204414 + xyz[2] * 0.045854;
        const bW = xyz[0] * -0.002079 + xyz[1] * 0.048952 + xyz[2] * 0.953127;
        const f = 0.8 + surround / 10.0;
        const c = f >= 0.9 ? _mathUtilsJs.lerp(0.59, 0.69, (f - 0.9) * 10.0) : _mathUtilsJs.lerp(0.525, 0.59, (f - 0.8) * 10.0);
        let d = discountingIlluminant ? 1.0 : f * (1.0 - 1.0 / 3.6 * Math.exp((-adaptingLuminance - 42.0) / 92.0));
        d = d > 1.0 ? 1.0 : d < 0.0 ? 0.0 : d;
        const nc = f;
        const rgbD = [
            d * (100.0 / rW) + 1.0 - d,
            d * (100.0 / gW) + 1.0 - d,
            d * (100.0 / bW) + 1.0 - d
        ];
        const k = 1.0 / (5.0 * adaptingLuminance + 1.0);
        const k4 = k * k * k * k;
        const k4F = 1.0 - k4;
        const fl = k4 * adaptingLuminance + 0.1 * k4F * k4F * Math.cbrt(5.0 * adaptingLuminance);
        const n = _colorUtilsJs.yFromLstar(backgroundLstar) / whitePoint[1];
        const z = 1.48 + Math.sqrt(n);
        const nbb = 0.725 / Math.pow(n, 0.2);
        const ncb = nbb;
        const rgbAFactors = [
            Math.pow(fl * rgbD[0] * rW / 100.0, 0.42),
            Math.pow(fl * rgbD[1] * gW / 100.0, 0.42),
            Math.pow(fl * rgbD[2] * bW / 100.0, 0.42)
        ];
        const rgbA = [
            400.0 * rgbAFactors[0] / (rgbAFactors[0] + 27.13),
            400.0 * rgbAFactors[1] / (rgbAFactors[1] + 27.13),
            400.0 * rgbAFactors[2] / (rgbAFactors[2] + 27.13)
        ];
        const aw = (2.0 * rgbA[0] + rgbA[1] + 0.05 * rgbA[2]) * nbb;
        return new ViewingConditions(n, aw, nbb, ncb, c, nc, rgbD, fl, Math.pow(fl, 0.25), z);
    }
    /**
     * Parameters are intermediate values of the CAM16 conversion process. Their
     * names are shorthand for technical color science terminology, this class
     * would not benefit from documenting them individually. A brief overview
     * is available in the CAM16 specification, and a complete overview requires
     * a color science textbook, such as Fairchild's Color Appearance Models.
     */ constructor(n, aw, nbb, ncb, c, nc, rgbD, fl, fLRoot, z){
        this.n = n;
        this.aw = aw;
        this.nbb = nbb;
        this.ncb = ncb;
        this.c = c;
        this.nc = nc;
        this.rgbD = rgbD;
        this.fl = fl;
        this.fLRoot = fLRoot;
        this.z = z;
    }
}
/** sRGB-like viewing conditions.  */ ViewingConditions.DEFAULT = ViewingConditions.make();

},{"../utils/color_utils.js":"jxfKg","../utils/math_utils.js":"kq6dU","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kZFIY":[function(require,module,exports) {
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * A color system built using CAM16 hue and chroma, and L* from
 * L*a*b*.
 *
 * Using L* creates a link between the color system, contrast, and thus
 * accessibility. Contrast ratio depends on relative luminance, or Y in the XYZ
 * color space. L*, or perceptual luminance can be calculated from Y.
 *
 * Unlike Y, L* is linear to human perception, allowing trivial creation of
 * accurate color tones.
 *
 * Unlike contrast ratio, measuring contrast in L* is linear, and simple to
 * calculate. A difference of 40 in HCT tone guarantees a contrast ratio >= 3.0,
 * and a difference of 50 guarantees a contrast ratio >= 4.5.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * HCT, hue, chroma, and tone. A color system that provides a perceptually
 * accurate color measurement system that can also accurately render what colors
 * will appear as in different lighting environments.
 */ parcelHelpers.export(exports, "Hct", ()=>Hct);
var _colorUtilsJs = require("../utils/color_utils.js");
var _cam16Js = require("./cam16.js");
var _hctSolverJs = require("./hct_solver.js");
var _viewingConditionsJs = require("./viewing_conditions.js");
class Hct {
    static from(hue, chroma, tone) {
        return new Hct((0, _hctSolverJs.HctSolver).solveToInt(hue, chroma, tone));
    }
    /**
     * @param argb ARGB representation of a color.
     * @return HCT representation of a color in default viewing conditions
     */ static fromInt(argb) {
        return new Hct(argb);
    }
    toInt() {
        return this.argb;
    }
    /**
     * A number, in degrees, representing ex. red, orange, yellow, etc.
     * Ranges from 0 <= hue < 360.
     */ get hue() {
        return this.internalHue;
    }
    /**
     * @param newHue 0 <= newHue < 360; invalid values are corrected.
     * Chroma may decrease because chroma has a different maximum for any given
     * hue and tone.
     */ set hue(newHue) {
        this.setInternalState((0, _hctSolverJs.HctSolver).solveToInt(newHue, this.internalChroma, this.internalTone));
    }
    get chroma() {
        return this.internalChroma;
    }
    /**
     * @param newChroma 0 <= newChroma < ?
     * Chroma may decrease because chroma has a different maximum for any given
     * hue and tone.
     */ set chroma(newChroma) {
        this.setInternalState((0, _hctSolverJs.HctSolver).solveToInt(this.internalHue, newChroma, this.internalTone));
    }
    /** Lightness. Ranges from 0 to 100. */ get tone() {
        return this.internalTone;
    }
    /**
     * @param newTone 0 <= newTone <= 100; invalid valids are corrected.
     * Chroma may decrease because chroma has a different maximum for any given
     * hue and tone.
     */ set tone(newTone) {
        this.setInternalState((0, _hctSolverJs.HctSolver).solveToInt(this.internalHue, this.internalChroma, newTone));
    }
    constructor(argb){
        this.argb = argb;
        const cam = (0, _cam16Js.Cam16).fromInt(argb);
        this.internalHue = cam.hue;
        this.internalChroma = cam.chroma;
        this.internalTone = _colorUtilsJs.lstarFromArgb(argb);
        this.argb = argb;
    }
    setInternalState(argb) {
        const cam = (0, _cam16Js.Cam16).fromInt(argb);
        this.internalHue = cam.hue;
        this.internalChroma = cam.chroma;
        this.internalTone = _colorUtilsJs.lstarFromArgb(argb);
        this.argb = argb;
    }
    /**
     * Translates a color into different [ViewingConditions].
     *
     * Colors change appearance. They look different with lights on versus off,
     * the same color, as in hex code, on white looks different when on black.
     * This is called color relativity, most famously explicated by Josef Albers
     * in Interaction of Color.
     *
     * In color science, color appearance models can account for this and
     * calculate the appearance of a color in different settings. HCT is based on
     * CAM16, a color appearance model, and uses it to make these calculations.
     *
     * See [ViewingConditions.make] for parameters affecting color appearance.
     */ inViewingConditions(vc) {
        // 1. Use CAM16 to find XYZ coordinates of color in specified VC.
        const cam = (0, _cam16Js.Cam16).fromInt(this.toInt());
        const viewedInVc = cam.xyzInViewingConditions(vc);
        // 2. Create CAM16 of those XYZ coordinates in default VC.
        const recastInVc = (0, _cam16Js.Cam16).fromXyzInViewingConditions(viewedInVc[0], viewedInVc[1], viewedInVc[2], (0, _viewingConditionsJs.ViewingConditions).make());
        // 3. Create HCT from:
        // - CAM16 using default VC with XYZ coordinates in specified VC.
        // - L* converted from Y in XYZ coordinates in specified VC.
        const recastHct = Hct.from(recastInVc.hue, recastInVc.chroma, _colorUtilsJs.lstarFromY(viewedInVc[1]));
        return recastHct;
    }
}

},{"../utils/color_utils.js":"jxfKg","./cam16.js":"h74AD","./hct_solver.js":"1kWvg","./viewing_conditions.js":"fTNIb","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1kWvg":[function(require,module,exports) {
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ // This file is automatically generated. Do not modify it.
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// material_color_utilities is designed to have a consistent API across
// platforms and modular components that can be moved around easily. Using a
// class as a namespace facilitates this.
//
// tslint:disable:class-as-namespace
/**
 * A class that solves the HCT equation.
 */ parcelHelpers.export(exports, "HctSolver", ()=>HctSolver);
var _colorUtilsJs = require("../utils/color_utils.js");
var _mathUtilsJs = require("../utils/math_utils.js");
var _cam16Js = require("./cam16.js");
var _viewingConditionsJs = require("./viewing_conditions.js");
class HctSolver {
    /**
     * Sanitizes a small enough angle in radians.
     *
     * @param angle An angle in radians; must not deviate too much
     * from 0.
     * @return A coterminal angle between 0 and 2pi.
     */ static sanitizeRadians(angle) {
        return (angle + Math.PI * 8) % (Math.PI * 2);
    }
    /**
     * Delinearizes an RGB component, returning a floating-point
     * number.
     *
     * @param rgbComponent 0.0 <= rgb_component <= 100.0, represents
     * linear R/G/B channel
     * @return 0.0 <= output <= 255.0, color channel converted to
     * regular RGB space
     */ static trueDelinearized(rgbComponent) {
        const normalized = rgbComponent / 100.0;
        let delinearized = 0.0;
        if (normalized <= 0.0031308) delinearized = normalized * 12.92;
        else delinearized = 1.055 * Math.pow(normalized, 1.0 / 2.4) - 0.055;
        return delinearized * 255.0;
    }
    static chromaticAdaptation(component) {
        const af = Math.pow(Math.abs(component), 0.42);
        return _mathUtilsJs.signum(component) * 400.0 * af / (af + 27.13);
    }
    /**
     * Returns the hue of a linear RGB color in CAM16.
     *
     * @param linrgb The linear RGB coordinates of a color.
     * @return The hue of the color in CAM16, in radians.
     */ static hueOf(linrgb) {
        const scaledDiscount = _mathUtilsJs.matrixMultiply(linrgb, HctSolver.SCALED_DISCOUNT_FROM_LINRGB);
        const rA = HctSolver.chromaticAdaptation(scaledDiscount[0]);
        const gA = HctSolver.chromaticAdaptation(scaledDiscount[1]);
        const bA = HctSolver.chromaticAdaptation(scaledDiscount[2]);
        // redness-greenness
        const a = (11.0 * rA + -12 * gA + bA) / 11.0;
        // yellowness-blueness
        const b = (rA + gA - 2.0 * bA) / 9.0;
        return Math.atan2(b, a);
    }
    static areInCyclicOrder(a, b, c) {
        const deltaAB = HctSolver.sanitizeRadians(b - a);
        const deltaAC = HctSolver.sanitizeRadians(c - a);
        return deltaAB < deltaAC;
    }
    /**
     * Solves the lerp equation.
     *
     * @param source The starting number.
     * @param mid The number in the middle.
     * @param target The ending number.
     * @return A number t such that lerp(source, target, t) = mid.
     */ static intercept(source, mid, target) {
        return (mid - source) / (target - source);
    }
    static lerpPoint(source, t, target) {
        return [
            source[0] + (target[0] - source[0]) * t,
            source[1] + (target[1] - source[1]) * t,
            source[2] + (target[2] - source[2]) * t
        ];
    }
    /**
     * Intersects a segment with a plane.
     *
     * @param source The coordinates of point A.
     * @param coordinate The R-, G-, or B-coordinate of the plane.
     * @param target The coordinates of point B.
     * @param axis The axis the plane is perpendicular with. (0: R, 1:
     * G, 2: B)
     * @return The intersection point of the segment AB with the plane
     * R=coordinate, G=coordinate, or B=coordinate
     */ static setCoordinate(source, coordinate, target, axis) {
        const t = HctSolver.intercept(source[axis], coordinate, target[axis]);
        return HctSolver.lerpPoint(source, t, target);
    }
    static isBounded(x) {
        return 0.0 <= x && x <= 100.0;
    }
    /**
     * Returns the nth possible vertex of the polygonal intersection.
     *
     * @param y The Y value of the plane.
     * @param n The zero-based index of the point. 0 <= n <= 11.
     * @return The nth possible vertex of the polygonal intersection
     * of the y plane and the RGB cube, in linear RGB coordinates, if
     * it exists. If this possible vertex lies outside of the cube,
     * [-1.0, -1.0, -1.0] is returned.
     */ static nthVertex(y, n) {
        const kR = HctSolver.Y_FROM_LINRGB[0];
        const kG = HctSolver.Y_FROM_LINRGB[1];
        const kB = HctSolver.Y_FROM_LINRGB[2];
        const coordA = n % 4 <= 1 ? 0.0 : 100.0;
        const coordB = n % 2 === 0 ? 0.0 : 100.0;
        if (n < 4) {
            const g = coordA;
            const b = coordB;
            const r = (y - g * kG - b * kB) / kR;
            if (HctSolver.isBounded(r)) return [
                r,
                g,
                b
            ];
            else return [
                -1,
                -1,
                -1
            ];
        } else if (n < 8) {
            const b = coordA;
            const r = coordB;
            const g = (y - r * kR - b * kB) / kG;
            if (HctSolver.isBounded(g)) return [
                r,
                g,
                b
            ];
            else return [
                -1,
                -1,
                -1
            ];
        } else {
            const r = coordA;
            const g = coordB;
            const b = (y - r * kR - g * kG) / kB;
            if (HctSolver.isBounded(b)) return [
                r,
                g,
                b
            ];
            else return [
                -1,
                -1,
                -1
            ];
        }
    }
    /**
     * Finds the segment containing the desired color.
     *
     * @param y The Y value of the color.
     * @param targetHue The hue of the color.
     * @return A list of two sets of linear RGB coordinates, each
     * corresponding to an endpoint of the segment containing the
     * desired color.
     */ static bisectToSegment(y, targetHue) {
        let left = [
            -1,
            -1,
            -1
        ];
        let right = left;
        let leftHue = 0.0;
        let rightHue = 0.0;
        let initialized = false;
        let uncut = true;
        for(let n = 0; n < 12; n++){
            const mid = HctSolver.nthVertex(y, n);
            if (mid[0] < 0) continue;
            const midHue = HctSolver.hueOf(mid);
            if (!initialized) {
                left = mid;
                right = mid;
                leftHue = midHue;
                rightHue = midHue;
                initialized = true;
                continue;
            }
            if (uncut || HctSolver.areInCyclicOrder(leftHue, midHue, rightHue)) {
                uncut = false;
                if (HctSolver.areInCyclicOrder(leftHue, targetHue, midHue)) {
                    right = mid;
                    rightHue = midHue;
                } else {
                    left = mid;
                    leftHue = midHue;
                }
            }
        }
        return [
            left,
            right
        ];
    }
    static midpoint(a, b) {
        return [
            (a[0] + b[0]) / 2,
            (a[1] + b[1]) / 2,
            (a[2] + b[2]) / 2
        ];
    }
    static criticalPlaneBelow(x) {
        return Math.floor(x - 0.5);
    }
    static criticalPlaneAbove(x) {
        return Math.ceil(x - 0.5);
    }
    /**
     * Finds a color with the given Y and hue on the boundary of the
     * cube.
     *
     * @param y The Y value of the color.
     * @param targetHue The hue of the color.
     * @return The desired color, in linear RGB coordinates.
     */ static bisectToLimit(y, targetHue) {
        const segment = HctSolver.bisectToSegment(y, targetHue);
        let left = segment[0];
        let leftHue = HctSolver.hueOf(left);
        let right = segment[1];
        for(let axis = 0; axis < 3; axis++)if (left[axis] !== right[axis]) {
            let lPlane = -1;
            let rPlane = 255;
            if (left[axis] < right[axis]) {
                lPlane = HctSolver.criticalPlaneBelow(HctSolver.trueDelinearized(left[axis]));
                rPlane = HctSolver.criticalPlaneAbove(HctSolver.trueDelinearized(right[axis]));
            } else {
                lPlane = HctSolver.criticalPlaneAbove(HctSolver.trueDelinearized(left[axis]));
                rPlane = HctSolver.criticalPlaneBelow(HctSolver.trueDelinearized(right[axis]));
            }
            for(let i = 0; i < 8; i++){
                if (Math.abs(rPlane - lPlane) <= 1) break;
                else {
                    const mPlane = Math.floor((lPlane + rPlane) / 2.0);
                    const midPlaneCoordinate = HctSolver.CRITICAL_PLANES[mPlane];
                    const mid = HctSolver.setCoordinate(left, midPlaneCoordinate, right, axis);
                    const midHue = HctSolver.hueOf(mid);
                    if (HctSolver.areInCyclicOrder(leftHue, targetHue, midHue)) {
                        right = mid;
                        rPlane = mPlane;
                    } else {
                        left = mid;
                        leftHue = midHue;
                        lPlane = mPlane;
                    }
                }
            }
        }
        return HctSolver.midpoint(left, right);
    }
    static inverseChromaticAdaptation(adapted) {
        const adaptedAbs = Math.abs(adapted);
        const base = Math.max(0, 27.13 * adaptedAbs / (400.0 - adaptedAbs));
        return _mathUtilsJs.signum(adapted) * Math.pow(base, 1.0 / 0.42);
    }
    /**
     * Finds a color with the given hue, chroma, and Y.
     *
     * @param hueRadians The desired hue in radians.
     * @param chroma The desired chroma.
     * @param y The desired Y.
     * @return The desired color as a hexadecimal integer, if found; 0
     * otherwise.
     */ static findResultByJ(hueRadians, chroma, y) {
        // Initial estimate of j.
        let j = Math.sqrt(y) * 11.0;
        // ===========================================================
        // Operations inlined from Cam16 to avoid repeated calculation
        // ===========================================================
        const viewingConditions = (0, _viewingConditionsJs.ViewingConditions).DEFAULT;
        const tInnerCoeff = 1 / Math.pow(1.64 - Math.pow(0.29, viewingConditions.n), 0.73);
        const eHue = 0.25 * (Math.cos(hueRadians + 2.0) + 3.8);
        const p1 = eHue * (50000.0 / 13.0) * viewingConditions.nc * viewingConditions.ncb;
        const hSin = Math.sin(hueRadians);
        const hCos = Math.cos(hueRadians);
        for(let iterationRound = 0; iterationRound < 5; iterationRound++){
            // ===========================================================
            // Operations inlined from Cam16 to avoid repeated calculation
            // ===========================================================
            const jNormalized = j / 100.0;
            const alpha = chroma === 0.0 || j === 0.0 ? 0.0 : chroma / Math.sqrt(jNormalized);
            const t = Math.pow(alpha * tInnerCoeff, 1.0 / 0.9);
            const ac = viewingConditions.aw * Math.pow(jNormalized, 1.0 / viewingConditions.c / viewingConditions.z);
            const p2 = ac / viewingConditions.nbb;
            const gamma = 23.0 * (p2 + 0.305) * t / (23.0 * p1 + 11 * t * hCos + 108.0 * t * hSin);
            const a = gamma * hCos;
            const b = gamma * hSin;
            const rA = (460.0 * p2 + 451.0 * a + 288.0 * b) / 1403.0;
            const gA = (460.0 * p2 - 891.0 * a - 261.0 * b) / 1403.0;
            const bA = (460.0 * p2 - 220.0 * a - 6300.0 * b) / 1403.0;
            const rCScaled = HctSolver.inverseChromaticAdaptation(rA);
            const gCScaled = HctSolver.inverseChromaticAdaptation(gA);
            const bCScaled = HctSolver.inverseChromaticAdaptation(bA);
            const linrgb = _mathUtilsJs.matrixMultiply([
                rCScaled,
                gCScaled,
                bCScaled
            ], HctSolver.LINRGB_FROM_SCALED_DISCOUNT);
            // ===========================================================
            // Operations inlined from Cam16 to avoid repeated calculation
            // ===========================================================
            if (linrgb[0] < 0 || linrgb[1] < 0 || linrgb[2] < 0) return 0;
            const kR = HctSolver.Y_FROM_LINRGB[0];
            const kG = HctSolver.Y_FROM_LINRGB[1];
            const kB = HctSolver.Y_FROM_LINRGB[2];
            const fnj = kR * linrgb[0] + kG * linrgb[1] + kB * linrgb[2];
            if (fnj <= 0) return 0;
            if (iterationRound === 4 || Math.abs(fnj - y) < 0.002) {
                if (linrgb[0] > 100.01 || linrgb[1] > 100.01 || linrgb[2] > 100.01) return 0;
                return _colorUtilsJs.argbFromLinrgb(linrgb);
            }
            // Iterates with Newton method,
            // Using 2 * fn(j) / j as the approximation of fn'(j)
            j = j - (fnj - y) * j / (2 * fnj);
        }
        return 0;
    }
    /**
     * Finds an sRGB color with the given hue, chroma, and L*, if
     * possible.
     *
     * @param hueDegrees The desired hue, in degrees.
     * @param chroma The desired chroma.
     * @param lstar The desired L*.
     * @return A hexadecimal representing the sRGB color. The color
     * has sufficiently close hue, chroma, and L* to the desired
     * values, if possible; otherwise, the hue and L* will be
     * sufficiently close, and chroma will be maximized.
     */ static solveToInt(hueDegrees, chroma, lstar) {
        if (chroma < 0.0001 || lstar < 0.0001 || lstar > 99.9999) return _colorUtilsJs.argbFromLstar(lstar);
        hueDegrees = _mathUtilsJs.sanitizeDegreesDouble(hueDegrees);
        const hueRadians = hueDegrees / 180 * Math.PI;
        const y = _colorUtilsJs.yFromLstar(lstar);
        const exactAnswer = HctSolver.findResultByJ(hueRadians, chroma, y);
        if (exactAnswer !== 0) return exactAnswer;
        const linrgb = HctSolver.bisectToLimit(y, hueRadians);
        return _colorUtilsJs.argbFromLinrgb(linrgb);
    }
    /**
     * Finds an sRGB color with the given hue, chroma, and L*, if
     * possible.
     *
     * @param hueDegrees The desired hue, in degrees.
     * @param chroma The desired chroma.
     * @param lstar The desired L*.
     * @return An CAM16 object representing the sRGB color. The color
     * has sufficiently close hue, chroma, and L* to the desired
     * values, if possible; otherwise, the hue and L* will be
     * sufficiently close, and chroma will be maximized.
     */ static solveToCam(hueDegrees, chroma, lstar) {
        return (0, _cam16Js.Cam16).fromInt(HctSolver.solveToInt(hueDegrees, chroma, lstar));
    }
}
HctSolver.SCALED_DISCOUNT_FROM_LINRGB = [
    [
        0.001200833568784504,
        0.002389694492170889,
        0.0002795742885861124
    ],
    [
        0.0005891086651375999,
        0.0029785502573438758,
        0.0003270666104008398
    ],
    [
        0.00010146692491640572,
        0.0005364214359186694,
        0.0032979401770712076
    ]
];
HctSolver.LINRGB_FROM_SCALED_DISCOUNT = [
    [
        1373.2198709594231,
        -1100.4251190754821,
        -7.278681089101213
    ],
    [
        -271.815969077903,
        559.6580465940733,
        -32.46047482791194
    ],
    [
        1.9622899599665666,
        -57.173814538844006,
        308.7233197812385
    ]
];
HctSolver.Y_FROM_LINRGB = [
    0.2126,
    0.7152,
    0.0722
];
HctSolver.CRITICAL_PLANES = [
    0.015176349177441876,
    0.045529047532325624,
    0.07588174588720938,
    0.10623444424209313,
    0.13658714259697685,
    0.16693984095186062,
    0.19729253930674434,
    0.2276452376616281,
    0.2579979360165119,
    0.28835063437139563,
    0.3188300904430532,
    0.350925934958123,
    0.3848314933096426,
    0.42057480301049466,
    0.458183274052838,
    0.4976837250274023,
    0.5391024159806381,
    0.5824650784040898,
    0.6277969426914107,
    0.6751227633498623,
    0.7244668422128921,
    0.775853049866786,
    0.829304845476233,
    0.8848452951698498,
    0.942497089126609,
    1.0022825574869039,
    1.0642236851973577,
    1.1283421258858297,
    1.1946592148522128,
    1.2631959812511864,
    1.3339731595349034,
    1.407011200216447,
    1.4823302800086415,
    1.5599503113873272,
    1.6398909516233677,
    1.7221716113234105,
    1.8068114625156377,
    1.8938294463134073,
    1.9832442801866852,
    2.075074464868551,
    2.1693382909216234,
    2.2660538449872063,
    2.36523901573795,
    2.4669114995532007,
    2.5710888059345764,
    2.6777882626779785,
    2.7870270208169257,
    2.898822059350997,
    3.0131901897720907,
    3.1301480604002863,
    3.2497121605402226,
    3.3718988244681087,
    3.4967242352587946,
    3.624204428461639,
    3.754355295633311,
    3.887192587735158,
    4.022731918402185,
    4.160988767090289,
    4.301978482107941,
    4.445716283538092,
    4.592217266055746,
    4.741496401646282,
    4.893568542229298,
    5.048448422192488,
    5.20615066083972,
    5.3666897647573375,
    5.5300801301023865,
    5.696336044816294,
    5.865471690767354,
    6.037501145825082,
    6.212438385869475,
    6.390297286737924,
    6.571091626112461,
    6.7548350853498045,
    6.941541251256611,
    7.131223617812143,
    7.323895587840543,
    7.5195704746346665,
    7.7182615035334345,
    7.919981813454504,
    8.124744458384042,
    8.332562408825165,
    8.543448553206703,
    8.757415699253682,
    8.974476575321063,
    9.194643831691977,
    9.417930041841839,
    9.644347703669503,
    9.873909240696694,
    10.106627003236781,
    10.342513269534024,
    10.58158024687427,
    10.8238400726681,
    11.069304815507364,
    11.317986476196008,
    11.569896988756009,
    11.825048221409341,
    12.083451977536606,
    12.345119996613247,
    12.610063955123938,
    12.878295467455942,
    13.149826086772048,
    13.42466730586372,
    13.702830557985108,
    13.984327217668513,
    14.269168601521828,
    14.55736596900856,
    14.848930523210871,
    15.143873411576273,
    15.44220572664832,
    15.743938506781891,
    16.04908273684337,
    16.35764934889634,
    16.66964922287304,
    16.985093187232053,
    17.30399201960269,
    17.62635644741625,
    17.95219714852476,
    18.281524751807332,
    18.614349837764564,
    18.95068293910138,
    19.290534541298456,
    19.633915083172692,
    19.98083495742689,
    20.331304511189067,
    20.685334046541502,
    21.042933821039977,
    21.404114048223256,
    21.76888489811322,
    22.137256497705877,
    22.50923893145328,
    22.884842241736916,
    23.264076429332462,
    23.6469514538663,
    24.033477234264016,
    24.42366364919083,
    24.817520537484558,
    25.21505769858089,
    25.61628489293138,
    26.021211842414342,
    26.429848230738664,
    26.842203703840827,
    27.258287870275353,
    27.678110301598522,
    28.10168053274597,
    28.529008062403893,
    28.96010235337422,
    29.39497283293396,
    29.83362889318845,
    30.276079891419332,
    30.722335150426627,
    31.172403958865512,
    31.62629557157785,
    32.08401920991837,
    32.54558406207592,
    33.010999283389665,
    33.4802739966603,
    33.953417292456834,
    34.430438229418264,
    34.911345834551085,
    35.39614910352207,
    35.88485700094671,
    36.37747846067349,
    36.87402238606382,
    37.37449765026789,
    37.87891309649659,
    38.38727753828926,
    38.89959975977785,
    39.41588851594697,
    39.93615253289054,
    40.460400508064545,
    40.98864111053629,
    41.520882981230194,
    42.05713473317016,
    42.597404951718396,
    43.141702194811224,
    43.6900349931913,
    44.24241185063697,
    44.798841244188324,
    45.35933162437017,
    45.92389141541209,
    46.49252901546552,
    47.065252796817916,
    47.64207110610409,
    48.22299226451468,
    48.808024568002054,
    49.3971762874833,
    49.9904556690408,
    50.587870934119984,
    51.189430279724725,
    51.79514187861014,
    52.40501387947288,
    53.0190544071392,
    53.637271562750364,
    54.259673423945976,
    54.88626804504493,
    55.517063457223934,
    56.15206766869424,
    56.79128866487574,
    57.43473440856916,
    58.08241284012621,
    58.734331877617365,
    59.39049941699807,
    60.05092333227251,
    60.715611475655585,
    61.38457167773311,
    62.057811747619894,
    62.7353394731159,
    63.417162620860914,
    64.10328893648692,
    64.79372614476921,
    65.48848194977529,
    66.18756403501224,
    66.89098006357258,
    67.59873767827808,
    68.31084450182222,
    69.02730813691093,
    69.74813616640164,
    70.47333615344107,
    71.20291564160104,
    71.93688215501312,
    72.67524319850172,
    73.41800625771542,
    74.16517879925733,
    74.9167682708136,
    75.67278210128072,
    76.43322770089146,
    77.1981124613393,
    77.96744375590167,
    78.74122893956174,
    79.51947534912904,
    80.30219030335869,
    81.08938110306934,
    81.88105503125999,
    82.67721935322541,
    83.4778813166706,
    84.28304815182372,
    85.09272707154808,
    85.90692527145302,
    86.72564993000343,
    87.54890820862819,
    88.3767072518277,
    89.2090541872801,
    90.04595612594655,
    90.88742016217518,
    91.73345337380438,
    92.58406282226491,
    93.43925555268066,
    94.29903859396902,
    95.16341895893969,
    96.03240364439274,
    96.9059996312159,
    97.78421388448044,
    98.6670533535366,
    99.55452497210776
];

},{"../utils/color_utils.js":"jxfKg","../utils/math_utils.js":"kq6dU","./cam16.js":"h74AD","./viewing_conditions.js":"fTNIb","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"d6oG9":[function(require,module,exports) {
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ // material_color_utilities is designed to have a consistent API across
// platforms and modular components that can be moved around easily. Using a
// class as a namespace facilitates this.
//
// tslint:disable:class-as-namespace
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Utility methods for calculating contrast given two colors, or calculating a
 * color given one color and a contrast ratio.
 *
 * Contrast ratio is calculated using XYZ's Y. When linearized to match human
 * perception, Y becomes HCT's tone and L*a*b*'s' L*. Informally, this is the
 * lightness of a color.
 *
 * Methods refer to tone, T in the the HCT color space.
 * Tone is equivalent to L* in the L*a*b* color space, or L in the LCH color
 * space.
 */ parcelHelpers.export(exports, "Contrast", ()=>Contrast);
var _colorUtilsJs = require("../utils/color_utils.js");
var _mathUtilsJs = require("../utils/math_utils.js");
class Contrast {
    /**
     * Returns a contrast ratio, which ranges from 1 to 21.
     *
     * @param toneA Tone between 0 and 100. Values outside will be clamped.
     * @param toneB Tone between 0 and 100. Values outside will be clamped.
     */ static ratioOfTones(toneA, toneB) {
        toneA = _mathUtilsJs.clampDouble(0.0, 100.0, toneA);
        toneB = _mathUtilsJs.clampDouble(0.0, 100.0, toneB);
        return Contrast.ratioOfYs(_colorUtilsJs.yFromLstar(toneA), _colorUtilsJs.yFromLstar(toneB));
    }
    static ratioOfYs(y1, y2) {
        const lighter = y1 > y2 ? y1 : y2;
        const darker = lighter === y2 ? y1 : y2;
        return (lighter + 5.0) / (darker + 5.0);
    }
    /**
     * Returns a tone >= tone parameter that ensures ratio parameter.
     * Return value is between 0 and 100.
     * Returns -1 if ratio cannot be achieved with tone parameter.
     *
     * @param tone Tone return value must contrast with.
     * Range is 0 to 100. Invalid values will result in -1 being returned.
     * @param ratio Contrast ratio of return value and tone.
     * Range is 1 to 21, invalid values have undefined behavior.
     */ static lighter(tone, ratio) {
        if (tone < 0.0 || tone > 100.0) return -1;
        const darkY = _colorUtilsJs.yFromLstar(tone);
        const lightY = ratio * (darkY + 5.0) - 5.0;
        const realContrast = Contrast.ratioOfYs(lightY, darkY);
        const delta = Math.abs(realContrast - ratio);
        if (realContrast < ratio && delta > 0.04) return -1;
        // Ensure gamut mapping, which requires a 'range' on tone, will still result
        // the correct ratio by darkening slightly.
        const returnValue = _colorUtilsJs.lstarFromY(lightY) + 0.4;
        if (returnValue < 0 || returnValue > 100) return -1;
        return returnValue;
    }
    /**
     * Returns a tone <= tone parameter that ensures ratio parameter.
     * Return value is between 0 and 100.
     * Returns -1 if ratio cannot be achieved with tone parameter.
     *
     * @param tone Tone return value must contrast with.
     * Range is 0 to 100. Invalid values will result in -1 being returned.
     * @param ratio Contrast ratio of return value and tone.
     * Range is 1 to 21, invalid values have undefined behavior.
     */ static darker(tone, ratio) {
        if (tone < 0.0 || tone > 100.0) return -1;
        const lightY = _colorUtilsJs.yFromLstar(tone);
        const darkY = (lightY + 5.0) / ratio - 5.0;
        const realContrast = Contrast.ratioOfYs(lightY, darkY);
        const delta = Math.abs(realContrast - ratio);
        if (realContrast < ratio && delta > 0.04) return -1;
        // Ensure gamut mapping, which requires a 'range' on tone, will still result
        // the correct ratio by darkening slightly.
        const returnValue = _colorUtilsJs.lstarFromY(darkY) - 0.4;
        if (returnValue < 0 || returnValue > 100) return -1;
        return returnValue;
    }
    /**
     * Returns a tone >= tone parameter that ensures ratio parameter.
     * Return value is between 0 and 100.
     * Returns 100 if ratio cannot be achieved with tone parameter.
     *
     * This method is unsafe because the returned value is guaranteed to be in
     * bounds for tone, i.e. between 0 and 100. However, that value may not reach
     * the ratio with tone. For example, there is no color lighter than T100.
     *
     * @param tone Tone return value must contrast with.
     * Range is 0 to 100. Invalid values will result in 100 being returned.
     * @param ratio Desired contrast ratio of return value and tone parameter.
     * Range is 1 to 21, invalid values have undefined behavior.
     */ static lighterUnsafe(tone, ratio) {
        const lighterSafe = Contrast.lighter(tone, ratio);
        return lighterSafe < 0.0 ? 100.0 : lighterSafe;
    }
    /**
     * Returns a tone >= tone parameter that ensures ratio parameter.
     * Return value is between 0 and 100.
     * Returns 100 if ratio cannot be achieved with tone parameter.
     *
     * This method is unsafe because the returned value is guaranteed to be in
     * bounds for tone, i.e. between 0 and 100. However, that value may not reach
     * the [ratio with [tone]. For example, there is no color darker than T0.
     *
     * @param tone Tone return value must contrast with.
     * Range is 0 to 100. Invalid values will result in 0 being returned.
     * @param ratio Desired contrast ratio of return value and tone parameter.
     * Range is 1 to 21, invalid values have undefined behavior.
     */ static darkerUnsafe(tone, ratio) {
        const darkerSafe = Contrast.darker(tone, ratio);
        return darkerSafe < 0.0 ? 0.0 : darkerSafe;
    }
}

},{"../utils/color_utils.js":"jxfKg","../utils/math_utils.js":"kq6dU","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1E0jW":[function(require,module,exports) {
/**
 * @license
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// material_color_utilities is designed to have a consistent API across
// platforms and modular components that can be moved around easily. Using a
// class as a namespace facilitates this.
//
// tslint:disable:class-as-namespace
/**
 * Check and/or fix universally disliked colors.
 * Color science studies of color preference indicate universal distaste for
 * dark yellow-greens, and also show this is correlated to distate for
 * biological waste and rotting food.
 *
 * See Palmer and Schloss, 2010 or Schloss and Palmer's Chapter 21 in Handbook
 * of Color Psychology (2015).
 */ parcelHelpers.export(exports, "DislikeAnalyzer", ()=>DislikeAnalyzer);
var _hctJs = require("../hct/hct.js");
class DislikeAnalyzer {
    /**
     * Returns true if a color is disliked.
     *
     * @param hct A color to be judged.
     * @return Whether the color is disliked.
     *
     * Disliked is defined as a dark yellow-green that is not neutral.
     */ static isDisliked(hct) {
        const huePasses = Math.round(hct.hue) >= 90.0 && Math.round(hct.hue) <= 111.0;
        const chromaPasses = Math.round(hct.chroma) > 16.0;
        const tonePasses = Math.round(hct.tone) < 65.0;
        return huePasses && chromaPasses && tonePasses;
    }
    /**
     * If a color is disliked, lighten it to make it likable.
     *
     * @param hct A color to be judged.
     * @return A new color if the original color is disliked, or the original
     *   color if it is acceptable.
     */ static fixIfDisliked(hct) {
        if (DislikeAnalyzer.isDisliked(hct)) return (0, _hctJs.Hct).from(hct.hue, hct.chroma, 70.0);
        return hct;
    }
}

},{"../hct/hct.js":"kZFIY","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"euwDW":[function(require,module,exports) {
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * A color that adjusts itself based on UI state provided by DynamicScheme.
 *
 * Colors without backgrounds do not change tone when contrast changes. Colors
 * with backgrounds become closer to their background as contrast lowers, and
 * further when contrast increases.
 *
 * Prefer static constructors. They require either a hexcode, a palette and
 * tone, or a hue and chroma. Optionally, they can provide a background
 * DynamicColor.
 */ parcelHelpers.export(exports, "DynamicColor", ()=>DynamicColor);
var _contrastJs = require("../contrast/contrast.js");
var _mathUtilsJs = require("../utils/math_utils.js");
class DynamicColor {
    /**
     * Create a DynamicColor defined by a TonalPalette and HCT tone.
     *
     * @param args Functions with DynamicScheme as input. Must provide a palette
     * and tone. May provide a background DynamicColor and ToneDeltaConstraint.
     */ static fromPalette(args) {
        return new DynamicColor(args.name ?? "", args.palette, args.tone, args.isBackground ?? false, args.background, args.secondBackground, args.contrastCurve, args.toneDeltaPair);
    }
    /**
     * The base constructor for DynamicColor.
     *
     * _Strongly_ prefer using one of the convenience constructors. This class is
     * arguably too flexible to ensure it can support any scenario. Functional
     * arguments allow  overriding without risks that come with subclasses.
     *
     * For example, the default behavior of adjust tone at max contrast
     * to be at a 7.0 ratio with its background is principled and
     * matches accessibility guidance. That does not mean it's the desired
     * approach for _every_ design system, and every color pairing,
     * always, in every case.
     *
     * @param name The name of the dynamic color. Defaults to empty.
     * @param palette Function that provides a TonalPalette given
     * DynamicScheme. A TonalPalette is defined by a hue and chroma, so this
     * replaces the need to specify hue/chroma. By providing a tonal palette, when
     * contrast adjustments are made, intended chroma can be preserved.
     * @param tone Function that provides a tone, given a DynamicScheme.
     * @param isBackground Whether this dynamic color is a background, with
     * some other color as the foreground. Defaults to false.
     * @param background The background of the dynamic color (as a function of a
     *     `DynamicScheme`), if it exists.
     * @param secondBackground A second background of the dynamic color (as a
     *     function of a `DynamicScheme`), if it
     * exists.
     * @param contrastCurve A `ContrastCurve` object specifying how its contrast
     * against its background should behave in various contrast levels options.
     * @param toneDeltaPair A `ToneDeltaPair` object specifying a tone delta
     * constraint between two colors. One of them must be the color being
     * constructed.
     */ constructor(name, palette, tone, isBackground, background, secondBackground, contrastCurve, toneDeltaPair){
        this.name = name;
        this.palette = palette;
        this.tone = tone;
        this.isBackground = isBackground;
        this.background = background;
        this.secondBackground = secondBackground;
        this.contrastCurve = contrastCurve;
        this.toneDeltaPair = toneDeltaPair;
        this.hctCache = new Map();
        if (!background && secondBackground) throw new Error(`Color ${name} has secondBackground` + `defined, but background is not defined.`);
        if (!background && contrastCurve) throw new Error(`Color ${name} has contrastCurve` + `defined, but background is not defined.`);
        if (background && !contrastCurve) throw new Error(`Color ${name} has background` + `defined, but contrastCurve is not defined.`);
    }
    /**
     * Return a ARGB integer (i.e. a hex code).
     *
     * @param scheme Defines the conditions of the user interface, for example,
     * whether or not it is dark mode or light mode, and what the desired
     * contrast level is.
     */ getArgb(scheme) {
        return this.getHct(scheme).toInt();
    }
    /**
     * Return a color, expressed in the HCT color space, that this
     * DynamicColor is under the conditions in scheme.
     *
     * @param scheme Defines the conditions of the user interface, for example,
     * whether or not it is dark mode or light mode, and what the desired
     * contrast level is.
     */ getHct(scheme) {
        const cachedAnswer = this.hctCache.get(scheme);
        if (cachedAnswer != null) return cachedAnswer;
        const tone = this.getTone(scheme);
        const answer = this.palette(scheme).getHct(tone);
        if (this.hctCache.size > 4) this.hctCache.clear();
        this.hctCache.set(scheme, answer);
        return answer;
    }
    /**
     * Return a tone, T in the HCT color space, that this DynamicColor is under
     * the conditions in scheme.
     *
     * @param scheme Defines the conditions of the user interface, for example,
     * whether or not it is dark mode or light mode, and what the desired
     * contrast level is.
     */ getTone(scheme) {
        const decreasingContrast = scheme.contrastLevel < 0;
        // Case 1: dual foreground, pair of colors with delta constraint.
        if (this.toneDeltaPair) {
            const toneDeltaPair = this.toneDeltaPair(scheme);
            const roleA = toneDeltaPair.roleA;
            const roleB = toneDeltaPair.roleB;
            const delta = toneDeltaPair.delta;
            const polarity = toneDeltaPair.polarity;
            const stayTogether = toneDeltaPair.stayTogether;
            const bg = this.background(scheme);
            const bgTone = bg.getTone(scheme);
            const aIsNearer = polarity === "nearer" || polarity === "lighter" && !scheme.isDark || polarity === "darker" && scheme.isDark;
            const nearer = aIsNearer ? roleA : roleB;
            const farther = aIsNearer ? roleB : roleA;
            const amNearer = this.name === nearer.name;
            const expansionDir = scheme.isDark ? 1 : -1;
            // 1st round: solve to min, each
            const nContrast = nearer.contrastCurve.getContrast(scheme.contrastLevel);
            const fContrast = farther.contrastCurve.getContrast(scheme.contrastLevel);
            // If a color is good enough, it is not adjusted.
            // Initial and adjusted tones for `nearer`
            const nInitialTone = nearer.tone(scheme);
            let nTone = (0, _contrastJs.Contrast).ratioOfTones(bgTone, nInitialTone) >= nContrast ? nInitialTone : DynamicColor.foregroundTone(bgTone, nContrast);
            // Initial and adjusted tones for `farther`
            const fInitialTone = farther.tone(scheme);
            let fTone = (0, _contrastJs.Contrast).ratioOfTones(bgTone, fInitialTone) >= fContrast ? fInitialTone : DynamicColor.foregroundTone(bgTone, fContrast);
            if (decreasingContrast) {
                // If decreasing contrast, adjust color to the "bare minimum"
                // that satisfies contrast.
                nTone = DynamicColor.foregroundTone(bgTone, nContrast);
                fTone = DynamicColor.foregroundTone(bgTone, fContrast);
            }
            if ((fTone - nTone) * expansionDir >= delta) ;
            else {
                // 2nd round: expand farther to match delta.
                fTone = _mathUtilsJs.clampDouble(0, 100, nTone + delta * expansionDir);
                if ((fTone - nTone) * expansionDir >= delta) ;
                else // 3rd round: contract nearer to match delta.
                nTone = _mathUtilsJs.clampDouble(0, 100, fTone - delta * expansionDir);
            }
            // Avoids the 50-59 awkward zone.
            if (50 <= nTone && nTone < 60) {
                // If `nearer` is in the awkward zone, move it away, together with
                // `farther`.
                if (expansionDir > 0) {
                    nTone = 60;
                    fTone = Math.max(fTone, nTone + delta * expansionDir);
                } else {
                    nTone = 49;
                    fTone = Math.min(fTone, nTone + delta * expansionDir);
                }
            } else if (50 <= fTone && fTone < 60) {
                if (stayTogether) {
                    // Fixes both, to avoid two colors on opposite sides of the "awkward
                    // zone".
                    if (expansionDir > 0) {
                        nTone = 60;
                        fTone = Math.max(fTone, nTone + delta * expansionDir);
                    } else {
                        nTone = 49;
                        fTone = Math.min(fTone, nTone + delta * expansionDir);
                    }
                } else // Not required to stay together; fixes just one.
                if (expansionDir > 0) fTone = 60;
                else fTone = 49;
            }
            // Returns `nTone` if this color is `nearer`, otherwise `fTone`.
            return amNearer ? nTone : fTone;
        } else {
            // Case 2: No contrast pair; just solve for itself.
            let answer = this.tone(scheme);
            if (this.background == null) return answer; // No adjustment for colors with no background.
            const bgTone = this.background(scheme).getTone(scheme);
            const desiredRatio = this.contrastCurve.getContrast(scheme.contrastLevel);
            if ((0, _contrastJs.Contrast).ratioOfTones(bgTone, answer) >= desiredRatio) ;
            else // Rough improvement.
            answer = DynamicColor.foregroundTone(bgTone, desiredRatio);
            if (decreasingContrast) answer = DynamicColor.foregroundTone(bgTone, desiredRatio);
            if (this.isBackground && 50 <= answer && answer < 60) {
                // Must adjust
                if ((0, _contrastJs.Contrast).ratioOfTones(49, bgTone) >= desiredRatio) answer = 49;
                else answer = 60;
            }
            if (this.secondBackground) {
                // Case 3: Adjust for dual backgrounds.
                const [bg1, bg2] = [
                    this.background,
                    this.secondBackground
                ];
                const [bgTone1, bgTone2] = [
                    bg1(scheme).getTone(scheme),
                    bg2(scheme).getTone(scheme)
                ];
                const [upper, lower] = [
                    Math.max(bgTone1, bgTone2),
                    Math.min(bgTone1, bgTone2)
                ];
                if ((0, _contrastJs.Contrast).ratioOfTones(upper, answer) >= desiredRatio && (0, _contrastJs.Contrast).ratioOfTones(lower, answer) >= desiredRatio) return answer;
                // The darkest light tone that satisfies the desired ratio,
                // or -1 if such ratio cannot be reached.
                const lightOption = (0, _contrastJs.Contrast).lighter(upper, desiredRatio);
                // The lightest dark tone that satisfies the desired ratio,
                // or -1 if such ratio cannot be reached.
                const darkOption = (0, _contrastJs.Contrast).darker(lower, desiredRatio);
                // Tones suitable for the foreground.
                const availables = [];
                if (lightOption !== -1) availables.push(lightOption);
                if (darkOption !== -1) availables.push(darkOption);
                const prefersLight = DynamicColor.tonePrefersLightForeground(bgTone1) || DynamicColor.tonePrefersLightForeground(bgTone2);
                if (prefersLight) return lightOption < 0 ? 100 : lightOption;
                if (availables.length === 1) return availables[0];
                return darkOption < 0 ? 0 : darkOption;
            }
            return answer;
        }
    }
    /**
     * Given a background tone, find a foreground tone, while ensuring they reach
     * a contrast ratio that is as close to [ratio] as possible.
     *
     * @param bgTone Tone in HCT. Range is 0 to 100, undefined behavior when it
     *     falls outside that range.
     * @param ratio The contrast ratio desired between bgTone and the return
     *     value.
     */ static foregroundTone(bgTone, ratio) {
        const lighterTone = (0, _contrastJs.Contrast).lighterUnsafe(bgTone, ratio);
        const darkerTone = (0, _contrastJs.Contrast).darkerUnsafe(bgTone, ratio);
        const lighterRatio = (0, _contrastJs.Contrast).ratioOfTones(lighterTone, bgTone);
        const darkerRatio = (0, _contrastJs.Contrast).ratioOfTones(darkerTone, bgTone);
        const preferLighter = DynamicColor.tonePrefersLightForeground(bgTone);
        if (preferLighter) {
            // This handles an edge case where the initial contrast ratio is high
            // (ex. 13.0), and the ratio passed to the function is that high
            // ratio, and both the lighter and darker ratio fails to pass that
            // ratio.
            //
            // This was observed with Tonal Spot's On Primary Container turning
            // black momentarily between high and max contrast in light mode. PC's
            // standard tone was T90, OPC's was T10, it was light mode, and the
            // contrast value was 0.6568521221032331.
            const negligibleDifference = Math.abs(lighterRatio - darkerRatio) < 0.1 && lighterRatio < ratio && darkerRatio < ratio;
            return lighterRatio >= ratio || lighterRatio >= darkerRatio || negligibleDifference ? lighterTone : darkerTone;
        } else return darkerRatio >= ratio || darkerRatio >= lighterRatio ? darkerTone : lighterTone;
    }
    /**
     * Returns whether [tone] prefers a light foreground.
     *
     * People prefer white foregrounds on ~T60-70. Observed over time, and also
     * by Andrew Somers during research for APCA.
     *
     * T60 used as to create the smallest discontinuity possible when skipping
     * down to T49 in order to ensure light foregrounds.
     * Since `tertiaryContainer` in dark monochrome scheme requires a tone of
     * 60, it should not be adjusted. Therefore, 60 is excluded here.
     */ static tonePrefersLightForeground(tone) {
        return Math.round(tone) < 60.0;
    }
    /**
     * Returns whether [tone] can reach a contrast ratio of 4.5 with a lighter
     * color.
     */ static toneAllowsLightForeground(tone) {
        return Math.round(tone) <= 49.0;
    }
    /**
     * Adjust a tone such that white has 4.5 contrast, if the tone is
     * reasonably close to supporting it.
     */ static enableLightForeground(tone) {
        if (DynamicColor.tonePrefersLightForeground(tone) && !DynamicColor.toneAllowsLightForeground(tone)) return 49.0;
        return tone;
    }
}

},{"../contrast/contrast.js":"d6oG9","../utils/math_utils.js":"kq6dU","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gdRjA":[function(require,module,exports) {
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * DynamicColors for the colors in the Material Design system.
 */ // Material Color Utilities namespaces the various utilities it provides.
// tslint:disable-next-line:class-as-namespace
parcelHelpers.export(exports, "MaterialDynamicColors", ()=>MaterialDynamicColors);
var _dislikeAnalyzerJs = require("../dislike/dislike_analyzer.js");
var _hctJs = require("../hct/hct.js");
var _viewingConditionsJs = require("../hct/viewing_conditions.js");
var _variantJs = require("../scheme/variant.js");
var _contrastCurveJs = require("./contrast_curve.js");
var _dynamicColorJs = require("./dynamic_color.js");
var _toneDeltaPairJs = require("./tone_delta_pair.js");
function isFidelity(scheme) {
    return scheme.variant === (0, _variantJs.Variant).FIDELITY || scheme.variant === (0, _variantJs.Variant).CONTENT;
}
function isMonochrome(scheme) {
    return scheme.variant === (0, _variantJs.Variant).MONOCHROME;
}
function findDesiredChromaByTone(hue, chroma, tone, byDecreasingTone) {
    let answer = tone;
    let closestToChroma = (0, _hctJs.Hct).from(hue, chroma, tone);
    if (closestToChroma.chroma < chroma) {
        let chromaPeak = closestToChroma.chroma;
        while(closestToChroma.chroma < chroma){
            answer += byDecreasingTone ? -1 : 1.0;
            const potentialSolution = (0, _hctJs.Hct).from(hue, chroma, answer);
            if (chromaPeak > potentialSolution.chroma) break;
            if (Math.abs(potentialSolution.chroma - chroma) < 0.4) break;
            const potentialDelta = Math.abs(potentialSolution.chroma - chroma);
            const currentDelta = Math.abs(closestToChroma.chroma - chroma);
            if (potentialDelta < currentDelta) closestToChroma = potentialSolution;
            chromaPeak = Math.max(chromaPeak, potentialSolution.chroma);
        }
    }
    return answer;
}
function viewingConditionsForAlbers(scheme) {
    return (0, _viewingConditionsJs.ViewingConditions).make(/*whitePoint=*/ undefined, /*adaptingLuminance=*/ undefined, /*backgroundLstar=*/ scheme.isDark ? 30 : 80, /*surround=*/ undefined, /*discountingIlluminant=*/ undefined);
}
function performAlbers(prealbers, scheme) {
    const albersd = prealbers.inViewingConditions(viewingConditionsForAlbers(scheme));
    if ((0, _dynamicColorJs.DynamicColor).tonePrefersLightForeground(prealbers.tone) && !(0, _dynamicColorJs.DynamicColor).toneAllowsLightForeground(albersd.tone)) return (0, _dynamicColorJs.DynamicColor).enableLightForeground(prealbers.tone);
    else return (0, _dynamicColorJs.DynamicColor).enableLightForeground(albersd.tone);
}
class MaterialDynamicColors {
    static highestSurface(s) {
        return s.isDark ? MaterialDynamicColors.surfaceBright : MaterialDynamicColors.surfaceDim;
    }
}
MaterialDynamicColors.contentAccentToneDelta = 15.0;
MaterialDynamicColors.primaryPaletteKeyColor = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "primary_palette_key_color",
    palette: (s)=>s.primaryPalette,
    tone: (s)=>s.primaryPalette.keyColor.tone
});
MaterialDynamicColors.secondaryPaletteKeyColor = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "secondary_palette_key_color",
    palette: (s)=>s.secondaryPalette,
    tone: (s)=>s.secondaryPalette.keyColor.tone
});
MaterialDynamicColors.tertiaryPaletteKeyColor = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "tertiary_palette_key_color",
    palette: (s)=>s.tertiaryPalette,
    tone: (s)=>s.tertiaryPalette.keyColor.tone
});
MaterialDynamicColors.neutralPaletteKeyColor = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "neutral_palette_key_color",
    palette: (s)=>s.neutralPalette,
    tone: (s)=>s.neutralPalette.keyColor.tone
});
MaterialDynamicColors.neutralVariantPaletteKeyColor = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "neutral_variant_palette_key_color",
    palette: (s)=>s.neutralVariantPalette,
    tone: (s)=>s.neutralVariantPalette.keyColor.tone
});
MaterialDynamicColors.background = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "background",
    palette: (s)=>s.neutralPalette,
    tone: (s)=>s.isDark ? 6 : 98,
    isBackground: true
});
MaterialDynamicColors.onBackground = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "on_background",
    palette: (s)=>s.neutralPalette,
    tone: (s)=>s.isDark ? 90 : 10,
    background: (s)=>MaterialDynamicColors.background,
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(3, 3, 4.5, 7)
});
MaterialDynamicColors.surface = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "surface",
    palette: (s)=>s.neutralPalette,
    tone: (s)=>s.isDark ? 6 : 98,
    isBackground: true
});
MaterialDynamicColors.surfaceDim = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "surface_dim",
    palette: (s)=>s.neutralPalette,
    tone: (s)=>s.isDark ? 6 : 87,
    isBackground: true
});
MaterialDynamicColors.surfaceBright = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "surface_bright",
    palette: (s)=>s.neutralPalette,
    tone: (s)=>s.isDark ? 24 : 98,
    isBackground: true
});
MaterialDynamicColors.surfaceContainerLowest = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "surface_container_lowest",
    palette: (s)=>s.neutralPalette,
    tone: (s)=>s.isDark ? 4 : 100,
    isBackground: true
});
MaterialDynamicColors.surfaceContainerLow = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "surface_container_low",
    palette: (s)=>s.neutralPalette,
    tone: (s)=>s.isDark ? 10 : 96,
    isBackground: true
});
MaterialDynamicColors.surfaceContainer = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "surface_container",
    palette: (s)=>s.neutralPalette,
    tone: (s)=>s.isDark ? 12 : 94,
    isBackground: true
});
MaterialDynamicColors.surfaceContainerHigh = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "surface_container_high",
    palette: (s)=>s.neutralPalette,
    tone: (s)=>s.isDark ? 17 : 92,
    isBackground: true
});
MaterialDynamicColors.surfaceContainerHighest = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "surface_container_highest",
    palette: (s)=>s.neutralPalette,
    tone: (s)=>s.isDark ? 22 : 90,
    isBackground: true
});
MaterialDynamicColors.onSurface = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "on_surface",
    palette: (s)=>s.neutralPalette,
    tone: (s)=>s.isDark ? 90 : 10,
    background: (s)=>MaterialDynamicColors.highestSurface(s),
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(4.5, 7, 11, 21)
});
MaterialDynamicColors.surfaceVariant = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "surface_variant",
    palette: (s)=>s.neutralVariantPalette,
    tone: (s)=>s.isDark ? 30 : 90,
    isBackground: true
});
MaterialDynamicColors.onSurfaceVariant = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "on_surface_variant",
    palette: (s)=>s.neutralVariantPalette,
    tone: (s)=>s.isDark ? 80 : 30,
    background: (s)=>MaterialDynamicColors.highestSurface(s),
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(3, 4.5, 7, 11)
});
MaterialDynamicColors.inverseSurface = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "inverse_surface",
    palette: (s)=>s.neutralPalette,
    tone: (s)=>s.isDark ? 90 : 20
});
MaterialDynamicColors.inverseOnSurface = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "inverse_on_surface",
    palette: (s)=>s.neutralPalette,
    tone: (s)=>s.isDark ? 20 : 95,
    background: (s)=>MaterialDynamicColors.inverseSurface,
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(4.5, 7, 11, 21)
});
MaterialDynamicColors.outline = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "outline",
    palette: (s)=>s.neutralVariantPalette,
    tone: (s)=>s.isDark ? 60 : 50,
    background: (s)=>MaterialDynamicColors.highestSurface(s),
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(1.5, 3, 4.5, 7)
});
MaterialDynamicColors.outlineVariant = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "outline_variant",
    palette: (s)=>s.neutralVariantPalette,
    tone: (s)=>s.isDark ? 30 : 80,
    background: (s)=>MaterialDynamicColors.highestSurface(s),
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(1, 1, 3, 7)
});
MaterialDynamicColors.shadow = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "shadow",
    palette: (s)=>s.neutralPalette,
    tone: (s)=>0
});
MaterialDynamicColors.scrim = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "scrim",
    palette: (s)=>s.neutralPalette,
    tone: (s)=>0
});
MaterialDynamicColors.surfaceTint = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "surface_tint",
    palette: (s)=>s.primaryPalette,
    tone: (s)=>s.isDark ? 80 : 40,
    isBackground: true
});
MaterialDynamicColors.primary = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "primary",
    palette: (s)=>s.primaryPalette,
    tone: (s)=>{
        if (isMonochrome(s)) return s.isDark ? 100 : 0;
        return s.isDark ? 80 : 40;
    },
    isBackground: true,
    background: (s)=>MaterialDynamicColors.highestSurface(s),
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(3, 4.5, 7, 11),
    toneDeltaPair: (s)=>new (0, _toneDeltaPairJs.ToneDeltaPair)(MaterialDynamicColors.primaryContainer, MaterialDynamicColors.primary, 15, "nearer", false)
});
MaterialDynamicColors.onPrimary = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "on_primary",
    palette: (s)=>s.primaryPalette,
    tone: (s)=>{
        if (isMonochrome(s)) return s.isDark ? 10 : 90;
        return s.isDark ? 20 : 100;
    },
    background: (s)=>MaterialDynamicColors.primary,
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(4.5, 7, 11, 21)
});
MaterialDynamicColors.primaryContainer = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "primary_container",
    palette: (s)=>s.primaryPalette,
    tone: (s)=>{
        if (isFidelity(s)) return performAlbers(s.sourceColorHct, s);
        if (isMonochrome(s)) return s.isDark ? 85 : 25;
        return s.isDark ? 30 : 90;
    },
    isBackground: true,
    background: (s)=>MaterialDynamicColors.highestSurface(s),
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(1, 1, 3, 7),
    toneDeltaPair: (s)=>new (0, _toneDeltaPairJs.ToneDeltaPair)(MaterialDynamicColors.primaryContainer, MaterialDynamicColors.primary, 15, "nearer", false)
});
MaterialDynamicColors.onPrimaryContainer = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "on_primary_container",
    palette: (s)=>s.primaryPalette,
    tone: (s)=>{
        if (isFidelity(s)) return (0, _dynamicColorJs.DynamicColor).foregroundTone(MaterialDynamicColors.primaryContainer.tone(s), 4.5);
        if (isMonochrome(s)) return s.isDark ? 0 : 100;
        return s.isDark ? 90 : 10;
    },
    background: (s)=>MaterialDynamicColors.primaryContainer,
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(4.5, 7, 11, 21)
});
MaterialDynamicColors.inversePrimary = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "inverse_primary",
    palette: (s)=>s.primaryPalette,
    tone: (s)=>s.isDark ? 40 : 80,
    background: (s)=>MaterialDynamicColors.inverseSurface,
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(3, 4.5, 7, 11)
});
MaterialDynamicColors.secondary = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "secondary",
    palette: (s)=>s.secondaryPalette,
    tone: (s)=>s.isDark ? 80 : 40,
    isBackground: true,
    background: (s)=>MaterialDynamicColors.highestSurface(s),
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(3, 4.5, 7, 11),
    toneDeltaPair: (s)=>new (0, _toneDeltaPairJs.ToneDeltaPair)(MaterialDynamicColors.secondaryContainer, MaterialDynamicColors.secondary, 15, "nearer", false)
});
MaterialDynamicColors.onSecondary = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "on_secondary",
    palette: (s)=>s.secondaryPalette,
    tone: (s)=>{
        if (isMonochrome(s)) return s.isDark ? 10 : 100;
        else return s.isDark ? 20 : 100;
    },
    background: (s)=>MaterialDynamicColors.secondary,
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(4.5, 7, 11, 21)
});
MaterialDynamicColors.secondaryContainer = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "secondary_container",
    palette: (s)=>s.secondaryPalette,
    tone: (s)=>{
        const initialTone = s.isDark ? 30 : 90;
        if (isMonochrome(s)) return s.isDark ? 30 : 85;
        if (!isFidelity(s)) return initialTone;
        let answer = findDesiredChromaByTone(s.secondaryPalette.hue, s.secondaryPalette.chroma, initialTone, s.isDark ? false : true);
        answer = performAlbers(s.secondaryPalette.getHct(answer), s);
        return answer;
    },
    isBackground: true,
    background: (s)=>MaterialDynamicColors.highestSurface(s),
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(1, 1, 3, 7),
    toneDeltaPair: (s)=>new (0, _toneDeltaPairJs.ToneDeltaPair)(MaterialDynamicColors.secondaryContainer, MaterialDynamicColors.secondary, 15, "nearer", false)
});
MaterialDynamicColors.onSecondaryContainer = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "on_secondary_container",
    palette: (s)=>s.secondaryPalette,
    tone: (s)=>{
        if (!isFidelity(s)) return s.isDark ? 90 : 10;
        return (0, _dynamicColorJs.DynamicColor).foregroundTone(MaterialDynamicColors.secondaryContainer.tone(s), 4.5);
    },
    background: (s)=>MaterialDynamicColors.secondaryContainer,
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(4.5, 7, 11, 21)
});
MaterialDynamicColors.tertiary = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "tertiary",
    palette: (s)=>s.tertiaryPalette,
    tone: (s)=>{
        if (isMonochrome(s)) return s.isDark ? 90 : 25;
        return s.isDark ? 80 : 40;
    },
    isBackground: true,
    background: (s)=>MaterialDynamicColors.highestSurface(s),
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(3, 4.5, 7, 11),
    toneDeltaPair: (s)=>new (0, _toneDeltaPairJs.ToneDeltaPair)(MaterialDynamicColors.tertiaryContainer, MaterialDynamicColors.tertiary, 15, "nearer", false)
});
MaterialDynamicColors.onTertiary = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "on_tertiary",
    palette: (s)=>s.tertiaryPalette,
    tone: (s)=>{
        if (isMonochrome(s)) return s.isDark ? 10 : 90;
        return s.isDark ? 20 : 100;
    },
    background: (s)=>MaterialDynamicColors.tertiary,
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(4.5, 7, 11, 21)
});
MaterialDynamicColors.tertiaryContainer = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "tertiary_container",
    palette: (s)=>s.tertiaryPalette,
    tone: (s)=>{
        if (isMonochrome(s)) return s.isDark ? 60 : 49;
        if (!isFidelity(s)) return s.isDark ? 30 : 90;
        const albersTone = performAlbers(s.tertiaryPalette.getHct(s.sourceColorHct.tone), s);
        const proposedHct = s.tertiaryPalette.getHct(albersTone);
        return (0, _dislikeAnalyzerJs.DislikeAnalyzer).fixIfDisliked(proposedHct).tone;
    },
    isBackground: true,
    background: (s)=>MaterialDynamicColors.highestSurface(s),
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(1, 1, 3, 7),
    toneDeltaPair: (s)=>new (0, _toneDeltaPairJs.ToneDeltaPair)(MaterialDynamicColors.tertiaryContainer, MaterialDynamicColors.tertiary, 15, "nearer", false)
});
MaterialDynamicColors.onTertiaryContainer = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "on_tertiary_container",
    palette: (s)=>s.tertiaryPalette,
    tone: (s)=>{
        if (isMonochrome(s)) return s.isDark ? 0 : 100;
        if (!isFidelity(s)) return s.isDark ? 90 : 10;
        return (0, _dynamicColorJs.DynamicColor).foregroundTone(MaterialDynamicColors.tertiaryContainer.tone(s), 4.5);
    },
    background: (s)=>MaterialDynamicColors.tertiaryContainer,
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(4.5, 7, 11, 21)
});
MaterialDynamicColors.error = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "error",
    palette: (s)=>s.errorPalette,
    tone: (s)=>s.isDark ? 80 : 40,
    isBackground: true,
    background: (s)=>MaterialDynamicColors.highestSurface(s),
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(3, 4.5, 7, 11),
    toneDeltaPair: (s)=>new (0, _toneDeltaPairJs.ToneDeltaPair)(MaterialDynamicColors.errorContainer, MaterialDynamicColors.error, 15, "nearer", false)
});
MaterialDynamicColors.onError = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "on_error",
    palette: (s)=>s.errorPalette,
    tone: (s)=>s.isDark ? 20 : 100,
    background: (s)=>MaterialDynamicColors.error,
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(4.5, 7, 11, 21)
});
MaterialDynamicColors.errorContainer = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "error_container",
    palette: (s)=>s.errorPalette,
    tone: (s)=>s.isDark ? 30 : 90,
    isBackground: true,
    background: (s)=>MaterialDynamicColors.highestSurface(s),
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(1, 1, 3, 7),
    toneDeltaPair: (s)=>new (0, _toneDeltaPairJs.ToneDeltaPair)(MaterialDynamicColors.errorContainer, MaterialDynamicColors.error, 15, "nearer", false)
});
MaterialDynamicColors.onErrorContainer = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "on_error_container",
    palette: (s)=>s.errorPalette,
    tone: (s)=>s.isDark ? 90 : 10,
    background: (s)=>MaterialDynamicColors.errorContainer,
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(4.5, 7, 11, 21)
});
MaterialDynamicColors.primaryFixed = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "primary_fixed",
    palette: (s)=>s.primaryPalette,
    tone: (s)=>isMonochrome(s) ? 40.0 : 90.0,
    isBackground: true,
    background: (s)=>MaterialDynamicColors.highestSurface(s),
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(1, 1, 3, 7),
    toneDeltaPair: (s)=>new (0, _toneDeltaPairJs.ToneDeltaPair)(MaterialDynamicColors.primaryFixed, MaterialDynamicColors.primaryFixedDim, 10, "lighter", true)
});
MaterialDynamicColors.primaryFixedDim = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "primary_fixed_dim",
    palette: (s)=>s.primaryPalette,
    tone: (s)=>isMonochrome(s) ? 30.0 : 80.0,
    isBackground: true,
    background: (s)=>MaterialDynamicColors.highestSurface(s),
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(1, 1, 3, 7),
    toneDeltaPair: (s)=>new (0, _toneDeltaPairJs.ToneDeltaPair)(MaterialDynamicColors.primaryFixed, MaterialDynamicColors.primaryFixedDim, 10, "lighter", true)
});
MaterialDynamicColors.onPrimaryFixed = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "on_primary_fixed",
    palette: (s)=>s.primaryPalette,
    tone: (s)=>isMonochrome(s) ? 100.0 : 10.0,
    background: (s)=>MaterialDynamicColors.primaryFixedDim,
    secondBackground: (s)=>MaterialDynamicColors.primaryFixed,
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(4.5, 7, 11, 21)
});
MaterialDynamicColors.onPrimaryFixedVariant = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "on_primary_fixed_variant",
    palette: (s)=>s.primaryPalette,
    tone: (s)=>isMonochrome(s) ? 90.0 : 30.0,
    background: (s)=>MaterialDynamicColors.primaryFixedDim,
    secondBackground: (s)=>MaterialDynamicColors.primaryFixed,
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(3, 4.5, 7, 11)
});
MaterialDynamicColors.secondaryFixed = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "secondary_fixed",
    palette: (s)=>s.secondaryPalette,
    tone: (s)=>isMonochrome(s) ? 80.0 : 90.0,
    isBackground: true,
    background: (s)=>MaterialDynamicColors.highestSurface(s),
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(1, 1, 3, 7),
    toneDeltaPair: (s)=>new (0, _toneDeltaPairJs.ToneDeltaPair)(MaterialDynamicColors.secondaryFixed, MaterialDynamicColors.secondaryFixedDim, 10, "lighter", true)
});
MaterialDynamicColors.secondaryFixedDim = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "secondary_fixed_dim",
    palette: (s)=>s.secondaryPalette,
    tone: (s)=>isMonochrome(s) ? 70.0 : 80.0,
    isBackground: true,
    background: (s)=>MaterialDynamicColors.highestSurface(s),
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(1, 1, 3, 7),
    toneDeltaPair: (s)=>new (0, _toneDeltaPairJs.ToneDeltaPair)(MaterialDynamicColors.secondaryFixed, MaterialDynamicColors.secondaryFixedDim, 10, "lighter", true)
});
MaterialDynamicColors.onSecondaryFixed = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "on_secondary_fixed",
    palette: (s)=>s.secondaryPalette,
    tone: (s)=>10.0,
    background: (s)=>MaterialDynamicColors.secondaryFixedDim,
    secondBackground: (s)=>MaterialDynamicColors.secondaryFixed,
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(4.5, 7, 11, 21)
});
MaterialDynamicColors.onSecondaryFixedVariant = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "on_secondary_fixed_variant",
    palette: (s)=>s.secondaryPalette,
    tone: (s)=>isMonochrome(s) ? 25.0 : 30.0,
    background: (s)=>MaterialDynamicColors.secondaryFixedDim,
    secondBackground: (s)=>MaterialDynamicColors.secondaryFixed,
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(3, 4.5, 7, 11)
});
MaterialDynamicColors.tertiaryFixed = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "tertiary_fixed",
    palette: (s)=>s.tertiaryPalette,
    tone: (s)=>isMonochrome(s) ? 40.0 : 90.0,
    isBackground: true,
    background: (s)=>MaterialDynamicColors.highestSurface(s),
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(1, 1, 3, 7),
    toneDeltaPair: (s)=>new (0, _toneDeltaPairJs.ToneDeltaPair)(MaterialDynamicColors.tertiaryFixed, MaterialDynamicColors.tertiaryFixedDim, 10, "lighter", true)
});
MaterialDynamicColors.tertiaryFixedDim = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "tertiary_fixed_dim",
    palette: (s)=>s.tertiaryPalette,
    tone: (s)=>isMonochrome(s) ? 30.0 : 80.0,
    isBackground: true,
    background: (s)=>MaterialDynamicColors.highestSurface(s),
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(1, 1, 3, 7),
    toneDeltaPair: (s)=>new (0, _toneDeltaPairJs.ToneDeltaPair)(MaterialDynamicColors.tertiaryFixed, MaterialDynamicColors.tertiaryFixedDim, 10, "lighter", true)
});
MaterialDynamicColors.onTertiaryFixed = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "on_tertiary_fixed",
    palette: (s)=>s.tertiaryPalette,
    tone: (s)=>isMonochrome(s) ? 100.0 : 10.0,
    background: (s)=>MaterialDynamicColors.tertiaryFixedDim,
    secondBackground: (s)=>MaterialDynamicColors.tertiaryFixed,
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(4.5, 7, 11, 21)
});
MaterialDynamicColors.onTertiaryFixedVariant = (0, _dynamicColorJs.DynamicColor).fromPalette({
    name: "on_tertiary_fixed_variant",
    palette: (s)=>s.tertiaryPalette,
    tone: (s)=>isMonochrome(s) ? 90.0 : 30.0,
    background: (s)=>MaterialDynamicColors.tertiaryFixedDim,
    secondBackground: (s)=>MaterialDynamicColors.tertiaryFixed,
    contrastCurve: new (0, _contrastCurveJs.ContrastCurve)(3, 4.5, 7, 11)
});

},{"../dislike/dislike_analyzer.js":"1E0jW","../hct/hct.js":"kZFIY","../hct/viewing_conditions.js":"fTNIb","../scheme/variant.js":"9aQXl","./contrast_curve.js":"6fHrC","./dynamic_color.js":"euwDW","./tone_delta_pair.js":"3KIFW","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9aQXl":[function(require,module,exports) {
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * Set of themes supported by Dynamic Color.
 * Instantiate the corresponding subclass, ex. SchemeTonalSpot, to create
 * colors corresponding to the theme.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Variant", ()=>Variant);
var Variant;
(function(Variant) {
    Variant[Variant["MONOCHROME"] = 0] = "MONOCHROME";
    Variant[Variant["NEUTRAL"] = 1] = "NEUTRAL";
    Variant[Variant["TONAL_SPOT"] = 2] = "TONAL_SPOT";
    Variant[Variant["VIBRANT"] = 3] = "VIBRANT";
    Variant[Variant["EXPRESSIVE"] = 4] = "EXPRESSIVE";
    Variant[Variant["FIDELITY"] = 5] = "FIDELITY";
    Variant[Variant["CONTENT"] = 6] = "CONTENT";
    Variant[Variant["RAINBOW"] = 7] = "RAINBOW";
    Variant[Variant["FRUIT_SALAD"] = 8] = "FRUIT_SALAD";
})(Variant || (Variant = {}));

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6fHrC":[function(require,module,exports) {
/**
 * @license
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * A class containing the contrast curve for a dynamic color on its background.
 *
 * The four values correspond to contrast requirements for contrast levels
 * -1.0, 0.0, 0.5, and 1.0, respectively.
 */ parcelHelpers.export(exports, "ContrastCurve", ()=>ContrastCurve);
var _mathUtilsJs = require("../utils/math_utils.js");
class ContrastCurve {
    /**
     * Creates a `ContrastCurve` object.
     *
     * @param low Contrast requirement for contrast level -1.0
     * @param normal Contrast requirement for contrast level 0.0
     * @param medium Contrast requirement for contrast level 0.5
     * @param high Contrast requirement for contrast level 1.0
     */ constructor(low, normal, medium, high){
        this.low = low;
        this.normal = normal;
        this.medium = medium;
        this.high = high;
    }
    /**
     * Returns the contrast ratio at a given contrast level.
     *
     * @param contrastLevel The contrast level. 0.0 is the default (normal);
     * -1.0 is the lowest; 1.0 is the highest.
     * @return The contrast ratio, a number between 1.0 and 21.0.
     */ getContrast(contrastLevel) {
        if (contrastLevel <= -1) return this.low;
        else if (contrastLevel < 0.0) return _mathUtilsJs.lerp(this.low, this.normal, (contrastLevel - -1) / 1);
        else if (contrastLevel < 0.5) return _mathUtilsJs.lerp(this.normal, this.medium, (contrastLevel - 0) / 0.5);
        else if (contrastLevel < 1.0) return _mathUtilsJs.lerp(this.medium, this.high, (contrastLevel - 0.5) / 0.5);
        else return this.high;
    }
}

},{"../utils/math_utils.js":"kq6dU","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3KIFW":[function(require,module,exports) {
/**
 * @license
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * Documents a constraint between two DynamicColors, in which their tones must
 * have a certain distance from each other.
 *
 * Prefer a DynamicColor with a background, this is for special cases when
 * designers want tonal distance, literally contrast, between two colors that
 * don't have a background / foreground relationship or a contrast guarantee.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ToneDeltaPair", ()=>ToneDeltaPair);
class ToneDeltaPair {
    /**
     * Documents a constraint in tone distance between two DynamicColors.
     *
     * The polarity is an adjective that describes "A", compared to "B".
     *
     * For instance, ToneDeltaPair(A, B, 15, 'darker', stayTogether) states that
     * A's tone should be at least 15 darker than B's.
     *
     * 'nearer' and 'farther' describes closeness to the surface roles. For
     * instance, ToneDeltaPair(A, B, 10, 'nearer', stayTogether) states that A
     * should be 10 lighter than B in light mode, and 10 darker than B in dark
     * mode.
     *
     * @param roleA The first role in a pair.
     * @param roleB The second role in a pair.
     * @param delta Required difference between tones. Absolute value, negative
     * values have undefined behavior.
     * @param polarity The relative relation between tones of roleA and roleB,
     * as described above.
     * @param stayTogether Whether these two roles should stay on the same side of
     * the "awkward zone" (T50-59). This is necessary for certain cases where
     * one role has two backgrounds.
     */ constructor(roleA, roleB, delta, polarity, stayTogether){
        this.roleA = roleA;
        this.roleB = roleB;
        this.delta = delta;
        this.polarity = polarity;
        this.stayTogether = stayTogether;
    }
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3U8Jr":[function(require,module,exports) {
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * An intermediate concept between the key color for a UI theme, and a full
 * color scheme. 5 sets of tones are generated, all except one use the same hue
 * as the key color, and all vary in chroma.
 */ parcelHelpers.export(exports, "CorePalette", ()=>CorePalette);
var _hctJs = require("../hct/hct.js");
var _tonalPaletteJs = require("./tonal_palette.js");
class CorePalette {
    /**
     * @param argb ARGB representation of a color
     */ static of(argb) {
        return new CorePalette(argb, false);
    }
    /**
     * @param argb ARGB representation of a color
     */ static contentOf(argb) {
        return new CorePalette(argb, true);
    }
    /**
     * Create a [CorePalette] from a set of colors
     */ static fromColors(colors) {
        return CorePalette.createPaletteFromColors(false, colors);
    }
    /**
     * Create a content [CorePalette] from a set of colors
     */ static contentFromColors(colors) {
        return CorePalette.createPaletteFromColors(true, colors);
    }
    static createPaletteFromColors(content, colors) {
        const palette = new CorePalette(colors.primary, content);
        if (colors.secondary) {
            const p = new CorePalette(colors.secondary, content);
            palette.a2 = p.a1;
        }
        if (colors.tertiary) {
            const p = new CorePalette(colors.tertiary, content);
            palette.a3 = p.a1;
        }
        if (colors.error) {
            const p = new CorePalette(colors.error, content);
            palette.error = p.a1;
        }
        if (colors.neutral) {
            const p = new CorePalette(colors.neutral, content);
            palette.n1 = p.n1;
        }
        if (colors.neutralVariant) {
            const p = new CorePalette(colors.neutralVariant, content);
            palette.n2 = p.n2;
        }
        return palette;
    }
    constructor(argb, isContent){
        const hct = (0, _hctJs.Hct).fromInt(argb);
        const hue = hct.hue;
        const chroma = hct.chroma;
        if (isContent) {
            this.a1 = (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(hue, chroma);
            this.a2 = (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(hue, chroma / 3);
            this.a3 = (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(hue + 60, chroma / 2);
            this.n1 = (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(hue, Math.min(chroma / 12, 4));
            this.n2 = (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(hue, Math.min(chroma / 6, 8));
        } else {
            this.a1 = (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(hue, Math.max(48, chroma));
            this.a2 = (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(hue, 16);
            this.a3 = (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(hue + 60, 24);
            this.n1 = (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(hue, 4);
            this.n2 = (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(hue, 8);
        }
        this.error = (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(25, 84);
    }
}

},{"../hct/hct.js":"kZFIY","./tonal_palette.js":"ittDp","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ittDp":[function(require,module,exports) {
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 *  A convenience class for retrieving colors that are constant in hue and
 *  chroma, but vary in tone.
 */ parcelHelpers.export(exports, "TonalPalette", ()=>TonalPalette);
var _hctJs = require("../hct/hct.js");
class TonalPalette {
    /**
     * @param argb ARGB representation of a color
     * @return Tones matching that color's hue and chroma.
     */ static fromInt(argb) {
        const hct = (0, _hctJs.Hct).fromInt(argb);
        return TonalPalette.fromHct(hct);
    }
    /**
     * @param hct Hct
     * @return Tones matching that color's hue and chroma.
     */ static fromHct(hct) {
        return new TonalPalette(hct.hue, hct.chroma, hct);
    }
    /**
     * @param hue HCT hue
     * @param chroma HCT chroma
     * @return Tones matching hue and chroma.
     */ static fromHueAndChroma(hue, chroma) {
        return new TonalPalette(hue, chroma, TonalPalette.createKeyColor(hue, chroma));
    }
    constructor(hue, chroma, keyColor){
        this.hue = hue;
        this.chroma = chroma;
        this.keyColor = keyColor;
        this.cache = new Map();
    }
    static createKeyColor(hue, chroma) {
        const startTone = 50.0;
        let smallestDeltaHct = (0, _hctJs.Hct).from(hue, chroma, startTone);
        let smallestDelta = Math.abs(smallestDeltaHct.chroma - chroma);
        // Starting from T50, check T+/-delta to see if they match the requested
        // chroma.
        //
        // Starts from T50 because T50 has the most chroma available, on
        // average. Thus it is most likely to have a direct answer and minimize
        // iteration.
        for(let delta = 1.0; delta < 50.0; delta += 1.0){
            // Termination condition rounding instead of minimizing delta to avoid
            // case where requested chroma is 16.51, and the closest chroma is 16.49.
            // Error is minimized, but when rounded and displayed, requested chroma
            // is 17, key color's chroma is 16.
            if (Math.round(chroma) === Math.round(smallestDeltaHct.chroma)) return smallestDeltaHct;
            const hctAdd = (0, _hctJs.Hct).from(hue, chroma, startTone + delta);
            const hctAddDelta = Math.abs(hctAdd.chroma - chroma);
            if (hctAddDelta < smallestDelta) {
                smallestDelta = hctAddDelta;
                smallestDeltaHct = hctAdd;
            }
            const hctSubtract = (0, _hctJs.Hct).from(hue, chroma, startTone - delta);
            const hctSubtractDelta = Math.abs(hctSubtract.chroma - chroma);
            if (hctSubtractDelta < smallestDelta) {
                smallestDelta = hctSubtractDelta;
                smallestDeltaHct = hctSubtract;
            }
        }
        return smallestDeltaHct;
    }
    /**
     * @param tone HCT tone, measured from 0 to 100.
     * @return ARGB representation of a color with that tone.
     */ tone(tone) {
        let argb = this.cache.get(tone);
        if (argb === undefined) {
            argb = (0, _hctJs.Hct).from(this.hue, this.chroma, tone).toInt();
            this.cache.set(tone, argb);
        }
        return argb;
    }
    /**
     * @param tone HCT tone.
     * @return HCT representation of a color with that tone.
     */ getHct(tone) {
        return (0, _hctJs.Hct).fromInt(this.tone(tone));
    }
}

},{"../hct/hct.js":"kZFIY","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aIQny":[function(require,module,exports) {
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * An image quantizer that improves on the quality of a standard K-Means
 * algorithm by setting the K-Means initial state to the output of a Wu
 * quantizer, instead of random centroids. Improves on speed by several
 * optimizations, as implemented in Wsmeans, or Weighted Square Means, K-Means
 * with those optimizations.
 *
 * This algorithm was designed by M. Emre Celebi, and was found in their 2011
 * paper, Improving the Performance of K-Means for Color Quantization.
 * https://arxiv.org/abs/1101.0395
 */ // material_color_utilities is designed to have a consistent API across
// platforms and modular components that can be moved around easily. Using a
// class as a namespace facilitates this.
//
// tslint:disable-next-line:class-as-namespace
parcelHelpers.export(exports, "QuantizerCelebi", ()=>QuantizerCelebi);
var _quantizerWsmeansJs = require("./quantizer_wsmeans.js");
var _quantizerWuJs = require("./quantizer_wu.js");
class QuantizerCelebi {
    /**
     * @param pixels Colors in ARGB format.
     * @param maxColors The number of colors to divide the image into. A lower
     *     number of colors may be returned.
     * @return Map with keys of colors in ARGB format, and values of number of
     *     pixels in the original image that correspond to the color in the
     *     quantized image.
     */ static quantize(pixels, maxColors) {
        const wu = new (0, _quantizerWuJs.QuantizerWu)();
        const wuResult = wu.quantize(pixels, maxColors);
        return (0, _quantizerWsmeansJs.QuantizerWsmeans).quantize(pixels, wuResult, maxColors);
    }
}

},{"./quantizer_wsmeans.js":"iwUnH","./quantizer_wu.js":"6RhHT","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iwUnH":[function(require,module,exports) {
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * An image quantizer that improves on the speed of a standard K-Means algorithm
 * by implementing several optimizations, including deduping identical pixels
 * and a triangle inequality rule that reduces the number of comparisons needed
 * to identify which cluster a point should be moved to.
 *
 * Wsmeans stands for Weighted Square Means.
 *
 * This algorithm was designed by M. Emre Celebi, and was found in their 2011
 * paper, Improving the Performance of K-Means for Color Quantization.
 * https://arxiv.org/abs/1101.0395
 */ // material_color_utilities is designed to have a consistent API across
// platforms and modular components that can be moved around easily. Using a
// class as a namespace facilitates this.
//
// tslint:disable-next-line:class-as-namespace
parcelHelpers.export(exports, "QuantizerWsmeans", ()=>QuantizerWsmeans);
var _labPointProviderJs = require("./lab_point_provider.js");
const MAX_ITERATIONS = 10;
const MIN_MOVEMENT_DISTANCE = 3.0;
class QuantizerWsmeans {
    /**
     * @param inputPixels Colors in ARGB format.
     * @param startingClusters Defines the initial state of the quantizer. Passing
     *     an empty array is fine, the implementation will create its own initial
     *     state that leads to reproducible results for the same inputs.
     *     Passing an array that is the result of Wu quantization leads to higher
     *     quality results.
     * @param maxColors The number of colors to divide the image into. A lower
     *     number of colors may be returned.
     * @return Colors in ARGB format.
     */ static quantize(inputPixels, startingClusters, maxColors) {
        const pixelToCount = new Map();
        const points = new Array();
        const pixels = new Array();
        const pointProvider = new (0, _labPointProviderJs.LabPointProvider)();
        let pointCount = 0;
        for(let i = 0; i < inputPixels.length; i++){
            const inputPixel = inputPixels[i];
            const pixelCount = pixelToCount.get(inputPixel);
            if (pixelCount === undefined) {
                pointCount++;
                points.push(pointProvider.fromInt(inputPixel));
                pixels.push(inputPixel);
                pixelToCount.set(inputPixel, 1);
            } else pixelToCount.set(inputPixel, pixelCount + 1);
        }
        const counts = new Array();
        for(let i = 0; i < pointCount; i++){
            const pixel = pixels[i];
            const count = pixelToCount.get(pixel);
            if (count !== undefined) counts[i] = count;
        }
        let clusterCount = Math.min(maxColors, pointCount);
        if (startingClusters.length > 0) clusterCount = Math.min(clusterCount, startingClusters.length);
        const clusters = new Array();
        for(let i = 0; i < startingClusters.length; i++)clusters.push(pointProvider.fromInt(startingClusters[i]));
        const additionalClustersNeeded = clusterCount - clusters.length;
        if (startingClusters.length === 0 && additionalClustersNeeded > 0) for(let i = 0; i < additionalClustersNeeded; i++){
            const l = Math.random() * 100.0;
            const a = Math.random() * 201 + -100;
            const b = Math.random() * 201 + -100;
            clusters.push(new Array(l, a, b));
        }
        const clusterIndices = new Array();
        for(let i = 0; i < pointCount; i++)clusterIndices.push(Math.floor(Math.random() * clusterCount));
        const indexMatrix = new Array();
        for(let i = 0; i < clusterCount; i++){
            indexMatrix.push(new Array());
            for(let j = 0; j < clusterCount; j++)indexMatrix[i].push(0);
        }
        const distanceToIndexMatrix = new Array();
        for(let i = 0; i < clusterCount; i++){
            distanceToIndexMatrix.push(new Array());
            for(let j = 0; j < clusterCount; j++)distanceToIndexMatrix[i].push(new DistanceAndIndex());
        }
        const pixelCountSums = new Array();
        for(let i = 0; i < clusterCount; i++)pixelCountSums.push(0);
        for(let iteration = 0; iteration < MAX_ITERATIONS; iteration++){
            for(let i = 0; i < clusterCount; i++){
                for(let j = i + 1; j < clusterCount; j++){
                    const distance = pointProvider.distance(clusters[i], clusters[j]);
                    distanceToIndexMatrix[j][i].distance = distance;
                    distanceToIndexMatrix[j][i].index = i;
                    distanceToIndexMatrix[i][j].distance = distance;
                    distanceToIndexMatrix[i][j].index = j;
                }
                distanceToIndexMatrix[i].sort();
                for(let j = 0; j < clusterCount; j++)indexMatrix[i][j] = distanceToIndexMatrix[i][j].index;
            }
            let pointsMoved = 0;
            for(let i = 0; i < pointCount; i++){
                const point = points[i];
                const previousClusterIndex = clusterIndices[i];
                const previousCluster = clusters[previousClusterIndex];
                const previousDistance = pointProvider.distance(point, previousCluster);
                let minimumDistance = previousDistance;
                let newClusterIndex = -1;
                for(let j = 0; j < clusterCount; j++){
                    if (distanceToIndexMatrix[previousClusterIndex][j].distance >= 4 * previousDistance) continue;
                    const distance = pointProvider.distance(point, clusters[j]);
                    if (distance < minimumDistance) {
                        minimumDistance = distance;
                        newClusterIndex = j;
                    }
                }
                if (newClusterIndex !== -1) {
                    const distanceChange = Math.abs(Math.sqrt(minimumDistance) - Math.sqrt(previousDistance));
                    if (distanceChange > MIN_MOVEMENT_DISTANCE) {
                        pointsMoved++;
                        clusterIndices[i] = newClusterIndex;
                    }
                }
            }
            if (pointsMoved === 0 && iteration !== 0) break;
            const componentASums = new Array(clusterCount).fill(0);
            const componentBSums = new Array(clusterCount).fill(0);
            const componentCSums = new Array(clusterCount).fill(0);
            for(let i = 0; i < clusterCount; i++)pixelCountSums[i] = 0;
            for(let i = 0; i < pointCount; i++){
                const clusterIndex = clusterIndices[i];
                const point = points[i];
                const count = counts[i];
                pixelCountSums[clusterIndex] += count;
                componentASums[clusterIndex] += point[0] * count;
                componentBSums[clusterIndex] += point[1] * count;
                componentCSums[clusterIndex] += point[2] * count;
            }
            for(let i = 0; i < clusterCount; i++){
                const count = pixelCountSums[i];
                if (count === 0) {
                    clusters[i] = [
                        0.0,
                        0.0,
                        0.0
                    ];
                    continue;
                }
                const a = componentASums[i] / count;
                const b = componentBSums[i] / count;
                const c = componentCSums[i] / count;
                clusters[i] = [
                    a,
                    b,
                    c
                ];
            }
        }
        const argbToPopulation = new Map();
        for(let i = 0; i < clusterCount; i++){
            const count = pixelCountSums[i];
            if (count === 0) continue;
            const possibleNewCluster = pointProvider.toInt(clusters[i]);
            if (argbToPopulation.has(possibleNewCluster)) continue;
            argbToPopulation.set(possibleNewCluster, count);
        }
        return argbToPopulation;
    }
}
/**
 *  A wrapper for maintaining a table of distances between K-Means clusters.
 */ class DistanceAndIndex {
    constructor(){
        this.distance = -1;
        this.index = -1;
    }
}

},{"./lab_point_provider.js":"4kDmU","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4kDmU":[function(require,module,exports) {
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Provides conversions needed for K-Means quantization. Converting input to
 * points, and converting the final state of the K-Means algorithm to colors.
 */ parcelHelpers.export(exports, "LabPointProvider", ()=>LabPointProvider);
var _colorUtilsJs = require("../utils/color_utils.js");
class LabPointProvider {
    /**
     * Convert a color represented in ARGB to a 3-element array of L*a*b*
     * coordinates of the color.
     */ fromInt(argb) {
        return _colorUtilsJs.labFromArgb(argb);
    }
    /**
     * Convert a 3-element array to a color represented in ARGB.
     */ toInt(point) {
        return _colorUtilsJs.argbFromLab(point[0], point[1], point[2]);
    }
    /**
     * Standard CIE 1976 delta E formula also takes the square root, unneeded
     * here. This method is used by quantization algorithms to compare distance,
     * and the relative ordering is the same, with or without a square root.
     *
     * This relatively minor optimization is helpful because this method is
     * called at least once for each pixel in an image.
     */ distance(from, to) {
        const dL = from[0] - to[0];
        const dA = from[1] - to[1];
        const dB = from[2] - to[2];
        return dL * dL + dA * dA + dB * dB;
    }
}

},{"../utils/color_utils.js":"jxfKg","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6RhHT":[function(require,module,exports) {
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * An image quantizer that divides the image's pixels into clusters by
 * recursively cutting an RGB cube, based on the weight of pixels in each area
 * of the cube.
 *
 * The algorithm was described by Xiaolin Wu in Graphic Gems II, published in
 * 1991.
 */ parcelHelpers.export(exports, "QuantizerWu", ()=>QuantizerWu);
var _colorUtilsJs = require("../utils/color_utils.js");
var _quantizerMapJs = require("./quantizer_map.js");
const INDEX_BITS = 5;
const SIDE_LENGTH = 33; // ((1 << INDEX_INDEX_BITS) + 1)
const TOTAL_SIZE = 35937; // SIDE_LENGTH * SIDE_LENGTH * SIDE_LENGTH
const directions = {
    RED: "red",
    GREEN: "green",
    BLUE: "blue"
};
class QuantizerWu {
    constructor(weights = [], momentsR = [], momentsG = [], momentsB = [], moments = [], cubes = []){
        this.weights = weights;
        this.momentsR = momentsR;
        this.momentsG = momentsG;
        this.momentsB = momentsB;
        this.moments = moments;
        this.cubes = cubes;
    }
    /**
     * @param pixels Colors in ARGB format.
     * @param maxColors The number of colors to divide the image into. A lower
     *     number of colors may be returned.
     * @return Colors in ARGB format.
     */ quantize(pixels, maxColors) {
        this.constructHistogram(pixels);
        this.computeMoments();
        const createBoxesResult = this.createBoxes(maxColors);
        const results = this.createResult(createBoxesResult.resultCount);
        return results;
    }
    constructHistogram(pixels) {
        this.weights = Array.from({
            length: TOTAL_SIZE
        }).fill(0);
        this.momentsR = Array.from({
            length: TOTAL_SIZE
        }).fill(0);
        this.momentsG = Array.from({
            length: TOTAL_SIZE
        }).fill(0);
        this.momentsB = Array.from({
            length: TOTAL_SIZE
        }).fill(0);
        this.moments = Array.from({
            length: TOTAL_SIZE
        }).fill(0);
        const countByColor = (0, _quantizerMapJs.QuantizerMap).quantize(pixels);
        for (const [pixel, count] of countByColor.entries()){
            const red = _colorUtilsJs.redFromArgb(pixel);
            const green = _colorUtilsJs.greenFromArgb(pixel);
            const blue = _colorUtilsJs.blueFromArgb(pixel);
            const bitsToRemove = 8 - INDEX_BITS;
            const iR = (red >> bitsToRemove) + 1;
            const iG = (green >> bitsToRemove) + 1;
            const iB = (blue >> bitsToRemove) + 1;
            const index = this.getIndex(iR, iG, iB);
            this.weights[index] = (this.weights[index] ?? 0) + count;
            this.momentsR[index] += count * red;
            this.momentsG[index] += count * green;
            this.momentsB[index] += count * blue;
            this.moments[index] += count * (red * red + green * green + blue * blue);
        }
    }
    computeMoments() {
        for(let r = 1; r < SIDE_LENGTH; r++){
            const area = Array.from({
                length: SIDE_LENGTH
            }).fill(0);
            const areaR = Array.from({
                length: SIDE_LENGTH
            }).fill(0);
            const areaG = Array.from({
                length: SIDE_LENGTH
            }).fill(0);
            const areaB = Array.from({
                length: SIDE_LENGTH
            }).fill(0);
            const area2 = Array.from({
                length: SIDE_LENGTH
            }).fill(0.0);
            for(let g = 1; g < SIDE_LENGTH; g++){
                let line = 0;
                let lineR = 0;
                let lineG = 0;
                let lineB = 0;
                let line2 = 0.0;
                for(let b = 1; b < SIDE_LENGTH; b++){
                    const index = this.getIndex(r, g, b);
                    line += this.weights[index];
                    lineR += this.momentsR[index];
                    lineG += this.momentsG[index];
                    lineB += this.momentsB[index];
                    line2 += this.moments[index];
                    area[b] += line;
                    areaR[b] += lineR;
                    areaG[b] += lineG;
                    areaB[b] += lineB;
                    area2[b] += line2;
                    const previousIndex = this.getIndex(r - 1, g, b);
                    this.weights[index] = this.weights[previousIndex] + area[b];
                    this.momentsR[index] = this.momentsR[previousIndex] + areaR[b];
                    this.momentsG[index] = this.momentsG[previousIndex] + areaG[b];
                    this.momentsB[index] = this.momentsB[previousIndex] + areaB[b];
                    this.moments[index] = this.moments[previousIndex] + area2[b];
                }
            }
        }
    }
    createBoxes(maxColors) {
        this.cubes = Array.from({
            length: maxColors
        }).fill(0).map(()=>new Box());
        const volumeVariance = Array.from({
            length: maxColors
        }).fill(0.0);
        this.cubes[0].r0 = 0;
        this.cubes[0].g0 = 0;
        this.cubes[0].b0 = 0;
        this.cubes[0].r1 = SIDE_LENGTH - 1;
        this.cubes[0].g1 = SIDE_LENGTH - 1;
        this.cubes[0].b1 = SIDE_LENGTH - 1;
        let generatedColorCount = maxColors;
        let next = 0;
        for(let i = 1; i < maxColors; i++){
            if (this.cut(this.cubes[next], this.cubes[i])) {
                volumeVariance[next] = this.cubes[next].vol > 1 ? this.variance(this.cubes[next]) : 0.0;
                volumeVariance[i] = this.cubes[i].vol > 1 ? this.variance(this.cubes[i]) : 0.0;
            } else {
                volumeVariance[next] = 0.0;
                i--;
            }
            next = 0;
            let temp = volumeVariance[0];
            for(let j = 1; j <= i; j++)if (volumeVariance[j] > temp) {
                temp = volumeVariance[j];
                next = j;
            }
            if (temp <= 0.0) {
                generatedColorCount = i + 1;
                break;
            }
        }
        return new CreateBoxesResult(maxColors, generatedColorCount);
    }
    createResult(colorCount) {
        const colors = [];
        for(let i = 0; i < colorCount; ++i){
            const cube = this.cubes[i];
            const weight = this.volume(cube, this.weights);
            if (weight > 0) {
                const r = Math.round(this.volume(cube, this.momentsR) / weight);
                const g = Math.round(this.volume(cube, this.momentsG) / weight);
                const b = Math.round(this.volume(cube, this.momentsB) / weight);
                const color = -16777216 | (r & 0x0ff) << 16 | (g & 0x0ff) << 8 | b & 0x0ff;
                colors.push(color);
            }
        }
        return colors;
    }
    variance(cube) {
        const dr = this.volume(cube, this.momentsR);
        const dg = this.volume(cube, this.momentsG);
        const db = this.volume(cube, this.momentsB);
        const xx = this.moments[this.getIndex(cube.r1, cube.g1, cube.b1)] - this.moments[this.getIndex(cube.r1, cube.g1, cube.b0)] - this.moments[this.getIndex(cube.r1, cube.g0, cube.b1)] + this.moments[this.getIndex(cube.r1, cube.g0, cube.b0)] - this.moments[this.getIndex(cube.r0, cube.g1, cube.b1)] + this.moments[this.getIndex(cube.r0, cube.g1, cube.b0)] + this.moments[this.getIndex(cube.r0, cube.g0, cube.b1)] - this.moments[this.getIndex(cube.r0, cube.g0, cube.b0)];
        const hypotenuse = dr * dr + dg * dg + db * db;
        const volume = this.volume(cube, this.weights);
        return xx - hypotenuse / volume;
    }
    cut(one, two) {
        const wholeR = this.volume(one, this.momentsR);
        const wholeG = this.volume(one, this.momentsG);
        const wholeB = this.volume(one, this.momentsB);
        const wholeW = this.volume(one, this.weights);
        const maxRResult = this.maximize(one, directions.RED, one.r0 + 1, one.r1, wholeR, wholeG, wholeB, wholeW);
        const maxGResult = this.maximize(one, directions.GREEN, one.g0 + 1, one.g1, wholeR, wholeG, wholeB, wholeW);
        const maxBResult = this.maximize(one, directions.BLUE, one.b0 + 1, one.b1, wholeR, wholeG, wholeB, wholeW);
        let direction;
        const maxR = maxRResult.maximum;
        const maxG = maxGResult.maximum;
        const maxB = maxBResult.maximum;
        if (maxR >= maxG && maxR >= maxB) {
            if (maxRResult.cutLocation < 0) return false;
            direction = directions.RED;
        } else if (maxG >= maxR && maxG >= maxB) direction = directions.GREEN;
        else direction = directions.BLUE;
        two.r1 = one.r1;
        two.g1 = one.g1;
        two.b1 = one.b1;
        switch(direction){
            case directions.RED:
                one.r1 = maxRResult.cutLocation;
                two.r0 = one.r1;
                two.g0 = one.g0;
                two.b0 = one.b0;
                break;
            case directions.GREEN:
                one.g1 = maxGResult.cutLocation;
                two.r0 = one.r0;
                two.g0 = one.g1;
                two.b0 = one.b0;
                break;
            case directions.BLUE:
                one.b1 = maxBResult.cutLocation;
                two.r0 = one.r0;
                two.g0 = one.g0;
                two.b0 = one.b1;
                break;
            default:
                throw new Error("unexpected direction " + direction);
        }
        one.vol = (one.r1 - one.r0) * (one.g1 - one.g0) * (one.b1 - one.b0);
        two.vol = (two.r1 - two.r0) * (two.g1 - two.g0) * (two.b1 - two.b0);
        return true;
    }
    maximize(cube, direction, first, last, wholeR, wholeG, wholeB, wholeW) {
        const bottomR = this.bottom(cube, direction, this.momentsR);
        const bottomG = this.bottom(cube, direction, this.momentsG);
        const bottomB = this.bottom(cube, direction, this.momentsB);
        const bottomW = this.bottom(cube, direction, this.weights);
        let max = 0.0;
        let cut = -1;
        let halfR = 0;
        let halfG = 0;
        let halfB = 0;
        let halfW = 0;
        for(let i = first; i < last; i++){
            halfR = bottomR + this.top(cube, direction, i, this.momentsR);
            halfG = bottomG + this.top(cube, direction, i, this.momentsG);
            halfB = bottomB + this.top(cube, direction, i, this.momentsB);
            halfW = bottomW + this.top(cube, direction, i, this.weights);
            if (halfW === 0) continue;
            let tempNumerator = (halfR * halfR + halfG * halfG + halfB * halfB) * 1.0;
            let tempDenominator = halfW * 1.0;
            let temp = tempNumerator / tempDenominator;
            halfR = wholeR - halfR;
            halfG = wholeG - halfG;
            halfB = wholeB - halfB;
            halfW = wholeW - halfW;
            if (halfW === 0) continue;
            tempNumerator = (halfR * halfR + halfG * halfG + halfB * halfB) * 1.0;
            tempDenominator = halfW * 1.0;
            temp += tempNumerator / tempDenominator;
            if (temp > max) {
                max = temp;
                cut = i;
            }
        }
        return new MaximizeResult(cut, max);
    }
    volume(cube, moment) {
        return moment[this.getIndex(cube.r1, cube.g1, cube.b1)] - moment[this.getIndex(cube.r1, cube.g1, cube.b0)] - moment[this.getIndex(cube.r1, cube.g0, cube.b1)] + moment[this.getIndex(cube.r1, cube.g0, cube.b0)] - moment[this.getIndex(cube.r0, cube.g1, cube.b1)] + moment[this.getIndex(cube.r0, cube.g1, cube.b0)] + moment[this.getIndex(cube.r0, cube.g0, cube.b1)] - moment[this.getIndex(cube.r0, cube.g0, cube.b0)];
    }
    bottom(cube, direction, moment) {
        switch(direction){
            case directions.RED:
                return -moment[this.getIndex(cube.r0, cube.g1, cube.b1)] + moment[this.getIndex(cube.r0, cube.g1, cube.b0)] + moment[this.getIndex(cube.r0, cube.g0, cube.b1)] - moment[this.getIndex(cube.r0, cube.g0, cube.b0)];
            case directions.GREEN:
                return -moment[this.getIndex(cube.r1, cube.g0, cube.b1)] + moment[this.getIndex(cube.r1, cube.g0, cube.b0)] + moment[this.getIndex(cube.r0, cube.g0, cube.b1)] - moment[this.getIndex(cube.r0, cube.g0, cube.b0)];
            case directions.BLUE:
                return -moment[this.getIndex(cube.r1, cube.g1, cube.b0)] + moment[this.getIndex(cube.r1, cube.g0, cube.b0)] + moment[this.getIndex(cube.r0, cube.g1, cube.b0)] - moment[this.getIndex(cube.r0, cube.g0, cube.b0)];
            default:
                throw new Error("unexpected direction $direction");
        }
    }
    top(cube, direction, position, moment) {
        switch(direction){
            case directions.RED:
                return moment[this.getIndex(position, cube.g1, cube.b1)] - moment[this.getIndex(position, cube.g1, cube.b0)] - moment[this.getIndex(position, cube.g0, cube.b1)] + moment[this.getIndex(position, cube.g0, cube.b0)];
            case directions.GREEN:
                return moment[this.getIndex(cube.r1, position, cube.b1)] - moment[this.getIndex(cube.r1, position, cube.b0)] - moment[this.getIndex(cube.r0, position, cube.b1)] + moment[this.getIndex(cube.r0, position, cube.b0)];
            case directions.BLUE:
                return moment[this.getIndex(cube.r1, cube.g1, position)] - moment[this.getIndex(cube.r1, cube.g0, position)] - moment[this.getIndex(cube.r0, cube.g1, position)] + moment[this.getIndex(cube.r0, cube.g0, position)];
            default:
                throw new Error("unexpected direction $direction");
        }
    }
    getIndex(r, g, b) {
        return (r << INDEX_BITS * 2) + (r << INDEX_BITS + 1) + r + (g << INDEX_BITS) + g + b;
    }
}
/**
 * Keeps track of the state of each box created as the Wu  quantization
 * algorithm progresses through dividing the image's pixels as plotted in RGB.
 */ class Box {
    constructor(r0 = 0, r1 = 0, g0 = 0, g1 = 0, b0 = 0, b1 = 0, vol = 0){
        this.r0 = r0;
        this.r1 = r1;
        this.g0 = g0;
        this.g1 = g1;
        this.b0 = b0;
        this.b1 = b1;
        this.vol = vol;
    }
}
/**
 * Represents final result of Wu algorithm.
 */ class CreateBoxesResult {
    /**
     * @param requestedCount how many colors the caller asked to be returned from
     *     quantization.
     * @param resultCount the actual number of colors achieved from quantization.
     *     May be lower than the requested count.
     */ constructor(requestedCount, resultCount){
        this.requestedCount = requestedCount;
        this.resultCount = resultCount;
    }
}
/**
 * Represents the result of calculating where to cut an existing box in such
 * a way to maximize variance between the two new boxes created by a cut.
 */ class MaximizeResult {
    constructor(cutLocation, maximum){
        this.cutLocation = cutLocation;
        this.maximum = maximum;
    }
}

},{"../utils/color_utils.js":"jxfKg","./quantizer_map.js":"dnFIt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dnFIt":[function(require,module,exports) {
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Quantizes an image into a map, with keys of ARGB colors, and values of the
 * number of times that color appears in the image.
 */ // material_color_utilities is designed to have a consistent API across
// platforms and modular components that can be moved around easily. Using a
// class as a namespace facilitates this.
//
// tslint:disable-next-line:class-as-namespace
parcelHelpers.export(exports, "QuantizerMap", ()=>QuantizerMap);
var _colorUtilsJs = require("../utils/color_utils.js");
class QuantizerMap {
    /**
     * @param pixels Colors in ARGB format.
     * @return A Map with keys of ARGB colors, and values of the number of times
     *     the color appears in the image.
     */ static quantize(pixels) {
        const countByColor = new Map();
        for(let i = 0; i < pixels.length; i++){
            const pixel = pixels[i];
            const alpha = _colorUtilsJs.alphaFromArgb(pixel);
            if (alpha < 255) continue;
            countByColor.set(pixel, (countByColor.get(pixel) ?? 0) + 1);
        }
        return countByColor;
    }
}

},{"../utils/color_utils.js":"jxfKg","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1a0jt":[function(require,module,exports) {
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Constructed by a set of values representing the current UI state (such as
 * whether or not its dark theme, what the theme style is, etc.), and
 * provides a set of TonalPalettes that can create colors that fit in
 * with the theme style. Used by DynamicColor to resolve into a color.
 */ parcelHelpers.export(exports, "DynamicScheme", ()=>DynamicScheme);
var _hctJs = require("../hct/hct.js");
var _tonalPaletteJs = require("../palettes/tonal_palette.js");
var _mathUtilsJs = require("../utils/math_utils.js");
class DynamicScheme {
    constructor(args){
        this.sourceColorArgb = args.sourceColorArgb;
        this.variant = args.variant;
        this.contrastLevel = args.contrastLevel;
        this.isDark = args.isDark;
        this.sourceColorHct = (0, _hctJs.Hct).fromInt(args.sourceColorArgb);
        this.primaryPalette = args.primaryPalette;
        this.secondaryPalette = args.secondaryPalette;
        this.tertiaryPalette = args.tertiaryPalette;
        this.neutralPalette = args.neutralPalette;
        this.neutralVariantPalette = args.neutralVariantPalette;
        this.errorPalette = (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(25.0, 84.0);
    }
    /**
     * Support design spec'ing Dynamic Color by schemes that specify hue
     * rotations that should be applied at certain breakpoints.
     * @param sourceColor the source color of the theme, in HCT.
     * @param hues The "breakpoints", i.e. the hues at which a rotation should
     * be apply.
     * @param rotations The rotation that should be applied when source color's
     * hue is >= the same index in hues array, and <= the hue at the next index
     * in hues array.
     */ static getRotatedHue(sourceColor, hues, rotations) {
        const sourceHue = sourceColor.hue;
        if (hues.length !== rotations.length) throw new Error(`mismatch between hue length ${hues.length} & rotations ${rotations.length}`);
        if (rotations.length === 1) return _mathUtilsJs.sanitizeDegreesDouble(sourceColor.hue + rotations[0]);
        const size = hues.length;
        for(let i = 0; i <= size - 2; i++){
            const thisHue = hues[i];
            const nextHue = hues[i + 1];
            if (thisHue < sourceHue && sourceHue < nextHue) return _mathUtilsJs.sanitizeDegreesDouble(sourceHue + rotations[i]);
        }
        // If this statement executes, something is wrong, there should have been a
        // rotation found using the arrays.
        return sourceHue;
    }
}

},{"../hct/hct.js":"kZFIY","../palettes/tonal_palette.js":"ittDp","../utils/math_utils.js":"kq6dU","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aHD7D":[function(require,module,exports) {
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ // This file is automatically generated. Do not modify it.
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Represents a Material color scheme, a mapping of color roles to colors.
 */ parcelHelpers.export(exports, "Scheme", ()=>Scheme);
var _corePaletteJs = require("../palettes/core_palette.js");
class Scheme {
    get primary() {
        return this.props.primary;
    }
    get onPrimary() {
        return this.props.onPrimary;
    }
    get primaryContainer() {
        return this.props.primaryContainer;
    }
    get onPrimaryContainer() {
        return this.props.onPrimaryContainer;
    }
    get secondary() {
        return this.props.secondary;
    }
    get onSecondary() {
        return this.props.onSecondary;
    }
    get secondaryContainer() {
        return this.props.secondaryContainer;
    }
    get onSecondaryContainer() {
        return this.props.onSecondaryContainer;
    }
    get tertiary() {
        return this.props.tertiary;
    }
    get onTertiary() {
        return this.props.onTertiary;
    }
    get tertiaryContainer() {
        return this.props.tertiaryContainer;
    }
    get onTertiaryContainer() {
        return this.props.onTertiaryContainer;
    }
    get error() {
        return this.props.error;
    }
    get onError() {
        return this.props.onError;
    }
    get errorContainer() {
        return this.props.errorContainer;
    }
    get onErrorContainer() {
        return this.props.onErrorContainer;
    }
    get background() {
        return this.props.background;
    }
    get onBackground() {
        return this.props.onBackground;
    }
    get surface() {
        return this.props.surface;
    }
    get onSurface() {
        return this.props.onSurface;
    }
    get surfaceVariant() {
        return this.props.surfaceVariant;
    }
    get onSurfaceVariant() {
        return this.props.onSurfaceVariant;
    }
    get outline() {
        return this.props.outline;
    }
    get outlineVariant() {
        return this.props.outlineVariant;
    }
    get shadow() {
        return this.props.shadow;
    }
    get scrim() {
        return this.props.scrim;
    }
    get inverseSurface() {
        return this.props.inverseSurface;
    }
    get inverseOnSurface() {
        return this.props.inverseOnSurface;
    }
    get inversePrimary() {
        return this.props.inversePrimary;
    }
    /**
     * @param argb ARGB representation of a color.
     * @return Light Material color scheme, based on the color's hue.
     */ static light(argb) {
        return Scheme.lightFromCorePalette((0, _corePaletteJs.CorePalette).of(argb));
    }
    /**
     * @param argb ARGB representation of a color.
     * @return Dark Material color scheme, based on the color's hue.
     */ static dark(argb) {
        return Scheme.darkFromCorePalette((0, _corePaletteJs.CorePalette).of(argb));
    }
    /**
     * @param argb ARGB representation of a color.
     * @return Light Material content color scheme, based on the color's hue.
     */ static lightContent(argb) {
        return Scheme.lightFromCorePalette((0, _corePaletteJs.CorePalette).contentOf(argb));
    }
    /**
     * @param argb ARGB representation of a color.
     * @return Dark Material content color scheme, based on the color's hue.
     */ static darkContent(argb) {
        return Scheme.darkFromCorePalette((0, _corePaletteJs.CorePalette).contentOf(argb));
    }
    /**
     * Light scheme from core palette
     */ static lightFromCorePalette(core) {
        return new Scheme({
            primary: core.a1.tone(40),
            onPrimary: core.a1.tone(100),
            primaryContainer: core.a1.tone(90),
            onPrimaryContainer: core.a1.tone(10),
            secondary: core.a2.tone(40),
            onSecondary: core.a2.tone(100),
            secondaryContainer: core.a2.tone(90),
            onSecondaryContainer: core.a2.tone(10),
            tertiary: core.a3.tone(40),
            onTertiary: core.a3.tone(100),
            tertiaryContainer: core.a3.tone(90),
            onTertiaryContainer: core.a3.tone(10),
            error: core.error.tone(40),
            onError: core.error.tone(100),
            errorContainer: core.error.tone(90),
            onErrorContainer: core.error.tone(10),
            background: core.n1.tone(99),
            onBackground: core.n1.tone(10),
            surface: core.n1.tone(99),
            onSurface: core.n1.tone(10),
            surfaceVariant: core.n2.tone(90),
            onSurfaceVariant: core.n2.tone(30),
            outline: core.n2.tone(50),
            outlineVariant: core.n2.tone(80),
            shadow: core.n1.tone(0),
            scrim: core.n1.tone(0),
            inverseSurface: core.n1.tone(20),
            inverseOnSurface: core.n1.tone(95),
            inversePrimary: core.a1.tone(80)
        });
    }
    /**
     * Dark scheme from core palette
     */ static darkFromCorePalette(core) {
        return new Scheme({
            primary: core.a1.tone(80),
            onPrimary: core.a1.tone(20),
            primaryContainer: core.a1.tone(30),
            onPrimaryContainer: core.a1.tone(90),
            secondary: core.a2.tone(80),
            onSecondary: core.a2.tone(20),
            secondaryContainer: core.a2.tone(30),
            onSecondaryContainer: core.a2.tone(90),
            tertiary: core.a3.tone(80),
            onTertiary: core.a3.tone(20),
            tertiaryContainer: core.a3.tone(30),
            onTertiaryContainer: core.a3.tone(90),
            error: core.error.tone(80),
            onError: core.error.tone(20),
            errorContainer: core.error.tone(30),
            onErrorContainer: core.error.tone(80),
            background: core.n1.tone(10),
            onBackground: core.n1.tone(90),
            surface: core.n1.tone(10),
            onSurface: core.n1.tone(90),
            surfaceVariant: core.n2.tone(30),
            onSurfaceVariant: core.n2.tone(80),
            outline: core.n2.tone(60),
            outlineVariant: core.n2.tone(30),
            shadow: core.n1.tone(0),
            scrim: core.n1.tone(0),
            inverseSurface: core.n1.tone(90),
            inverseOnSurface: core.n1.tone(20),
            inversePrimary: core.a1.tone(40)
        });
    }
    constructor(props){
        this.props = props;
    }
    toJSON() {
        return {
            ...this.props
        };
    }
}

},{"../palettes/core_palette.js":"3U8Jr","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1xV5C":[function(require,module,exports) {
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Represents an Android 12 color scheme, a mapping of color roles to colors.
 */ parcelHelpers.export(exports, "SchemeAndroid", ()=>SchemeAndroid);
var _corePaletteJs = require("../palettes/core_palette.js");
class SchemeAndroid {
    get colorAccentPrimary() {
        return this.props.colorAccentPrimary;
    }
    get colorAccentPrimaryVariant() {
        return this.props.colorAccentPrimaryVariant;
    }
    get colorAccentSecondary() {
        return this.props.colorAccentSecondary;
    }
    get colorAccentSecondaryVariant() {
        return this.props.colorAccentSecondaryVariant;
    }
    get colorAccentTertiary() {
        return this.props.colorAccentTertiary;
    }
    get colorAccentTertiaryVariant() {
        return this.props.colorAccentTertiaryVariant;
    }
    get textColorPrimary() {
        return this.props.textColorPrimary;
    }
    get textColorSecondary() {
        return this.props.textColorSecondary;
    }
    get textColorTertiary() {
        return this.props.textColorTertiary;
    }
    get textColorPrimaryInverse() {
        return this.props.textColorPrimaryInverse;
    }
    get textColorSecondaryInverse() {
        return this.props.textColorSecondaryInverse;
    }
    get textColorTertiaryInverse() {
        return this.props.textColorTertiaryInverse;
    }
    get colorBackground() {
        return this.props.colorBackground;
    }
    get colorBackgroundFloating() {
        return this.props.colorBackgroundFloating;
    }
    get colorSurface() {
        return this.props.colorSurface;
    }
    get colorSurfaceVariant() {
        return this.props.colorSurfaceVariant;
    }
    get colorSurfaceHighlight() {
        return this.props.colorSurfaceHighlight;
    }
    get surfaceHeader() {
        return this.props.surfaceHeader;
    }
    get underSurface() {
        return this.props.underSurface;
    }
    get offState() {
        return this.props.offState;
    }
    get accentSurface() {
        return this.props.accentSurface;
    }
    get textPrimaryOnAccent() {
        return this.props.textPrimaryOnAccent;
    }
    get textSecondaryOnAccent() {
        return this.props.textSecondaryOnAccent;
    }
    get volumeBackground() {
        return this.props.volumeBackground;
    }
    get scrim() {
        return this.props.scrim;
    }
    /**
     * @param argb ARGB representation of a color.
     * @return Light Material color scheme, based on the color's hue.
     */ static light(argb) {
        const core = (0, _corePaletteJs.CorePalette).of(argb);
        return SchemeAndroid.lightFromCorePalette(core);
    }
    /**
     * @param argb ARGB representation of a color.
     * @return Dark Material color scheme, based on the color's hue.
     */ static dark(argb) {
        const core = (0, _corePaletteJs.CorePalette).of(argb);
        return SchemeAndroid.darkFromCorePalette(core);
    }
    /**
     * @param argb ARGB representation of a color.
     * @return Light Android color scheme, based on the color's hue.
     */ static lightContent(argb) {
        const core = (0, _corePaletteJs.CorePalette).contentOf(argb);
        return SchemeAndroid.lightFromCorePalette(core);
    }
    /**
     * @param argb ARGB representation of a color.
     * @return Dark Android color scheme, based on the color's hue.
     */ static darkContent(argb) {
        const core = (0, _corePaletteJs.CorePalette).contentOf(argb);
        return SchemeAndroid.darkFromCorePalette(core);
    }
    /**
     * Light scheme from core palette
     */ static lightFromCorePalette(core) {
        return new SchemeAndroid({
            colorAccentPrimary: core.a1.tone(90),
            colorAccentPrimaryVariant: core.a1.tone(40),
            colorAccentSecondary: core.a2.tone(90),
            colorAccentSecondaryVariant: core.a2.tone(40),
            colorAccentTertiary: core.a3.tone(90),
            colorAccentTertiaryVariant: core.a3.tone(40),
            textColorPrimary: core.n1.tone(10),
            textColorSecondary: core.n2.tone(30),
            textColorTertiary: core.n2.tone(50),
            textColorPrimaryInverse: core.n1.tone(95),
            textColorSecondaryInverse: core.n1.tone(80),
            textColorTertiaryInverse: core.n1.tone(60),
            colorBackground: core.n1.tone(95),
            colorBackgroundFloating: core.n1.tone(98),
            colorSurface: core.n1.tone(98),
            colorSurfaceVariant: core.n1.tone(90),
            colorSurfaceHighlight: core.n1.tone(100),
            surfaceHeader: core.n1.tone(90),
            underSurface: core.n1.tone(0),
            offState: core.n1.tone(20),
            accentSurface: core.a2.tone(95),
            textPrimaryOnAccent: core.n1.tone(10),
            textSecondaryOnAccent: core.n2.tone(30),
            volumeBackground: core.n1.tone(25),
            scrim: core.n1.tone(80)
        });
    }
    /**
     * Dark scheme from core palette
     */ static darkFromCorePalette(core) {
        return new SchemeAndroid({
            colorAccentPrimary: core.a1.tone(90),
            colorAccentPrimaryVariant: core.a1.tone(70),
            colorAccentSecondary: core.a2.tone(90),
            colorAccentSecondaryVariant: core.a2.tone(70),
            colorAccentTertiary: core.a3.tone(90),
            colorAccentTertiaryVariant: core.a3.tone(70),
            textColorPrimary: core.n1.tone(95),
            textColorSecondary: core.n2.tone(80),
            textColorTertiary: core.n2.tone(60),
            textColorPrimaryInverse: core.n1.tone(10),
            textColorSecondaryInverse: core.n1.tone(30),
            textColorTertiaryInverse: core.n1.tone(50),
            colorBackground: core.n1.tone(10),
            colorBackgroundFloating: core.n1.tone(10),
            colorSurface: core.n1.tone(20),
            colorSurfaceVariant: core.n1.tone(30),
            colorSurfaceHighlight: core.n1.tone(35),
            surfaceHeader: core.n1.tone(30),
            underSurface: core.n1.tone(0),
            offState: core.n1.tone(20),
            accentSurface: core.a2.tone(95),
            textPrimaryOnAccent: core.n1.tone(10),
            textSecondaryOnAccent: core.n2.tone(30),
            volumeBackground: core.n1.tone(25),
            scrim: core.n1.tone(80)
        });
    }
    constructor(props){
        this.props = props;
    }
    toJSON() {
        return {
            ...this.props
        };
    }
}

},{"../palettes/core_palette.js":"3U8Jr","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6JZHt":[function(require,module,exports) {
/**
 * @license
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * A scheme that places the source color in `Scheme.primaryContainer`.
 *
 * Primary Container is the source color, adjusted for color relativity.
 * It maintains constant appearance in light mode and dark mode.
 * This adds ~5 tone in light mode, and subtracts ~5 tone in dark mode.
 * Tertiary Container is the complement to the source color, using
 * `TemperatureCache`. It also maintains constant appearance.
 */ parcelHelpers.export(exports, "SchemeContent", ()=>SchemeContent);
var _dislikeAnalyzerJs = require("../dislike/dislike_analyzer.js");
var _tonalPaletteJs = require("../palettes/tonal_palette.js");
var _temperatureCacheJs = require("../temperature/temperature_cache.js");
var _dynamicSchemeJs = require("./dynamic_scheme.js");
var _variantJs = require("./variant.js");
class SchemeContent extends (0, _dynamicSchemeJs.DynamicScheme) {
    constructor(sourceColorHct, isDark, contrastLevel){
        super({
            sourceColorArgb: sourceColorHct.toInt(),
            variant: (0, _variantJs.Variant).CONTENT,
            contrastLevel,
            isDark,
            primaryPalette: (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(sourceColorHct.hue, sourceColorHct.chroma),
            secondaryPalette: (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(sourceColorHct.hue, Math.max(sourceColorHct.chroma - 32.0, sourceColorHct.chroma * 0.5)),
            tertiaryPalette: (0, _tonalPaletteJs.TonalPalette).fromInt((0, _dislikeAnalyzerJs.DislikeAnalyzer).fixIfDisliked(new (0, _temperatureCacheJs.TemperatureCache)(sourceColorHct).analogous(3, 6)[2]).toInt()),
            neutralPalette: (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(sourceColorHct.hue, sourceColorHct.chroma / 8.0),
            neutralVariantPalette: (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(sourceColorHct.hue, sourceColorHct.chroma / 8.0 + 4.0)
        });
    }
}

},{"../dislike/dislike_analyzer.js":"1E0jW","../palettes/tonal_palette.js":"ittDp","../temperature/temperature_cache.js":"i0tPM","./dynamic_scheme.js":"1a0jt","./variant.js":"9aQXl","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"i0tPM":[function(require,module,exports) {
/**
 * @license
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ // This file is automatically generated. Do not modify it.
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Design utilities using color temperature theory.
 *
 * Analogous colors, complementary color, and cache to efficiently, lazily,
 * generate data for calculations when needed.
 */ parcelHelpers.export(exports, "TemperatureCache", ()=>TemperatureCache);
var _hctJs = require("../hct/hct.js");
var _colorUtilsJs = require("../utils/color_utils.js");
var _mathUtilsJs = require("../utils/math_utils.js");
class TemperatureCache {
    constructor(input){
        this.input = input;
        this.hctsByTempCache = [];
        this.hctsByHueCache = [];
        this.tempsByHctCache = new Map();
        this.inputRelativeTemperatureCache = -1;
        this.complementCache = null;
    }
    get hctsByTemp() {
        if (this.hctsByTempCache.length > 0) return this.hctsByTempCache;
        const hcts = this.hctsByHue.concat([
            this.input
        ]);
        const temperaturesByHct = this.tempsByHct;
        hcts.sort((a, b)=>temperaturesByHct.get(a) - temperaturesByHct.get(b));
        this.hctsByTempCache = hcts;
        return hcts;
    }
    get warmest() {
        return this.hctsByTemp[this.hctsByTemp.length - 1];
    }
    get coldest() {
        return this.hctsByTemp[0];
    }
    /**
     * A set of colors with differing hues, equidistant in temperature.
     *
     * In art, this is usually described as a set of 5 colors on a color wheel
     * divided into 12 sections. This method allows provision of either of those
     * values.
     *
     * Behavior is undefined when [count] or [divisions] is 0.
     * When divisions < count, colors repeat.
     *
     * [count] The number of colors to return, includes the input color.
     * [divisions] The number of divisions on the color wheel.
     */ analogous(count = 5, divisions = 12) {
        const startHue = Math.round(this.input.hue);
        const startHct = this.hctsByHue[startHue];
        let lastTemp = this.relativeTemperature(startHct);
        const allColors = [
            startHct
        ];
        let absoluteTotalTempDelta = 0.0;
        for(let i = 0; i < 360; i++){
            const hue = _mathUtilsJs.sanitizeDegreesInt(startHue + i);
            const hct = this.hctsByHue[hue];
            const temp = this.relativeTemperature(hct);
            const tempDelta = Math.abs(temp - lastTemp);
            lastTemp = temp;
            absoluteTotalTempDelta += tempDelta;
        }
        let hueAddend = 1;
        const tempStep = absoluteTotalTempDelta / divisions;
        let totalTempDelta = 0.0;
        lastTemp = this.relativeTemperature(startHct);
        while(allColors.length < divisions){
            const hue = _mathUtilsJs.sanitizeDegreesInt(startHue + hueAddend);
            const hct = this.hctsByHue[hue];
            const temp = this.relativeTemperature(hct);
            const tempDelta = Math.abs(temp - lastTemp);
            totalTempDelta += tempDelta;
            const desiredTotalTempDeltaForIndex = allColors.length * tempStep;
            let indexSatisfied = totalTempDelta >= desiredTotalTempDeltaForIndex;
            let indexAddend = 1;
            // Keep adding this hue to the answers until its temperature is
            // insufficient. This ensures consistent behavior when there aren't
            // [divisions] discrete steps between 0 and 360 in hue with [tempStep]
            // delta in temperature between them.
            //
            // For example, white and black have no analogues: there are no other
            // colors at T100/T0. Therefore, they should just be added to the array
            // as answers.
            while(indexSatisfied && allColors.length < divisions){
                allColors.push(hct);
                const desiredTotalTempDeltaForIndex = (allColors.length + indexAddend) * tempStep;
                indexSatisfied = totalTempDelta >= desiredTotalTempDeltaForIndex;
                indexAddend++;
            }
            lastTemp = temp;
            hueAddend++;
            if (hueAddend > 360) {
                while(allColors.length < divisions)allColors.push(hct);
                break;
            }
        }
        const answers = [
            this.input
        ];
        // First, generate analogues from rotating counter-clockwise.
        const increaseHueCount = Math.floor((count - 1) / 2.0);
        for(let i = 1; i < increaseHueCount + 1; i++){
            let index = 0 - i;
            while(index < 0)index = allColors.length + index;
            if (index >= allColors.length) index = index % allColors.length;
            answers.splice(0, 0, allColors[index]);
        }
        // Second, generate analogues from rotating clockwise.
        const decreaseHueCount = count - increaseHueCount - 1;
        for(let i = 1; i < decreaseHueCount + 1; i++){
            let index = i;
            while(index < 0)index = allColors.length + index;
            if (index >= allColors.length) index = index % allColors.length;
            answers.push(allColors[index]);
        }
        return answers;
    }
    /**
     * A color that complements the input color aesthetically.
     *
     * In art, this is usually described as being across the color wheel.
     * History of this shows intent as a color that is just as cool-warm as the
     * input color is warm-cool.
     */ get complement() {
        if (this.complementCache != null) return this.complementCache;
        const coldestHue = this.coldest.hue;
        const coldestTemp = this.tempsByHct.get(this.coldest);
        const warmestHue = this.warmest.hue;
        const warmestTemp = this.tempsByHct.get(this.warmest);
        const range = warmestTemp - coldestTemp;
        const startHueIsColdestToWarmest = TemperatureCache.isBetween(this.input.hue, coldestHue, warmestHue);
        const startHue = startHueIsColdestToWarmest ? warmestHue : coldestHue;
        const endHue = startHueIsColdestToWarmest ? coldestHue : warmestHue;
        const directionOfRotation = 1.0;
        let smallestError = 1000.0;
        let answer = this.hctsByHue[Math.round(this.input.hue)];
        const complementRelativeTemp = 1.0 - this.inputRelativeTemperature;
        // Find the color in the other section, closest to the inverse percentile
        // of the input color. This is the complement.
        for(let hueAddend = 0.0; hueAddend <= 360.0; hueAddend += 1.0){
            const hue = _mathUtilsJs.sanitizeDegreesDouble(startHue + directionOfRotation * hueAddend);
            if (!TemperatureCache.isBetween(hue, startHue, endHue)) continue;
            const possibleAnswer = this.hctsByHue[Math.round(hue)];
            const relativeTemp = (this.tempsByHct.get(possibleAnswer) - coldestTemp) / range;
            const error = Math.abs(complementRelativeTemp - relativeTemp);
            if (error < smallestError) {
                smallestError = error;
                answer = possibleAnswer;
            }
        }
        this.complementCache = answer;
        return this.complementCache;
    }
    /**
     * Temperature relative to all colors with the same chroma and tone.
     * Value on a scale from 0 to 1.
     */ relativeTemperature(hct) {
        const range = this.tempsByHct.get(this.warmest) - this.tempsByHct.get(this.coldest);
        const differenceFromColdest = this.tempsByHct.get(hct) - this.tempsByHct.get(this.coldest);
        // Handle when there's no difference in temperature between warmest and
        // coldest: for example, at T100, only one color is available, white.
        if (range === 0.0) return 0.5;
        return differenceFromColdest / range;
    }
    /** Relative temperature of the input color. See [relativeTemperature]. */ get inputRelativeTemperature() {
        if (this.inputRelativeTemperatureCache >= 0.0) return this.inputRelativeTemperatureCache;
        this.inputRelativeTemperatureCache = this.relativeTemperature(this.input);
        return this.inputRelativeTemperatureCache;
    }
    /** A Map with keys of HCTs in [hctsByTemp], values of raw temperature. */ get tempsByHct() {
        if (this.tempsByHctCache.size > 0) return this.tempsByHctCache;
        const allHcts = this.hctsByHue.concat([
            this.input
        ]);
        const temperaturesByHct = new Map();
        for (const e of allHcts)temperaturesByHct.set(e, TemperatureCache.rawTemperature(e));
        this.tempsByHctCache = temperaturesByHct;
        return temperaturesByHct;
    }
    /**
     * HCTs for all hues, with the same chroma/tone as the input.
     * Sorted ascending, hue 0 to 360.
     */ get hctsByHue() {
        if (this.hctsByHueCache.length > 0) return this.hctsByHueCache;
        const hcts = [];
        for(let hue = 0.0; hue <= 360.0; hue += 1.0){
            const colorAtHue = (0, _hctJs.Hct).from(hue, this.input.chroma, this.input.tone);
            hcts.push(colorAtHue);
        }
        this.hctsByHueCache = hcts;
        return this.hctsByHueCache;
    }
    /** Determines if an angle is between two other angles, rotating clockwise. */ static isBetween(angle, a, b) {
        if (a < b) return a <= angle && angle <= b;
        return a <= angle || angle <= b;
    }
    /**
     * Value representing cool-warm factor of a color.
     * Values below 0 are considered cool, above, warm.
     *
     * Color science has researched emotion and harmony, which art uses to select
     * colors. Warm-cool is the foundation of analogous and complementary colors.
     * See:
     * - Li-Chen Ou's Chapter 19 in Handbook of Color Psychology (2015).
     * - Josef Albers' Interaction of Color chapters 19 and 21.
     *
     * Implementation of Ou, Woodcock and Wright's algorithm, which uses
     * L*a*b* / LCH color space.
     * Return value has these properties:
     * - Values below 0 are cool, above 0 are warm.
     * - Lower bound: -0.52 - (chroma ^ 1.07 / 20). L*a*b* chroma is infinite.
     *   Assuming max of 130 chroma, -9.66.
     * - Upper bound: -0.52 + (chroma ^ 1.07 / 20). L*a*b* chroma is infinite.
     *   Assuming max of 130 chroma, 8.61.
     */ static rawTemperature(color) {
        const lab = _colorUtilsJs.labFromArgb(color.toInt());
        const hue = _mathUtilsJs.sanitizeDegreesDouble(Math.atan2(lab[2], lab[1]) * 180.0 / Math.PI);
        const chroma = Math.sqrt(lab[1] * lab[1] + lab[2] * lab[2]);
        const temperature = -0.5 + 0.02 * Math.pow(chroma, 1.07) * Math.cos(_mathUtilsJs.sanitizeDegreesDouble(hue - 50.0) * Math.PI / 180.0);
        return temperature;
    }
}

},{"../hct/hct.js":"kZFIY","../utils/color_utils.js":"jxfKg","../utils/math_utils.js":"kq6dU","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"53Rs4":[function(require,module,exports) {
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * A Dynamic Color theme that is intentionally detached from the source color.
 */ parcelHelpers.export(exports, "SchemeExpressive", ()=>SchemeExpressive);
var _tonalPaletteJs = require("../palettes/tonal_palette.js");
var _mathUtilsJs = require("../utils/math_utils.js");
var _dynamicSchemeJs = require("./dynamic_scheme.js");
var _variantJs = require("./variant.js");
class SchemeExpressive extends (0, _dynamicSchemeJs.DynamicScheme) {
    constructor(sourceColorHct, isDark, contrastLevel){
        super({
            sourceColorArgb: sourceColorHct.toInt(),
            variant: (0, _variantJs.Variant).EXPRESSIVE,
            contrastLevel,
            isDark,
            primaryPalette: (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(_mathUtilsJs.sanitizeDegreesDouble(sourceColorHct.hue + 240.0), 40.0),
            secondaryPalette: (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma((0, _dynamicSchemeJs.DynamicScheme).getRotatedHue(sourceColorHct, SchemeExpressive.hues, SchemeExpressive.secondaryRotations), 24.0),
            tertiaryPalette: (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma((0, _dynamicSchemeJs.DynamicScheme).getRotatedHue(sourceColorHct, SchemeExpressive.hues, SchemeExpressive.tertiaryRotations), 32.0),
            neutralPalette: (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(sourceColorHct.hue + 15, 8.0),
            neutralVariantPalette: (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(sourceColorHct.hue + 15, 12.0)
        });
    }
}
/**
 * Hues (in degrees) used at breakpoints such that designers can specify a
 * hue rotation that occurs at a given break point.
 */ SchemeExpressive.hues = [
    0.0,
    21.0,
    51.0,
    121.0,
    151.0,
    191.0,
    271.0,
    321.0,
    360.0
];
/**
 * Hue rotations (in degrees) of the Secondary [TonalPalette],
 * corresponding to the breakpoints in [hues].
 */ SchemeExpressive.secondaryRotations = [
    45.0,
    95.0,
    45.0,
    20.0,
    45.0,
    90.0,
    45.0,
    45.0,
    45.0
];
/**
 * Hue rotations (in degrees) of the Tertiary [TonalPalette],
 * corresponding to the breakpoints in [hues].
 */ SchemeExpressive.tertiaryRotations = [
    120.0,
    120.0,
    20.0,
    45.0,
    20.0,
    15.0,
    20.0,
    120.0,
    120.0
];

},{"../palettes/tonal_palette.js":"ittDp","../utils/math_utils.js":"kq6dU","./dynamic_scheme.js":"1a0jt","./variant.js":"9aQXl","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ih7MR":[function(require,module,exports) {
/**
 * @license
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * A scheme that places the source color in `Scheme.primaryContainer`.
 *
 * Primary Container is the source color, adjusted for color relativity.
 * It maintains constant appearance in light mode and dark mode.
 * This adds ~5 tone in light mode, and subtracts ~5 tone in dark mode.
 * Tertiary Container is the complement to the source color, using
 * `TemperatureCache`. It also maintains constant appearance.
 */ parcelHelpers.export(exports, "SchemeFidelity", ()=>SchemeFidelity);
var _dislikeAnalyzerJs = require("../dislike/dislike_analyzer.js");
var _tonalPaletteJs = require("../palettes/tonal_palette.js");
var _temperatureCacheJs = require("../temperature/temperature_cache.js");
var _dynamicSchemeJs = require("./dynamic_scheme.js");
var _variantJs = require("./variant.js");
class SchemeFidelity extends (0, _dynamicSchemeJs.DynamicScheme) {
    constructor(sourceColorHct, isDark, contrastLevel){
        super({
            sourceColorArgb: sourceColorHct.toInt(),
            variant: (0, _variantJs.Variant).FIDELITY,
            contrastLevel,
            isDark,
            primaryPalette: (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(sourceColorHct.hue, sourceColorHct.chroma),
            secondaryPalette: (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(sourceColorHct.hue, Math.max(sourceColorHct.chroma - 32.0, sourceColorHct.chroma * 0.5)),
            tertiaryPalette: (0, _tonalPaletteJs.TonalPalette).fromInt((0, _dislikeAnalyzerJs.DislikeAnalyzer).fixIfDisliked(new (0, _temperatureCacheJs.TemperatureCache)(sourceColorHct).complement).toInt()),
            neutralPalette: (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(sourceColorHct.hue, sourceColorHct.chroma / 8.0),
            neutralVariantPalette: (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(sourceColorHct.hue, sourceColorHct.chroma / 8.0 + 4.0)
        });
    }
}

},{"../dislike/dislike_analyzer.js":"1E0jW","../palettes/tonal_palette.js":"ittDp","../temperature/temperature_cache.js":"i0tPM","./dynamic_scheme.js":"1a0jt","./variant.js":"9aQXl","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fE0x6":[function(require,module,exports) {
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/** A Dynamic Color theme that is grayscale. */ parcelHelpers.export(exports, "SchemeMonochrome", ()=>SchemeMonochrome);
var _tonalPaletteJs = require("../palettes/tonal_palette.js");
var _dynamicSchemeJs = require("./dynamic_scheme.js");
var _variantJs = require("./variant.js");
class SchemeMonochrome extends (0, _dynamicSchemeJs.DynamicScheme) {
    constructor(sourceColorHct, isDark, contrastLevel){
        super({
            sourceColorArgb: sourceColorHct.toInt(),
            variant: (0, _variantJs.Variant).MONOCHROME,
            contrastLevel,
            isDark,
            primaryPalette: (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(sourceColorHct.hue, 0.0),
            secondaryPalette: (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(sourceColorHct.hue, 0.0),
            tertiaryPalette: (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(sourceColorHct.hue, 0.0),
            neutralPalette: (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(sourceColorHct.hue, 0.0),
            neutralVariantPalette: (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(sourceColorHct.hue, 0.0)
        });
    }
}

},{"../palettes/tonal_palette.js":"ittDp","./dynamic_scheme.js":"1a0jt","./variant.js":"9aQXl","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fRIKg":[function(require,module,exports) {
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/** A Dynamic Color theme that is near grayscale. */ parcelHelpers.export(exports, "SchemeNeutral", ()=>SchemeNeutral);
var _tonalPaletteJs = require("../palettes/tonal_palette.js");
var _dynamicSchemeJs = require("./dynamic_scheme.js");
var _variantJs = require("./variant.js");
class SchemeNeutral extends (0, _dynamicSchemeJs.DynamicScheme) {
    constructor(sourceColorHct, isDark, contrastLevel){
        super({
            sourceColorArgb: sourceColorHct.toInt(),
            variant: (0, _variantJs.Variant).NEUTRAL,
            contrastLevel,
            isDark,
            primaryPalette: (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(sourceColorHct.hue, 12.0),
            secondaryPalette: (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(sourceColorHct.hue, 8.0),
            tertiaryPalette: (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(sourceColorHct.hue, 16.0),
            neutralPalette: (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(sourceColorHct.hue, 2.0),
            neutralVariantPalette: (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(sourceColorHct.hue, 2.0)
        });
    }
}

},{"../palettes/tonal_palette.js":"ittDp","./dynamic_scheme.js":"1a0jt","./variant.js":"9aQXl","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"c2QcW":[function(require,module,exports) {
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * A Dynamic Color theme with low to medium colorfulness and a Tertiary
 * TonalPalette with a hue related to the source color.
 *
 * The default Material You theme on Android 12 and 13.
 */ parcelHelpers.export(exports, "SchemeTonalSpot", ()=>SchemeTonalSpot);
var _tonalPaletteJs = require("../palettes/tonal_palette.js");
var _mathUtilsJs = require("../utils/math_utils.js");
var _dynamicSchemeJs = require("./dynamic_scheme.js");
var _variantJs = require("./variant.js");
class SchemeTonalSpot extends (0, _dynamicSchemeJs.DynamicScheme) {
    constructor(sourceColorHct, isDark, contrastLevel){
        super({
            sourceColorArgb: sourceColorHct.toInt(),
            variant: (0, _variantJs.Variant).TONAL_SPOT,
            contrastLevel,
            isDark,
            primaryPalette: (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(sourceColorHct.hue, 36.0),
            secondaryPalette: (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(sourceColorHct.hue, 16.0),
            tertiaryPalette: (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(_mathUtilsJs.sanitizeDegreesDouble(sourceColorHct.hue + 60.0), 24.0),
            neutralPalette: (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(sourceColorHct.hue, 6.0),
            neutralVariantPalette: (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(sourceColorHct.hue, 8.0)
        });
    }
}

},{"../palettes/tonal_palette.js":"ittDp","../utils/math_utils.js":"kq6dU","./dynamic_scheme.js":"1a0jt","./variant.js":"9aQXl","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8t3zU":[function(require,module,exports) {
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * A Dynamic Color theme that maxes out colorfulness at each position in the
 * Primary Tonal Palette.
 */ parcelHelpers.export(exports, "SchemeVibrant", ()=>SchemeVibrant);
var _tonalPaletteJs = require("../palettes/tonal_palette.js");
var _dynamicSchemeJs = require("./dynamic_scheme.js");
var _variantJs = require("./variant.js");
class SchemeVibrant extends (0, _dynamicSchemeJs.DynamicScheme) {
    constructor(sourceColorHct, isDark, contrastLevel){
        super({
            sourceColorArgb: sourceColorHct.toInt(),
            variant: (0, _variantJs.Variant).VIBRANT,
            contrastLevel,
            isDark,
            primaryPalette: (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(sourceColorHct.hue, 200.0),
            secondaryPalette: (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma((0, _dynamicSchemeJs.DynamicScheme).getRotatedHue(sourceColorHct, SchemeVibrant.hues, SchemeVibrant.secondaryRotations), 24.0),
            tertiaryPalette: (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma((0, _dynamicSchemeJs.DynamicScheme).getRotatedHue(sourceColorHct, SchemeVibrant.hues, SchemeVibrant.tertiaryRotations), 32.0),
            neutralPalette: (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(sourceColorHct.hue, 10.0),
            neutralVariantPalette: (0, _tonalPaletteJs.TonalPalette).fromHueAndChroma(sourceColorHct.hue, 12.0)
        });
    }
}
/**
 * Hues (in degrees) used at breakpoints such that designers can specify a
 * hue rotation that occurs at a given break point.
 */ SchemeVibrant.hues = [
    0.0,
    41.0,
    61.0,
    101.0,
    131.0,
    181.0,
    251.0,
    301.0,
    360.0
];
/**
 * Hue rotations (in degrees) of the Secondary [TonalPalette],
 * corresponding to the breakpoints in [hues].
 */ SchemeVibrant.secondaryRotations = [
    18.0,
    15.0,
    10.0,
    12.0,
    15.0,
    18.0,
    15.0,
    12.0,
    12.0
];
/**
 * Hue rotations (in degrees) of the Tertiary [TonalPalette],
 * corresponding to the breakpoints in [hues].
 */ SchemeVibrant.tertiaryRotations = [
    35.0,
    30.0,
    20.0,
    25.0,
    30.0,
    35.0,
    30.0,
    25.0,
    25.0
];

},{"../palettes/tonal_palette.js":"ittDp","./dynamic_scheme.js":"1a0jt","./variant.js":"9aQXl","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4Emny":[function(require,module,exports) {
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 *  Given a large set of colors, remove colors that are unsuitable for a UI
 *  theme, and rank the rest based on suitability.
 *
 *  Enables use of a high cluster count for image quantization, thus ensuring
 *  colors aren't muddied, while curating the high cluster count to a much
 *  smaller number of appropriate choices.
 */ parcelHelpers.export(exports, "Score", ()=>Score);
var _hctJs = require("../hct/hct.js");
var _mathUtilsJs = require("../utils/math_utils.js");
const SCORE_OPTION_DEFAULTS = {
    desired: 4,
    fallbackColorARGB: 0xff4285f4,
    filter: true
};
function compare(a, b) {
    if (a.score > b.score) return -1;
    else if (a.score < b.score) return 1;
    return 0;
}
class Score {
    constructor(){}
    /**
     * Given a map with keys of colors and values of how often the color appears,
     * rank the colors based on suitability for being used for a UI theme.
     *
     * @param colorsToPopulation map with keys of colors and values of how often
     *     the color appears, usually from a source image.
     * @param {ScoreOptions} options optional parameters.
     * @return Colors sorted by suitability for a UI theme. The most suitable
     *     color is the first item, the least suitable is the last. There will
     *     always be at least one color returned. If all the input colors
     *     were not suitable for a theme, a default fallback color will be
     *     provided, Google Blue.
     */ static score(colorsToPopulation, options) {
        const { desired, fallbackColorARGB, filter } = {
            ...SCORE_OPTION_DEFAULTS,
            ...options
        };
        // Get the HCT color for each Argb value, while finding the per hue count and
        // total count.
        const colorsHct = [];
        const huePopulation = new Array(360).fill(0);
        let populationSum = 0;
        for (const [argb, population] of colorsToPopulation.entries()){
            const hct = (0, _hctJs.Hct).fromInt(argb);
            colorsHct.push(hct);
            const hue = Math.floor(hct.hue);
            huePopulation[hue] += population;
            populationSum += population;
        }
        // Hues with more usage in neighboring 30 degree slice get a larger number.
        const hueExcitedProportions = new Array(360).fill(0.0);
        for(let hue = 0; hue < 360; hue++){
            const proportion = huePopulation[hue] / populationSum;
            for(let i = hue - 14; i < hue + 16; i++){
                const neighborHue = _mathUtilsJs.sanitizeDegreesInt(i);
                hueExcitedProportions[neighborHue] += proportion;
            }
        }
        // Scores each HCT color based on usage and chroma, while optionally
        // filtering out values that do not have enough chroma or usage.
        const scoredHct = new Array();
        for (const hct of colorsHct){
            const hue = _mathUtilsJs.sanitizeDegreesInt(Math.round(hct.hue));
            const proportion = hueExcitedProportions[hue];
            if (filter && (hct.chroma < Score.CUTOFF_CHROMA || proportion <= Score.CUTOFF_EXCITED_PROPORTION)) continue;
            const proportionScore = proportion * 100.0 * Score.WEIGHT_PROPORTION;
            const chromaWeight = hct.chroma < Score.TARGET_CHROMA ? Score.WEIGHT_CHROMA_BELOW : Score.WEIGHT_CHROMA_ABOVE;
            const chromaScore = (hct.chroma - Score.TARGET_CHROMA) * chromaWeight;
            const score = proportionScore + chromaScore;
            scoredHct.push({
                hct,
                score
            });
        }
        // Sorted so that colors with higher scores come first.
        scoredHct.sort(compare);
        // Iterates through potential hue differences in degrees in order to select
        // the colors with the largest distribution of hues possible. Starting at
        // 90 degrees(maximum difference for 4 colors) then decreasing down to a
        // 15 degree minimum.
        const chosenColors = [];
        for(let differenceDegrees = 90; differenceDegrees >= 15; differenceDegrees--){
            chosenColors.length = 0;
            for (const { hct } of scoredHct){
                const duplicateHue = chosenColors.find((chosenHct)=>{
                    return _mathUtilsJs.differenceDegrees(hct.hue, chosenHct.hue) < differenceDegrees;
                });
                if (!duplicateHue) chosenColors.push(hct);
                if (chosenColors.length >= desired) break;
            }
            if (chosenColors.length >= desired) break;
        }
        const colors = [];
        if (chosenColors.length === 0) colors.push(fallbackColorARGB);
        for (const chosenHct of chosenColors)colors.push(chosenHct.toInt());
        return colors;
    }
}
Score.TARGET_CHROMA = 48.0; // A1 Chroma
Score.WEIGHT_PROPORTION = 0.7;
Score.WEIGHT_CHROMA_ABOVE = 0.3;
Score.WEIGHT_CHROMA_BELOW = 0.1;
Score.CUTOFF_CHROMA = 5.0;
Score.CUTOFF_EXCITED_PROPORTION = 0.01;

},{"../hct/hct.js":"kZFIY","../utils/math_utils.js":"kq6dU","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2nEvy":[function(require,module,exports) {
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Utility methods for hexadecimal representations of colors.
 */ /**
 * @param argb ARGB representation of a color.
 * @return Hex string representing color, ex. #ff0000 for red.
 */ parcelHelpers.export(exports, "hexFromArgb", ()=>hexFromArgb);
/**
 * @param hex String representing color as hex code. Accepts strings with or
 *     without leading #, and string representing the color using 3, 6, or 8
 *     hex characters.
 * @return ARGB representation of color.
 */ parcelHelpers.export(exports, "argbFromHex", ()=>argbFromHex);
var _colorUtilsJs = require("./color_utils.js");
function hexFromArgb(argb) {
    const r = _colorUtilsJs.redFromArgb(argb);
    const g = _colorUtilsJs.greenFromArgb(argb);
    const b = _colorUtilsJs.blueFromArgb(argb);
    const outParts = [
        r.toString(16),
        g.toString(16),
        b.toString(16)
    ];
    // Pad single-digit output values
    for (const [i, part] of outParts.entries())if (part.length === 1) outParts[i] = "0" + part;
    return "#" + outParts.join("");
}
function argbFromHex(hex) {
    hex = hex.replace("#", "");
    const isThree = hex.length === 3;
    const isSix = hex.length === 6;
    const isEight = hex.length === 8;
    if (!isThree && !isSix && !isEight) throw new Error("unexpected hex " + hex);
    let r = 0;
    let g = 0;
    let b = 0;
    if (isThree) {
        r = parseIntHex(hex.slice(0, 1).repeat(2));
        g = parseIntHex(hex.slice(1, 2).repeat(2));
        b = parseIntHex(hex.slice(2, 3).repeat(2));
    } else if (isSix) {
        r = parseIntHex(hex.slice(0, 2));
        g = parseIntHex(hex.slice(2, 4));
        b = parseIntHex(hex.slice(4, 6));
    } else if (isEight) {
        r = parseIntHex(hex.slice(2, 4));
        g = parseIntHex(hex.slice(4, 6));
        b = parseIntHex(hex.slice(6, 8));
    }
    return (-16777216 | (r & 0x0ff) << 16 | (g & 0x0ff) << 8 | b & 0x0ff) >>> 0;
}
function parseIntHex(value) {
    // tslint:disable-next-line:ban
    return parseInt(value, 16);
}

},{"./color_utils.js":"jxfKg","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5AKWo":[function(require,module,exports) {
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Get the source color from an image.
 *
 * @param image The image element
 * @return Source color - the color most suitable for creating a UI theme
 */ parcelHelpers.export(exports, "sourceColorFromImage", ()=>sourceColorFromImage);
var _quantizerCelebiJs = require("../quantize/quantizer_celebi.js");
var _scoreJs = require("../score/score.js");
var _colorUtilsJs = require("./color_utils.js");
async function sourceColorFromImage(image) {
    // Convert Image data to Pixel Array
    const imageBytes = await new Promise((resolve, reject)=>{
        const canvas = document.createElement("canvas");
        const context = canvas.getContext("2d");
        if (!context) {
            reject(new Error("Could not get canvas context"));
            return;
        }
        const callback = ()=>{
            canvas.width = image.width;
            canvas.height = image.height;
            context.drawImage(image, 0, 0);
            let rect = [
                0,
                0,
                image.width,
                image.height
            ];
            const area = image.dataset["area"];
            if (area && /^\d+(\s*,\s*\d+){3}$/.test(area)) rect = area.split(/\s*,\s*/).map((s)=>{
                // tslint:disable-next-line:ban
                return parseInt(s, 10);
            });
            const [sx, sy, sw, sh] = rect;
            resolve(context.getImageData(sx, sy, sw, sh).data);
        };
        if (image.complete) callback();
        else image.onload = callback;
    });
    // Convert Image data to Pixel Array
    const pixels = [];
    for(let i = 0; i < imageBytes.length; i += 4){
        const r = imageBytes[i];
        const g = imageBytes[i + 1];
        const b = imageBytes[i + 2];
        const a = imageBytes[i + 3];
        if (a < 255) continue;
        const argb = (0, _colorUtilsJs.argbFromRgb)(r, g, b);
        pixels.push(argb);
    }
    // Convert Pixels to Material Colors
    const result = (0, _quantizerCelebiJs.QuantizerCelebi).quantize(pixels, 128);
    const ranked = (0, _scoreJs.Score).score(result);
    const top = ranked[0];
    return top;
}

},{"../quantize/quantizer_celebi.js":"aIQny","../score/score.js":"4Emny","./color_utils.js":"jxfKg","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4xOIS":[function(require,module,exports) {
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Generate a theme from a source color
 *
 * @param source Source color
 * @param customColors Array of custom colors
 * @return Theme object
 */ parcelHelpers.export(exports, "themeFromSourceColor", ()=>themeFromSourceColor);
/**
 * Generate a theme from an image source
 *
 * @param image Image element
 * @param customColors Array of custom colors
 * @return Theme object
 */ parcelHelpers.export(exports, "themeFromImage", ()=>themeFromImage);
/**
 * Generate custom color group from source and target color
 *
 * @param source Source color
 * @param color Custom color
 * @return Custom color group
 *
 * @link https://m3.material.io/styles/color/the-color-system/color-roles
 */ parcelHelpers.export(exports, "customColor", ()=>customColor);
/**
 * Apply a theme to an element
 *
 * @param theme Theme object
 * @param options Options
 */ parcelHelpers.export(exports, "applyTheme", ()=>applyTheme);
var _blendJs = require("../blend/blend.js");
var _corePaletteJs = require("../palettes/core_palette.js");
var _schemeJs = require("../scheme/scheme.js");
var _imageUtilsJs = require("./image_utils.js");
var _stringUtilsJs = require("./string_utils.js");
function themeFromSourceColor(source, customColors = []) {
    const palette = (0, _corePaletteJs.CorePalette).of(source);
    return {
        source,
        schemes: {
            light: (0, _schemeJs.Scheme).light(source),
            dark: (0, _schemeJs.Scheme).dark(source)
        },
        palettes: {
            primary: palette.a1,
            secondary: palette.a2,
            tertiary: palette.a3,
            neutral: palette.n1,
            neutralVariant: palette.n2,
            error: palette.error
        },
        customColors: customColors.map((c)=>customColor(source, c))
    };
}
async function themeFromImage(image, customColors = []) {
    const source = await (0, _imageUtilsJs.sourceColorFromImage)(image);
    return themeFromSourceColor(source, customColors);
}
function customColor(source, color) {
    let value = color.value;
    const from = value;
    const to = source;
    if (color.blend) value = (0, _blendJs.Blend).harmonize(from, to);
    const palette = (0, _corePaletteJs.CorePalette).of(value);
    const tones = palette.a1;
    return {
        color,
        value,
        light: {
            color: tones.tone(40),
            onColor: tones.tone(100),
            colorContainer: tones.tone(90),
            onColorContainer: tones.tone(10)
        },
        dark: {
            color: tones.tone(80),
            onColor: tones.tone(20),
            colorContainer: tones.tone(30),
            onColorContainer: tones.tone(90)
        }
    };
}
function applyTheme(theme, options) {
    const target = options?.target || document.body;
    const isDark = options?.dark ?? false;
    const scheme = isDark ? theme.schemes.dark : theme.schemes.light;
    setSchemeProperties(target, scheme);
    if (options?.brightnessSuffix) {
        setSchemeProperties(target, theme.schemes.dark, "-dark");
        setSchemeProperties(target, theme.schemes.light, "-light");
    }
    if (options?.paletteTones) {
        const tones = options?.paletteTones ?? [];
        for (const [key, palette] of Object.entries(theme.palettes)){
            const paletteKey = key.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
            for (const tone of tones){
                const token = `--md-ref-palette-${paletteKey}-${paletteKey}${tone}`;
                const color = (0, _stringUtilsJs.hexFromArgb)(palette.tone(tone));
                target.style.setProperty(token, color);
            }
        }
    }
}
function setSchemeProperties(target, scheme, suffix = "") {
    for (const [key, value] of Object.entries(scheme.toJSON())){
        const token = key.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
        const color = (0, _stringUtilsJs.hexFromArgb)(value);
        target.style.setProperty(`--md-sys-color-${token}${suffix}`, color);
    }
}

},{"../blend/blend.js":"iugs8","../palettes/core_palette.js":"3U8Jr","../scheme/scheme.js":"aHD7D","./image_utils.js":"5AKWo","./string_utils.js":"2nEvy","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"YQZ54":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getTheme", ()=>getTheme);
var _js = require("@mdui/jq/$.js");
const getTheme = (target = document.documentElement)=>{
    const element = (0, _js.$)(target)[0];
    const themes = [
        "light",
        "dark",
        "auto"
    ];
    const prefix = "mdui-theme-";
    return Array.from(element.classList).find((className)=>themes.map((theme)=>prefix + theme).includes(className))?.slice(prefix.length) ?? "light";
};

},{"@mdui/jq/$.js":"dZx9v","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jbbTL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "observeResize", ()=>(0, _observeResizeJs.observeResize));
var _observeResizeJs = require("@mdui/shared/helpers/observeResize.js");

},{"@mdui/shared/helpers/observeResize.js":"fLGE3","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dXZMs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "prompt", ()=>prompt);
var _isPromise = require("is-promise");
var _isPromiseDefault = parcelHelpers.interopDefault(_isPromise);
var _js = require("@mdui/jq/$.js");
var _onJs = require("@mdui/jq/methods/on.js");
var _helperJs = require("@mdui/jq/shared/helper.js");
var _textFieldJs = require("../components/text-field.js");
var _dialogJs = require("./dialog.js");
const defaultOptions = {
    confirmText: "\u786E\u5B9A",
    cancelText: "\u53D6\u6D88",
    onConfirm: (0, _helperJs.returnTrue),
    onCancel: (0, _helperJs.returnTrue),
    validator: (0, _helperJs.returnTrue),
    textFieldOptions: {}
};
const prompt = (options)=>{
    const mergedOptions = Object.assign({}, defaultOptions, options);
    const properties = [
        "headline",
        "description",
        "icon",
        "closeOnEsc",
        "closeOnOverlayClick",
        "stackedActions",
        "queue",
        "onOpen",
        "onOpened",
        "onClose",
        "onClosed",
        "onOverlayClick"
    ];
    const textField = new (0, _textFieldJs.TextField)();
    Object.entries(mergedOptions.textFieldOptions).forEach(([key, value])=>{
        // @ts-ignore
        textField[key] = value;
    });
    return new Promise((resolve, reject)=>{
        let isResolve = false;
        const dialog = (0, _dialogJs.dialog)({
            ...Object.fromEntries(properties.filter((key)=>!(0, _helperJs.isUndefined)(mergedOptions[key])).map((key)=>[
                    key,
                    mergedOptions[key]
                ])),
            body: textField,
            actions: [
                {
                    text: mergedOptions.cancelText,
                    onClick: (dialog)=>{
                        return mergedOptions.onCancel.call(dialog, textField.value, dialog);
                    }
                },
                {
                    text: mergedOptions.confirmText,
                    onClick: (dialog)=>{
                        const onConfirm = ()=>{
                            const clickResult = mergedOptions.onConfirm.call(dialog, textField.value, dialog);
                            if ((0, _isPromiseDefault.default)(clickResult)) clickResult.then(()=>{
                                isResolve = true;
                            });
                            else if (clickResult !== false) isResolve = true;
                            return clickResult;
                        };
                        // 原生验证
                        textField.setCustomValidity("");
                        if (!textField.reportValidity()) return false;
                        // validator 函数验证
                        const validateResult = mergedOptions.validator.call(textField, textField.value);
                        if ((0, _helperJs.isBoolean)(validateResult) && !validateResult) {
                            textField.setCustomValidity(" ");
                            return false;
                        }
                        if ((0, _helperJs.isString)(validateResult)) {
                            textField.setCustomValidity(validateResult);
                            return false;
                        }
                        if ((0, _isPromiseDefault.default)(validateResult)) return new Promise((resolve, reject)=>{
                            validateResult.then(resolve).catch((reason)=>{
                                textField.setCustomValidity(reason);
                                reject(reason);
                            });
                        });
                        return onConfirm();
                    }
                }
            ]
        });
        (0, _js.$)(dialog).on("close", ()=>{
            isResolve ? resolve(textField.value) : reject();
        });
    });
};

},{"is-promise":"hrWMv","@mdui/jq/$.js":"dZx9v","@mdui/jq/methods/on.js":"e22Mv","@mdui/jq/shared/helper.js":"4D489","../components/text-field.js":"aJEWE","./dialog.js":"jspWZ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"H0OK6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "removeColorScheme", ()=>removeColorScheme);
var _colorSchemeJs = require("./utils/colorScheme.js");
const removeColorScheme = (target = document.documentElement)=>{
    (0, _colorSchemeJs.remove)(target);
};

},{"./utils/colorScheme.js":"hAcqm","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hAcqm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "remove", ()=>remove);
parcelHelpers.export(exports, "setFromSource", ()=>setFromSource);
var _materialColorUtilities = require("@material/material-color-utilities");
var _ssrWindow = require("ssr-window");
var _js = require("@mdui/jq/$.js");
var _uniqueJs = require("@mdui/jq/functions/unique.js");
var _addClassJs = require("@mdui/jq/methods/addClass.js");
var _appendJs = require("@mdui/jq/methods/append.js");
var _getJs = require("@mdui/jq/methods/get.js");
var _removeJs = require("@mdui/jq/methods/remove.js");
var _removeClassJs = require("@mdui/jq/methods/removeClass.js");
var _helperJs = require("@mdui/jq/shared/helper.js");
const themeArr = [
    "light",
    "dark"
];
const prefix = "mdui-custom-color-scheme-"; // 类名前缀
let themeIndex = 0;
const rgbFromArgb = (source)=>{
    const red = (0, _materialColorUtilities.redFromArgb)(source);
    const green = (0, _materialColorUtilities.greenFromArgb)(source);
    const blue = (0, _materialColorUtilities.blueFromArgb)(source);
    return [
        red,
        green,
        blue
    ].join(", ");
};
const remove = (target)=>{
    const $target = (0, _js.$)(target);
    // 找出指定元素上所有的配色方案 CSS class
    let classNames = $target.get().map((element)=>Array.from(element.classList)).flat();
    classNames = (0, _uniqueJs.unique)(classNames).filter((className)=>className.startsWith(prefix));
    // 移除 CSS class
    $target.removeClass(classNames.join(" "));
    // 找出没有被其他元素使用的 CSS class
    const unusedClassNames = classNames.filter((className)=>(0, _js.$)(`.${className}`).length === 0);
    // 移除对应的 <style> 元素
    (0, _js.$)(unusedClassNames.map((i)=>`#${i}`).join(",")).remove();
};
const setFromSource = (source, options)=>{
    const document = (0, _ssrWindow.getDocument)();
    const $target = (0, _js.$)(options?.target || document.documentElement);
    // 生成配色方案
    const schemes = {
        light: (0, _materialColorUtilities.Scheme).light(source).toJSON(),
        dark: (0, _materialColorUtilities.Scheme).dark(source).toJSON()
    };
    // todo 目前 @material/material-color-utilities 库缺失了 8 种颜色，等官方库加上后，可以删除这段代码
    // https://github.com/material-foundation/material-color-utilities/issues/98
    const palette = (0, _materialColorUtilities.CorePalette).of(source);
    Object.assign(schemes.light, {
        "surface-dim": palette.n1.tone(87),
        "surface-bright": palette.n1.tone(98),
        "surface-container-lowest": palette.n1.tone(100),
        "surface-container-low": palette.n1.tone(96),
        "surface-container": palette.n1.tone(94),
        "surface-container-high": palette.n1.tone(92),
        "surface-container-highest": palette.n1.tone(90),
        "surface-tint-color": schemes.light.primary
    });
    Object.assign(schemes.dark, {
        "surface-dim": palette.n1.tone(6),
        "surface-bright": palette.n1.tone(24),
        "surface-container-lowest": palette.n1.tone(4),
        "surface-container-low": palette.n1.tone(10),
        "surface-container": palette.n1.tone(12),
        "surface-container-high": palette.n1.tone(17),
        "surface-container-highest": palette.n1.tone(22),
        "surface-tint-color": schemes.dark.primary
    });
    // 扩充自定义颜色
    (options?.customColors || []).map((color)=>{
        const name = (0, _helperJs.toKebabCase)(color.name);
        const custom = (0, _materialColorUtilities.customColor)(source, {
            name,
            value: (0, _materialColorUtilities.argbFromHex)(color.value),
            blend: true
        });
        themeArr.forEach((theme)=>{
            schemes[theme][name] = custom[theme].color;
            schemes[theme][`on-${name}`] = custom[theme].onColor;
            schemes[theme][`${name}-container`] = custom[theme].colorContainer;
            schemes[theme][`on-${name}-container`] = custom[theme].onColorContainer;
        });
    });
    // 根据配色方案生成 css 变量
    const colorVar = (theme, callback)=>{
        return Object.entries(schemes[theme]).map(([key, value])=>callback((0, _helperJs.toKebabCase)(key), rgbFromArgb(value))).join("");
    };
    const className = prefix + `${source}-${themeIndex++}`;
    // CSS 文本
    const cssText = `.${className} {
  ${colorVar("light", (token, rgb)=>`--mdui-color-${token}-light: ${rgb};`)}
  ${colorVar("dark", (token, rgb)=>`--mdui-color-${token}-dark: ${rgb};`)}
  ${colorVar("light", (token)=>`--mdui-color-${token}: var(--mdui-color-${token}-light);`)}

  color: rgb(var(--mdui-color-on-background));
  background-color: rgb(var(--mdui-color-background));
}

.mdui-theme-dark .${className},
.mdui-theme-dark.${className} {
  ${colorVar("dark", (token)=>`--mdui-color-${token}: var(--mdui-color-${token}-dark);`)}
}

@media (prefers-color-scheme: dark) {
  .mdui-theme-auto .${className},
  .mdui-theme-auto.${className} {
    ${colorVar("dark", (token)=>`--mdui-color-${token}: var(--mdui-color-${token}-dark);`)}
  }
}`;
    // 移除旧的配色方案
    remove($target);
    // 创建 <style> 元素，添加到 head 中
    (0, _js.$)(document.head).append(`<style id="${className}">${cssText}</style>`);
    // 添加新配色方案
    $target.addClass(className);
};

},{"@material/material-color-utilities":"8339m","ssr-window":"3lyfI","@mdui/jq/$.js":"dZx9v","@mdui/jq/functions/unique.js":"7DMxN","@mdui/jq/methods/addClass.js":"eBNUW","@mdui/jq/methods/append.js":"948yF","@mdui/jq/methods/get.js":"bzhq8","@mdui/jq/methods/remove.js":"eOqqE","@mdui/jq/methods/removeClass.js":"iF0be","@mdui/jq/shared/helper.js":"4D489","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gnj45":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "setColorScheme", ()=>setColorScheme);
var _materialColorUtilities = require("@material/material-color-utilities");
var _colorSchemeJs = require("./utils/colorScheme.js");
const setColorScheme = (hex, options)=>{
    const source = (0, _materialColorUtilities.argbFromHex)(hex);
    (0, _colorSchemeJs.setFromSource)(source, options);
};

},{"@material/material-color-utilities":"8339m","./utils/colorScheme.js":"hAcqm","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4PTUC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "setTheme", ()=>setTheme);
var _js = require("@mdui/jq/$.js");
var _addClassJs = require("@mdui/jq/methods/addClass.js");
var _removeClassJs = require("@mdui/jq/methods/removeClass.js");
const setTheme = (theme, target = document.documentElement)=>{
    const $target = (0, _js.$)(target);
    const themes = [
        "light",
        "dark",
        "auto"
    ];
    const prefix = "mdui-theme-";
    $target.removeClass(themes.map((theme)=>prefix + theme).join(" ")).addClass(prefix + theme);
};

},{"@mdui/jq/$.js":"dZx9v","@mdui/jq/methods/addClass.js":"eBNUW","@mdui/jq/methods/removeClass.js":"iF0be","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jQ56X":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "snackbar", ()=>snackbar);
var _isPromise = require("is-promise");
var _isPromiseDefault = parcelHelpers.interopDefault(_isPromise);
var _js = require("@mdui/jq/$.js");
var _appendToJs = require("@mdui/jq/methods/appendTo.js");
var _onJs = require("@mdui/jq/methods/on.js");
var _removeJs = require("@mdui/jq/methods/remove.js");
var _helperJs = require("@mdui/jq/shared/helper.js");
var _queueJs = require("@mdui/shared/helpers/queue.js");
var _snackbarJs = require("../components/snackbar.js");
const queueName = "mdui.functions.snackbar.";
let currentSnackbar = undefined;
const snackbar = (options)=>{
    const snackbar = new (0, _snackbarJs.Snackbar)();
    const $snackbar = (0, _js.$)(snackbar);
    Object.entries(options).forEach(([key, value])=>{
        if (key === "message") snackbar.innerHTML = value;
        else if ([
            "onClick",
            "onActionClick",
            "onOpen",
            "onOpened",
            "onClose",
            "onClosed"
        ].includes(key)) {
            const eventName = (0, _helperJs.toKebabCase)(key.slice(2));
            $snackbar.on(eventName, ()=>{
                if (key === "onActionClick") {
                    const actionClick = (options.onActionClick ?? (0, _helperJs.returnTrue)).call(snackbar, snackbar);
                    if ((0, _isPromiseDefault.default)(actionClick)) {
                        snackbar.actionLoading = true;
                        actionClick.then(()=>{
                            snackbar.open = false;
                        }).finally(()=>{
                            snackbar.actionLoading = false;
                        });
                    } else if (actionClick !== false) snackbar.open = false;
                } else value.call(snackbar, snackbar);
            });
        } else // @ts-ignore
        snackbar[key] = value;
    });
    $snackbar.appendTo("body").on("closed", ()=>{
        $snackbar.remove();
        if (options.queue) {
            currentSnackbar = undefined;
            (0, _queueJs.dequeue)(queueName + options.queue);
        }
    });
    if (!options.queue) setTimeout(()=>{
        snackbar.open = true;
    });
    else if (currentSnackbar) (0, _queueJs.queue)(queueName + options.queue, ()=>{
        snackbar.open = true;
        currentSnackbar = snackbar;
    });
    else {
        setTimeout(()=>{
            snackbar.open = true;
        });
        currentSnackbar = snackbar;
    }
    return snackbar;
};

},{"is-promise":"hrWMv","@mdui/jq/$.js":"dZx9v","@mdui/jq/methods/appendTo.js":"gOUbd","@mdui/jq/methods/on.js":"e22Mv","@mdui/jq/methods/remove.js":"eOqqE","@mdui/jq/shared/helper.js":"4D489","@mdui/shared/helpers/queue.js":"dxEDt","../components/snackbar.js":"gvluW","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kM9OX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "throttle", ()=>(0, _throttleJs.throttle));
var _throttleJs = require("@mdui/shared/helpers/throttle.js");

},{"@mdui/shared/helpers/throttle.js":"jmMxV","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jmMxV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "throttle", ()=>throttle);
var _ssrWindow = require("ssr-window");
const throttle = (func, wait = 0)=>{
    const window = (0, _ssrWindow.getWindow)();
    let timer;
    let result;
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    return function(...args) {
        if (timer === undefined) timer = window.setTimeout(()=>{
            result = func.apply(this, args);
            timer = undefined;
        }, wait);
        return result;
    };
};

},{"ssr-window":"3lyfI","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}]},["iZQ9B","aR1JP"], "aR1JP", "parcelRequirebaba")

//# sourceMappingURL=index.ac9dc4ba.js.map
